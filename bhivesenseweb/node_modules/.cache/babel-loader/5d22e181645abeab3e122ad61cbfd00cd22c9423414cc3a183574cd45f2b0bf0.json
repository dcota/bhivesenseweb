{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDelete from \"../components/ModalUnregisterDevice.vue\";\nimport ModalDetails from \"../components/ModalApiaryNotification.vue\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\n//import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    ModalDelete,\n    ModalDetails\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      searchID: \"\",\n      data: localStorage.token,\n      devices: [],\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      id: \"\",\n      state: \"\",\n      name: \"\",\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      hasHiveEvents: false,\n      hasInterventionEvents: false,\n      timer: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.getEvents();\n    this.timer = setInterval(this.getEvents, 3000);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  methods: {\n    closeDetailsModal() {\n      this.isModalDetailsVisible = false;\n    },\n    closeDeleteModal() {\n      this.isModalDeleteVisible = false;\n    },\n    async detailsModal(id) {\n      //this.toEditID = id;\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      //this.toDeleteID = id;\n      this.isModalDeleteVisible = true;\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getEvents() {\n      this.hiveEvents = [];\n      this.interventionEvents = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (events.length == 0) {\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noNotifications\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].cat == \"hive\") {\n              this.hiveEvents.push({\n                _id: events[i]._id,\n                apiary: events[i].apiary,\n                device: events[i].device,\n                text: events[i].type == \"LIDOPEN\" ? this.translate(\"hiveText\") : \"\"\n              });\n            } else {\n              this.interventionEvents.push({\n                id: events[i]._id,\n                text: events[i].type == \"INTER\" ? this.translate(\"interTExt\") : \"\"\n              });\n            }\n          }\n        }\n        this.hiveEvents.length > 0 ? this.hasHiveEvents = true : this.hasHiveEvents = false;\n        this.interventionEvents.length > 0 ? this.hasInterventionEvents = true : this.hasInterventionEvents = false;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async detail(id) {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.location = response.data.body.location;\n        this.address = response.data.body.address;\n        this.observations = response.data.body.observations;\n        this.regdate = response.data.body.registration_date;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async unregister(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/device/unregister/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"unregisterMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getDevices();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async assign(id) {\n      alert(id);\n      alert(localStorage.getItem(\"apiaryIDtoget\"));\n      await axios.patch(\"https://bhsapi.duartecota.com/device/\" + id + \"/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"assignMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getDevices();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    ignore(id) {\n      alert(id);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDelete","ModalDetails","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","searchID","token","devices","message","type","msg","id","state","name","showsection","isShow","isModalDetailsVisible","isModalDeleteVisible","hasHiveEvents","hasInterventionEvents","timer","computed","level","_id","mounted","getEvents","setInterval","beforeUnmount","clearInterval","methods","closeDetailsModal","closeDeleteModal","detailsModal","detail","deleteModal","translate","prop","hiveEvents","interventionEvents","get","headers","Authorization","then","response","events","body","length","title","text","duration","speed","i","cat","push","apiary","device","catch","error","console","log","location","address","observations","regdate","registration_date","unregister","put","http","getDevices","assign","alert","patch","ignore"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Notifications.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"notificationsTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button\r\n        @click=\"$router.push('/')\"\r\n        type=\"button\"\r\n        class=\"btn mt-4 my-button\"\r\n      >\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n    </section>\r\n    <!--table for hive notifictions-->\r\n    <section class=\"row mt-3\" v-if=\"hasHiveEvents\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"eventsLabel\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\" v-if=\"hasHiveEvents\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2 table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdEvent\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdHive\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n              <td>{{ event.text }}</td>\r\n              <td class=\"text-center\">{{ event.device }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblCardApiary')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"detailsModal(event.apiary)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-info btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblBtnIgnore')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"ignore(event._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fa-solid fa-xmark\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <!--table for intervention notifictions-->\r\n    <section class=\"row mt-3\" v-if=\"hasInterventionEvents\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"eventsLabel\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\" v-if=\"hasInterventionEvents\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2 table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdEvent\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdHive\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n              <td>{{ event.text }}</td>\r\n              <td class=\"text-center\">{{ event.device }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblCardApiary')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"detailsModal(event.apiary)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-info btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblBtnIgnore')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"ignore(event._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fa-solid fa-xmark\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeModalDelete\"\r\n      @unregister=\"toUnregister\"\r\n    />\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeDetailsModal\"\r\n      :location=\"location\"\r\n      :address=\"address\"\r\n      :observations=\"observations\"\r\n      :regdate=\"regdate\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDelete from \"../components/ModalUnregisterDevice.vue\";\r\n  import ModalDetails from \"../components/ModalApiaryNotification.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDelete,\r\n      ModalDetails,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        searchID: \"\",\r\n        data: localStorage.token,\r\n        devices: [],\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        id: \"\",\r\n        state: \"\",\r\n        name: \"\",\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        hasHiveEvents: false,\r\n        hasInterventionEvents: false,\r\n        timer: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getEvents();\r\n      this.timer = setInterval(this.getEvents, 3000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    methods: {\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModal() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async detailsModal(id) {\r\n        //this.toEditID = id;\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        //this.toDeleteID = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getEvents() {\r\n        this.hiveEvents = [];\r\n        this.interventionEvents = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (events.length == 0) {\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noNotifications\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].cat == \"hive\") {\r\n                  this.hiveEvents.push({\r\n                    _id: events[i]._id,\r\n                    apiary: events[i].apiary,\r\n                    device: events[i].device,\r\n                    text:\r\n                      events[i].type == \"LIDOPEN\"\r\n                        ? this.translate(\"hiveText\")\r\n                        : \"\",\r\n                  });\r\n                } else {\r\n                  this.interventionEvents.push({\r\n                    id: events[i]._id,\r\n                    text:\r\n                      events[i].type == \"INTER\"\r\n                        ? this.translate(\"interTExt\")\r\n                        : \"\",\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            this.hiveEvents.length > 0\r\n              ? (this.hasHiveEvents = true)\r\n              : (this.hasHiveEvents = false);\r\n            this.interventionEvents.length > 0\r\n              ? (this.hasInterventionEvents = true)\r\n              : (this.hasInterventionEvents = false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.location = response.data.body.location;\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.regdate = response.data.body.registration_date;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async unregister(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/device/unregister/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"unregisterMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async assign(id) {\r\n        alert(id);\r\n        alert(localStorage.getItem(\"apiaryIDtoget\"));\r\n        await axios\r\n          .patch(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              id +\r\n              \"/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"assignMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      ignore(id) {\r\n        alert(id);\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}