{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport { LOADING_SPINNER_SHOW_MUTATION, GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      data: localStorage.token,\n      users: [],\n      showModal: true,\n      form: {\n        firstname: \"\",\n        lastname: \"\",\n        name: \"\",\n        mobile: \"\",\n        type: \"\",\n        email: \"\",\n        mobile: \"\",\n        bdate: \"\",\n        notifications: false\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      state: true,\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  /*mounted() {\r\n                        this.getUsers();\r\n                      },*/\n  methods: {\n    ...mapMutations({\n      showLoader: LOADING_SPINNER_SHOW_MUTATION\n    }),\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getUsers() {\n      this.usersAccepted = [];\n      this.usersToAccept = [];\n      this.showLoader(true);\n      await axios.get(\"https://cprob-api.herokuapp.com/user\", {\n        //.get(\"http://localhost:3000/user\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.showLoader(false);\n        let users = response.data.body;\n        for (let i = 0; i < users.length; i++) {\n          if (users[i].accepted == true && users[i].level == \"student\") {\n            this.usersAccepted.push({\n              _id: users[i]._id,\n              firstname: users[i].firstname,\n              lastname: users[i].lastname,\n              course: users[i].course,\n              class: users[i].class\n            });\n          } else if (users[i].accepted == false && users[i].level == \"student\") {\n            this.usersToAccept.push({\n              _id: users[i]._id,\n              firstname: users[i].firstname,\n              lastname: users[i].lastname,\n              course: users[i].course,\n              class: users[i].class\n            });\n          }\n        }\n      }).catch(error => {\n        this.showLoader(false);\n        alert(error);\n      });\n    },\n    async acceptStd(_id) {\n      this.showLoader(true);\n      await axios.put(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.put(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(() => {\n        this.message.msg = \"Utilizador aceite!\";\n        this.message.type = \"success\";\n        this.isShow = true;\n        this.showLoader(false);\n        this.getUsers();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async deleteStd(_id) {\n      this.showLoader(true);\n      await axios.delete(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.delete(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(() => {\n        this.message.msg = \"Utilizador eliminado!\";\n        this.message.type = \"success\";\n        this.isShow = true;\n        this.showLoader(false);\n        this.getUsers();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async detail(_id) {\n      this.message.type = \"\", this.message.msg = \"\", this.showLoader(true);\n      await axios.get(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.get(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.form.firstname = response.data.body.firstname, this.form.lastname = response.data.body.lastname, this.form.name = response.data.body.name, this.form.course = response.data.body.course, this.form.class = response.data.body.class, this.form.bdate = response.data.body.bdate, this.form.email = response.data.body.email, this.form.mobile = response.data.body.mobile;\n        if (response.data.body.notifications == true) this.form.notifications = \"SIM\";else this.form.notifications = \"NÃƒO\";\n        this.state = true;\n        this.showLoader(false);\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = true;\n        this.showLoader(false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","mapGetters","mapMutations","LOADING_SPINNER_SHOW_MUTATION","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","data","lang","localStorage","getItem","token","users","showModal","form","firstname","lastname","name","mobile","type","email","bdate","notifications","message","msg","state","isShow","computed","level","_id","methods","showLoader","translate","prop","getUsers","usersAccepted","usersToAccept","get","headers","Authorization","then","response","body","i","length","accepted","push","course","class","catch","error","alert","acceptStd","put","console","log","deleteStd","delete","detail"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Users.vue"],"sourcesContent":["/*\r\nMEIW - ProgramaÃ§Ã£o Web AvanÃ§ada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view GestÃ£o de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container\">\r\n    <section class=\"row mt-3 text-center\">\r\n      <h1 class=\"text-center\">{{ translate(\"usersTitle\") }}</h1>\r\n    </section>\r\n    <section\r\n      v-if=\"isShow\"\r\n      class=\"alert mt-3\"\r\n      role=\"alert\"\r\n      v-bind:class=\"'alert-' + message.type\"\r\n    >\r\n      {{ message.msg }}\r\n    </section>\r\n    <section class=\"row mt-3\">\r\n      <h4>{{ translate(\"usersLbl\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\">\r\n      <section class=\"card-body\">\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Estado</th>\r\n              <th>Ãšltimo acesso</th>\r\n              <th class=\"text-center\">AÃ§Ãµes</th>\r\n            </tr>\r\n            <tr v-for=\"user of this.users\" :key=\"user._id\">\r\n              <td>{{ user.firstname + \" \" + user.lastname }}</td>\r\n              <td>{{ user.course }}</td>\r\n              <td>{{ user.class }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  @click=\"detail(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#exampleModal\"\r\n                >\r\n                  <i class=\"fas fa-search me-1\" aria-hidden=\"true\"></i>\r\n                  Detalhes\r\n                </button>\r\n                <button\r\n                  @click=\"deleteStd(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"far fa-trash-alt me-1\" aria-hidden=\"true\"></i\r\n                  >Remover\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { mapGetters, mapMutations } from \"vuex\";\r\n  import {\r\n    LOADING_SPINNER_SHOW_MUTATION,\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        data: localStorage.token,\r\n        users: [],\r\n        showModal: true,\r\n        form: {\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          name: \"\",\r\n          mobile: \"\",\r\n          type: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          bdate: \"\",\r\n          notifications: false,\r\n        },\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        state: true,\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    /*mounted() {\r\n                          this.getUsers();\r\n                        },*/\r\n    methods: {\r\n      ...mapMutations({\r\n        showLoader: LOADING_SPINNER_SHOW_MUTATION,\r\n      }),\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getUsers() {\r\n        this.usersAccepted = [];\r\n        this.usersToAccept = [];\r\n        this.showLoader(true);\r\n        await axios\r\n          .get(\"https://cprob-api.herokuapp.com/user\", {\r\n            //.get(\"http://localhost:3000/user\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.showLoader(false);\r\n            let users = response.data.body;\r\n            for (let i = 0; i < users.length; i++) {\r\n              if (users[i].accepted == true && users[i].level == \"student\") {\r\n                this.usersAccepted.push({\r\n                  _id: users[i]._id,\r\n                  firstname: users[i].firstname,\r\n                  lastname: users[i].lastname,\r\n                  course: users[i].course,\r\n                  class: users[i].class,\r\n                });\r\n              } else if (\r\n                users[i].accepted == false &&\r\n                users[i].level == \"student\"\r\n              ) {\r\n                this.usersToAccept.push({\r\n                  _id: users[i]._id,\r\n                  firstname: users[i].firstname,\r\n                  lastname: users[i].lastname,\r\n                  course: users[i].course,\r\n                  class: users[i].class,\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.showLoader(false);\r\n            alert(error);\r\n          });\r\n      },\r\n      async acceptStd(_id) {\r\n        this.showLoader(true);\r\n        await axios\r\n          .put(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n            //.put(\"http://localhost:3000/user/\" + _id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then(() => {\r\n            this.message.msg = \"Utilizador aceite!\";\r\n            this.message.type = \"success\";\r\n            this.isShow = true;\r\n            this.showLoader(false);\r\n            this.getUsers();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async deleteStd(_id) {\r\n        this.showLoader(true);\r\n        await axios\r\n          .delete(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n            //.delete(\"http://localhost:3000/user/\" + _id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then(() => {\r\n            this.message.msg = \"Utilizador eliminado!\";\r\n            this.message.type = \"success\";\r\n            this.isShow = true;\r\n            this.showLoader(false);\r\n            this.getUsers();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async detail(_id) {\r\n        (this.message.type = \"\"), (this.message.msg = \"\"), this.showLoader(true);\r\n        await axios\r\n          .get(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n            //.get(\"http://localhost:3000/user/\" + _id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            (this.form.firstname = response.data.body.firstname),\r\n              (this.form.lastname = response.data.body.lastname),\r\n              (this.form.name = response.data.body.name),\r\n              (this.form.course = response.data.body.course),\r\n              (this.form.class = response.data.body.class),\r\n              (this.form.bdate = response.data.body.bdate),\r\n              (this.form.email = response.data.body.email),\r\n              (this.form.mobile = response.data.body.mobile);\r\n            if (response.data.body.notifications == true)\r\n              this.form.notifications = \"SIM\";\r\n            else this.form.notifications = \"NÃƒO\";\r\n            this.state = true;\r\n            this.showLoader(false);\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = true;\r\n            this.showLoader(false);\r\n          });\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}