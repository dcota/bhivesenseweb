{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { IS_USER_AUTHENTICATED_GETTER, GET_USER_ID_GETTER, GET_USER_TOKEN_GETTER, AUTO_NUMEVENTS_ACTION, GET_NUMEVENTS_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      logo: require(\"../assets/IMG1224.png\"),\n      lang: lang,\n      nEvents: \"\",\n      eventsText: \"\",\n      nInterventions: \"\",\n      interventionsText: \"\",\n      harvestText: \"\",\n      nMessages: 0,\n      totalApiaries: \"\",\n      totalHives: \"\",\n      timer: \"\",\n      isShow: true,\n      interventions: [],\n      harvestEvents: [],\n      textHarvest: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\n      token: GET_USER_TOKEN_GETTER,\n      _id: GET_USER_ID_GETTER,\n      numEvents: GET_NUMEVENTS_GETTER,\n      auth: localStorage.getItem(\"auth\")\n    })\n  },\n  mounted() {\n    this.updateEvents();\n    this.refreshDashboard();\n    this.timer = setInterval(this.updateEvents, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  methods: {\n    ...mapActions(\"auth\", {\n      _numEventsChng: AUTO_NUMEVENTS_ACTION\n    }),\n    interventionsEvent() {\n      console.log(this.interventions);\n      localStorage.setItem(\"teste\", JSON.stringify(this.interventions));\n      this.$router.push(\"sooninterventions\");\n    },\n    refreshDashboard() {\n      this.updateEvents();\n      this.updateInterventions();\n      this.updateTotalApiaries();\n      this.updateTotalHives();\n    },\n    updateEvents() {\n      if (this.numEvents == null) {\n        this.nEvents = 0;\n        this.eventsText = this.translate(\"dashEventsTextNo\");\n      } else {\n        this.nEvents = this.numEvents;\n        this.eventsText = this.translate(\"dashEventsTextYes\");\n      }\n    },\n    async updateInterventions() {\n      //this.nInterventions = 0;\n      //this.interventionsText = this.translate(\"dashIntervTextNo\");\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.body.length == 0) {\n          this.nInterventions = 0;\n          this.interventionsText = this.translate(\"dashIntervTextNo\");\n        } else {\n          this.interventions = response.data.body;\n          this.nInterventions = response.data.body.length;\n          this.interventionsText = this.translate(\"dashIntervTextYes\");\n        }\n      });\n    },\n    async updateHarvest() {\n      this.isShow = true;\n      this.harvestEvents = [];\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (!events.length == 0) {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].cat == \"hive\") {\n              let date = new Date(events[i].registration_date);\n              let year = date.getFullYear();\n              let month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n              let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n              //let text;\n              switch (events[i].type) {\n                case \"HARVEST\":\n                  this.textHarvest = this.translate(\"weightText\");\n                  break;\n                default:\n                  break;\n              }\n              this.hiveEvents.push({\n                _id: events[i]._id,\n                apiary: events[i].apiary,\n                device: events[i].device,\n                date: year + \"-\" + month + \"-\" + day,\n                text: this.text\n              });\n            } else {\n              this.interventionEvents.push({\n                id: events[i]._id,\n                text: events[i].type == \"INTER\" ? this.translate(\"interText\") : \"\"\n              });\n            }\n          }\n        }\n        this.hiveEvents.length > 0 ? this.hasHiveEvents = true : this.hasHiveEvents = false;\n        this.interventionEvents.length > 0 ? this.hasInterventionEvents = true : this.hasInterventionEvents = false;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async updateTotalApiaries() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalApiaries = response.data.body.totalApiaries;\n      }).catch(error => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async updateTotalHives() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalHives = response.data.body.totalHives;\n      }).catch(error => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n      this.isShow = false;\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","en","pt","mapActions","mapGetters","IS_USER_AUTHENTICATED_GETTER","GET_USER_ID_GETTER","GET_USER_TOKEN_GETTER","AUTO_NUMEVENTS_ACTION","GET_NUMEVENTS_GETTER","mixins","data","lang","localStorage","getItem","logo","require","nEvents","eventsText","nInterventions","interventionsText","harvestText","nMessages","totalApiaries","totalHives","timer","isShow","interventions","harvestEvents","textHarvest","computed","isAuthenticated","token","_id","numEvents","auth","mounted","updateEvents","refreshDashboard","setInterval","beforeUnmount","clearInterval","methods","_numEventsChng","interventionsEvent","console","log","setItem","JSON","stringify","$router","push","updateInterventions","updateTotalApiaries","updateTotalHives","translate","get","headers","Authorization","then","response","body","length","updateHarvest","events","i","cat","date","Date","registration_date","year","getFullYear","month","getMonth","day","getDate","type","hiveEvents","apiary","device","text","interventionEvents","id","hasHiveEvents","hasInterventionEvents","catch","error","notify","title","duration","speed","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Homebeekeeper.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Home\r\n*/\r\n\r\n<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"myDashTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <!--1st row-->\r\n    <section class=\"row mt-3\">\r\n      <!--events-->\r\n      <section class=\"col-12 col-md-6 col-lg-6\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><span> {{ translate(\"dashNotif\") }}</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center my-text-green\" v-if=\"nEvents == 0\">\r\n              {{ eventsText }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('notifications')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashNotifBtn\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n            <section class=\"text-center my-text-red\" v-if=\"nEvents > 0\">\r\n              {{ eventsText }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('notifications')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashNotifBtn\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <!--interventions-->\r\n      <section class=\"col-12 col-md-6 col-lg-6\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><span> {{ translate(\"dashInterventions\") }}</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section\r\n              class=\"text-center my-text-green\"\r\n              v-if=\"nInterventions == 0\"\r\n            >\r\n              <section v-if=\"!isShow\">{{ interventionsText }}</section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n              <hr />\r\n              <section class=\"text-center\" v-if=\"!isShow\">\r\n                <button\r\n                  @click=\"this.$router.push('sooninterventions')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashIntervBtn\") }}\r\n                </button>\r\n              </section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n            </section>\r\n            <section class=\"text-center my-text-red\" v-if=\"nInterventions > 0\">\r\n              {{ interventionsText }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"interventionsEvent\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashIntervBtn\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n    <!--2nd row-->\r\n    <section class=\"row mt-3\">\r\n      <!--apiaries-->\r\n      <section class=\"col-12 col-md-3 col-lg-3\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            height: 210px;\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><span> {{ translate(\"dashTotalApiaries\") }}</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center my-indicator-green\">\r\n              <section v-if=\"!isShow\">{{ totalApiaries }}</section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('newapiary')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashApiariesBtn\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <!--hives-->\r\n      <section class=\"col-12 col-md-3 col-lg-3\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            height: 210px;\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><span> {{ translate(\"dashTotalHives\") }}</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center my-indicator-green\">\r\n              <section v-if=\"!isShow\">{{ totalHives }}</section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('newdevice')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashHivesBtn\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <!--harvest-->\r\n      <section class=\"col-12 col-md-6 col-lg-6\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><span> {{ translate(\"dashHarvest\") }}</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section\r\n              class=\"text-center my-text-green\"\r\n              v-if=\"nInterventions == 0\"\r\n            >\r\n              <section v-if=\"!isShow\">{{ interventionsText }}</section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n              <hr />\r\n              <section class=\"text-center\" v-if=\"!isShow\">\r\n                <button\r\n                  @click=\"this.$router.push('sooninterventions')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashBtnHarvest\") }}\r\n                </button>\r\n              </section>\r\n              <section\r\n                v-else\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n              ></section>\r\n            </section>\r\n            <section class=\"text-center my-text-red\" v-if=\"nInterventions > 0\">\r\n              {{ interventionsText }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"interventionsEvent\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: small; width: 160px\"\r\n                >\r\n                  {{ translate(\"dashBtnHarvest\") }}\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-text-green {\r\n  font-size: 17px;\r\n  color: #198754;\r\n}\r\n.my-text-red {\r\n  font-size: 17px;\r\n  color: #dc3545;\r\n}\r\n.my-indicator-green {\r\n  font-size: 30px;\r\n  color: #198754;\r\n}\r\n.my-indicator-red {\r\n  font-size: 30px;\r\n  color: #dc3545;\r\n}\r\n.my-img {\r\n  max-width: 30%;\r\n  height: auto;\r\n}\r\n\r\nh3 {\r\n  color: #c55a11 !important;\r\n  position: relative;\r\n  margin-top: 40px;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n  letter-spacing: 10px;\r\n}\r\n</style>     \r\n\r\n<script>\r\n  import axios from \"axios\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { mapActions, mapGetters } from \"vuex\";\r\n  import {\r\n    IS_USER_AUTHENTICATED_GETTER,\r\n    GET_USER_ID_GETTER,\r\n    GET_USER_TOKEN_GETTER,\r\n    AUTO_NUMEVENTS_ACTION,\r\n    GET_NUMEVENTS_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        logo: require(\"../assets/IMG1224.png\"),\r\n        lang: lang,\r\n        nEvents: \"\",\r\n        eventsText: \"\",\r\n        nInterventions: \"\",\r\n        interventionsText: \"\",\r\n        harvestText: \"\",\r\n        nMessages: 0,\r\n        totalApiaries: \"\",\r\n        totalHives: \"\",\r\n        timer: \"\",\r\n        isShow: true,\r\n        interventions: [],\r\n        harvestEvents: [],\r\n        textHarvest: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\r\n        token: GET_USER_TOKEN_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        numEvents: GET_NUMEVENTS_GETTER,\r\n        auth: localStorage.getItem(\"auth\"),\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.updateEvents();\r\n\r\n      this.refreshDashboard();\r\n      this.timer = setInterval(this.updateEvents, 1000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    methods: {\r\n      ...mapActions(\"auth\", {\r\n        _numEventsChng: AUTO_NUMEVENTS_ACTION,\r\n      }),\r\n      interventionsEvent() {\r\n        console.log(this.interventions);\r\n        localStorage.setItem(\"teste\", JSON.stringify(this.interventions));\r\n        this.$router.push(\"sooninterventions\");\r\n      },\r\n      refreshDashboard() {\r\n        this.updateEvents();\r\n        this.updateInterventions();\r\n        this.updateTotalApiaries();\r\n        this.updateTotalHives();\r\n      },\r\n      updateEvents() {\r\n        if (this.numEvents == null) {\r\n          this.nEvents = 0;\r\n          this.eventsText = this.translate(\"dashEventsTextNo\");\r\n        } else {\r\n          this.nEvents = this.numEvents;\r\n          this.eventsText = this.translate(\"dashEventsTextYes\");\r\n        }\r\n      },\r\n      async updateInterventions() {\r\n        //this.nInterventions = 0;\r\n        //this.interventionsText = this.translate(\"dashIntervTextNo\");\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.body.length == 0) {\r\n              this.nInterventions = 0;\r\n              this.interventionsText = this.translate(\"dashIntervTextNo\");\r\n            } else {\r\n              this.interventions = response.data.body;\r\n              this.nInterventions = response.data.body.length;\r\n              this.interventionsText = this.translate(\"dashIntervTextYes\");\r\n            }\r\n          });\r\n      },\r\n      async updateHarvest() {\r\n        this.isShow = true;\r\n        this.harvestEvents = [];\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (!events.length == 0) {\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].cat == \"hive\") {\r\n                  let date = new Date(events[i].registration_date);\r\n                  let year = date.getFullYear();\r\n                  let month =\r\n                    date.getMonth() + 1 < 10\r\n                      ? \"0\" + (date.getMonth() + 1)\r\n                      : date.getMonth() + 1;\r\n                  let day =\r\n                    date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n                  //let text;\r\n                  switch (events[i].type) {\r\n                    case \"HARVEST\":\r\n                      this.textHarvest = this.translate(\"weightText\");\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                  this.hiveEvents.push({\r\n                    _id: events[i]._id,\r\n                    apiary: events[i].apiary,\r\n                    device: events[i].device,\r\n                    date: year + \"-\" + month + \"-\" + day,\r\n                    text: this.text,\r\n                  });\r\n                } else {\r\n                  this.interventionEvents.push({\r\n                    id: events[i]._id,\r\n                    text:\r\n                      events[i].type == \"INTER\"\r\n                        ? this.translate(\"interText\")\r\n                        : \"\",\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            this.hiveEvents.length > 0\r\n              ? (this.hasHiveEvents = true)\r\n              : (this.hasHiveEvents = false);\r\n            this.interventionEvents.length > 0\r\n              ? (this.hasInterventionEvents = true)\r\n              : (this.hasInterventionEvents = false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async updateTotalApiaries() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.totalApiaries = response.data.body.totalApiaries;\r\n          })\r\n          .catch((error) => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async updateTotalHives() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.totalHives = response.data.body.totalHives;\r\n          })\r\n          .catch((error) => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n        this.isShow = false;\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}