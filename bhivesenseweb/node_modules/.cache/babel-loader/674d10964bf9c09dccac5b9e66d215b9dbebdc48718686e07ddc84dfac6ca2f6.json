{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nexport default {\n  mixins: [en, pt],\n  data() {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      lang: lang,\n      attrs: [{\n        key: 1,\n        highlight: {\n          color: \"red\",\n          fillMode: \"solid\",\n          contentClass: \"italic\"\n        },\n        dates: new Date(year, month, 12)\n      }, {\n        key: 2,\n        highlight: {\n          color: \"green\",\n          fillMode: \"solid\"\n        },\n        dates: new Date(year, month, 13)\n      }, {\n        key: 3,\n        highlight: {\n          color: \"yellow\",\n          fillMode: \"solid\"\n        },\n        dates: new Date(year, month, 14)\n      }]\n    };\n  },\n  popover: {\n    label: todo.description,\n    visibility: \"hover\",\n    hideIndicator: true\n  },\n  computed: {\n    attributes() {\n      return [\n      // Attributes for todos\n      ...this.todos.map(todo => ({\n        dates: todo.dates,\n        dot: {\n          color: todo.color,\n          class: todo.isComplete ? \"opacity-75\" : \"\"\n        },\n        // We need to at least pass a truthy value for the popover to appear\n        // Pass an object to customize popover settings like visibility, placement, etc.\n        popover: true,\n        customData: todo\n      }))];\n    }\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"AAyBE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,eAAe;EACbC,MAAM,EAAE,CAACF,EAAE,EAAEC,EAAE,CAAC;EAChBE,IAAI,GAAG;IACL,MAAMC,IAAG,GAAI,IAAIC,IAAI,EAAE;IACvB,MAAMC,IAAG,GAAIF,IAAI,CAACG,WAAW,EAAE;IAC/B,MAAMC,KAAI,GAAIJ,IAAI,CAACK,QAAQ,EAAE;IAC7B,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLF,IAAI,EAAEA,IAAI;MACVG,KAAK,EAAE,CACL;QACEC,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTC,KAAK,EAAE,KAAK;UACZC,QAAQ,EAAE,OAAO;UACjBC,YAAY,EAAE;QAChB,CAAC;QACDC,KAAK,EAAE,IAAId,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE;MACjC,CAAC,EACD;QACEM,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTC,KAAK,EAAE,OAAO;UACdC,QAAQ,EAAE;QACZ,CAAC;QACDE,KAAK,EAAE,IAAId,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE;MACjC,CAAC,EACD;QACEM,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTC,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE;QACZ,CAAC;QACDE,KAAK,EAAE,IAAId,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE;MACjC,CAAC;IAEL,CAAC;EACH,CAAC;EACDY,OAAO,EAAE;IACPC,KAAK,EAAEC,IAAI,CAACC,WAAW;IACvBC,UAAU,EAAE,OAAO;IACnBC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,GAAG;MACX,OAAO;MACL;MACA,GAAG,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEP,IAAI,KAAM;QAC3BH,KAAK,EAAEG,IAAI,CAACH,KAAK;QACjBW,GAAG,EAAE;UACHd,KAAK,EAAEM,IAAI,CAACN,KAAK;UACjBe,KAAK,EAAET,IAAI,CAACU,UAAS,GAAI,YAAW,GAAI;QAC1C,CAAC;QACD;QACA;QACAZ,OAAO,EAAE,IAAI;QACba,UAAU,EAAEX;MACd,CAAC,CAAC,CAAC,CACJ;IACH;EACF,CAAC;EACDY,OAAO,EAAE;IACPC,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAAC1B,IAAI,CAAC,CAAC0B,IAAI,CAAC;IAC9B;EACF;AACF,CAAC","names":["en","pt","mixins","data","date","Date","year","getFullYear","month","getMonth","lang","localStorage","getItem","attrs","key","highlight","color","fillMode","contentClass","dates","popover","label","todo","description","visibility","hideIndicator","computed","attributes","todos","map","dot","class","isComplete","customData","methods","translate","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Interventionsalt.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">{{ translate(\"interventionsTitle\") }}</h1>\r\n    <hr />\r\n\r\n    <v-calendar is-expanded :attributes=\"attributes\">\r\n      <div slot=\"day-popover\" slot-scope=\"{ day, dayTitle, attributes }\">\r\n        <div class=\"text-xs text-gray-300 font-semibold text-center\">\r\n          {{ dayTitle }}\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"{ key, customData } in attributes\" :key=\"key\">\r\n            {{ customData.description }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </v-calendar>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data() {\r\n      const date = new Date();\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth();\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        lang: lang,\r\n        attrs: [\r\n          {\r\n            key: 1,\r\n            highlight: {\r\n              color: \"red\",\r\n              fillMode: \"solid\",\r\n              contentClass: \"italic\",\r\n            },\r\n            dates: new Date(year, month, 12),\r\n          },\r\n          {\r\n            key: 2,\r\n            highlight: {\r\n              color: \"green\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 13),\r\n          },\r\n          {\r\n            key: 3,\r\n            highlight: {\r\n              color: \"yellow\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 14),\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    popover: {\r\n      label: todo.description,\r\n      visibility: \"hover\",\r\n      hideIndicator: true,\r\n    },\r\n    computed: {\r\n      attributes() {\r\n        return [\r\n          // Attributes for todos\r\n          ...this.todos.map((todo) => ({\r\n            dates: todo.dates,\r\n            dot: {\r\n              color: todo.color,\r\n              class: todo.isComplete ? \"opacity-75\" : \"\",\r\n            },\r\n            // We need to at least pass a truthy value for the popover to appear\r\n            // Pass an object to customize popover settings like visibility, placement, etc.\r\n            popover: true,\r\n            customData: todo,\r\n          })),\r\n        ];\r\n      },\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}