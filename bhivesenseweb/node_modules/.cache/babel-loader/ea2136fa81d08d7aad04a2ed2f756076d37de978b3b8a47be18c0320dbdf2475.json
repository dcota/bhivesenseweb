{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Notifications = _resolveComponent(\"Notifications\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_Notifications, {\n    position: \"top right\",\n    closeOnClick: \"true\",\n    classes: \"my-notification mt-2\",\n    width: \"500px\"\n  }), _createElementVNode(\"section\", _hoisted_1, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"mappings":";;EAQaA,EAAE,EAAC;AAAS;;;;uBAPvBC,oBAQU,kBAPRC,aAKEC;IAJAC,QAAQ,EAAC,WAAW;IACpBC,YAAY,EAAC,MAAM;IACnBC,OAAO,EAAC,sBAAsB;IAC9BC,KAAK,EAAC;MAERC,oBAA2D,WAA3DC,UAA2D,GAArCP,aAA2BQ","names":["id","_createElementBlock","_createVNode","_component_Notifications","position","closeOnClick","classes","width","_createElementVNode","_hoisted_1","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\App.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <Notifications\r\n      position=\"top right\"\r\n      closeOnClick=\"true\"\r\n      classes=\"my-notification mt-2\"\r\n      width=\"500px\"\r\n    />\r\n    <section id=\"content\"><router-view></router-view></section>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from \"vuex\";\r\n  import { AUTO_LOGIN_ACTION } from \"./store/storeconstants\";\r\n  export default {\r\n    name: \"App\",\r\n    computed: {\r\n      ...mapState({\r\n        showLoader: (state) => state.showLoader,\r\n        autoLogout: (state) => state.auth.autoLogout,\r\n      }),\r\n    },\r\n    watch: {\r\n      autoLogout(curValue, oldValue) {\r\n        if (curValue && curValue != oldValue) {\r\n          this.$router.replace(\"/Login\");\r\n        }\r\n      },\r\n    },\r\n    components: {},\r\n    created() {\r\n      this.$store.dispatch(`auth/${AUTO_LOGIN_ACTION}`);\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}