{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"text-center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_calendar = _resolveComponent(\"v-calendar\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h1\", _hoisted_3, _toDisplayString($options.translate(\"interventionsTitle\")), 1 /* TEXT */), _hoisted_4, _createVNode(_component_v_calendar, {\n    \"is-expanded\": \"\",\n    attributes: $options.attributes\n  }, null, 8 /* PROPS */, [\"attributes\"])]);\n}","map":{"version":3,"mappings":";;EACWA,KAAK,EAAC;AAAmB;gCAChCC,oBAAM;;EACFD,KAAK,EAAC;AAAa;gCACvBC,oBAAM;;;;uBAHRC,oBAMU,WANVC,UAMU,GALRC,UAAM,EACNH,oBAAkE,MAAlEI,UAAkE,mBAAvCC,kBAAS,wCACpCC,UAAM,EAENC,aAA+DC;IAAnD,aAAW,EAAX,EAAW;IAAEC,UAAU,EAAEJ","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$options","_hoisted_4","_createVNode","_component_v_calendar","attributes"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Interventionsalt.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">{{ translate(\"interventionsTitle\") }}</h1>\r\n    <hr />\r\n\r\n    <v-calendar is-expanded :attributes=\"attributes\"> </v-calendar>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data() {\r\n      const date = new Date();\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth();\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      const todos = [\r\n        {\r\n          description: \"Take Noah to basketball practice.\",\r\n          isComplete: true,\r\n          dates: { weekdays: 6 }, // Every Friday\r\n          color: \"red\",\r\n        },\r\n      ];\r\n      return {\r\n        lang: lang,\r\n        incId: todos.length,\r\n        todos,\r\n        attrs: [\r\n          {\r\n            key: 1,\r\n            highlight: {\r\n              color: \"red\",\r\n              fillMode: \"solid\",\r\n              contentClass: \"italic\",\r\n            },\r\n            dates: new Date(year, month, 12),\r\n            customData: {\r\n              description: \"teste 1\",\r\n            },\r\n          },\r\n          {\r\n            key: 2,\r\n            highlight: {\r\n              color: \"green\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 13),\r\n            customData: {\r\n              description: \"teste 2\",\r\n            },\r\n          },\r\n          {\r\n            key: 3,\r\n            highlight: {\r\n              color: \"yellow\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 14),\r\n            customData: {\r\n              description: \"teste 3\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    computed: {\r\n      attributes() {\r\n        return [\r\n          // Attributes for todos\r\n          ...this.todos.map((todo) => ({\r\n            dates: todo.dates,\r\n            /*dot: {\r\n                                      color: todo.color,\r\n                                      class: todo.isComplete ? \"opacity-75\" : \"\",\r\n                                    },*/\r\n            highlight: {\r\n              color: todo.color,\r\n              fillMode: \"solid\",\r\n              class: todo.isComplete ? \"color-green\" : \"\",\r\n            },\r\n            popover: {\r\n              label: todo.description,\r\n            },\r\n            customData: todo,\r\n          })),\r\n        ];\r\n      },\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      teste() {\r\n        alert(\"teste\");\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}