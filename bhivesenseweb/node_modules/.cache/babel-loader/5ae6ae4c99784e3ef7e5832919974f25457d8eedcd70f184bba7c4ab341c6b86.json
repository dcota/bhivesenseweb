{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5ac7cca2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"line-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"row mt-3\"\n};\nconst _hoisted_5 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_6 = {\n  class: \"card mt-2\"\n};\nconst _hoisted_7 = {\n  class: \"card-body\",\n  style: {\n    \"border-radius\": \"3px\",\n    \"box-shadow\": \"rgba(0, 0, 0, 0.25) 0px 14px 28px,\\r\\n            rgba(0, 0, 0, 0.22) 0px 10px 10px\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"table mt-2\"\n};\nconst _hoisted_9 = {\n  class: \"text-center\"\n};\nconst _hoisted_10 = {\n  class: \"text-center\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"text-center\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spinner-border mt-4\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")], -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"mb-2\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_ModalAnswer = _resolveComponent(\"ModalAnswer\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString(_ctx.translate(\"newMessagesTitle\")), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"h4\", _hoisted_5, _toDisplayString(_ctx.translate(\"messagesLbl\")), 1 /* TEXT */)]), _createElementVNode(\"section\", _hoisted_6, [_createElementVNode(\"section\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.translate(\"tdFrom\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.translate(\"tdDate\")), 1 /* TEXT */), _createElementVNode(\"th\", _hoisted_9, _toDisplayString(_ctx.translate(\"thdUsersActions\")), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.messages, msg => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: msg._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(msg.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(msg.date), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.answerModal(msg._id),\n      type: \"button\",\n      class: \"btn btn-success btn-sm me-2 ac-btn\"\n    }, _toDisplayString(_ctx.translate(\"btnAnswer\")), 9 /* TEXT, PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _withDirectives(_createVNode(_component_ModalAnswer, {\n    onClose: _ctx.closeModalAnswer,\n    onAnswer: _ctx.answer,\n    name: _ctx.name,\n    email: _ctx.email,\n    subject: _ctx.subject,\n    message: _ctx.message\n  }, null, 8 /* PROPS */, [\"onClose\", \"onAnswer\", \"name\", \"email\", \"subject\", \"message\"]), [[_vShow, _ctx.isModalAnswerVisible]]), _createElementVNode(\"section\", _hoisted_12, [_ctx.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_13, [_hoisted_14, _createElementVNode(\"section\", _hoisted_15, _toDisplayString(_ctx.translate(\"spinnerTxt\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _hoisted_16]);\n}","map":{"version":3,"mappings":";;;EAOWA,KAAK,EAAC;AAAmB;;EAC5BA,KAAK,EAAC;AAAe;gEACzBC,oBAAkC;EAAzBD,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAU;;EACnBA,KAAK,EAAC;AAAe;;EAElBA,KAAK,EAAC;AAAW;;EAEtBA,KAAK,EAAC,WAAW;EACjBE,KAIC,EAJD;IAAA;IAAA;EAAA;;;EAMOF,KAAK,EAAC;AAAY;;EAKfA,KAAK,EAAC;AAAa;;EAKnBA,KAAK,EAAC;AAAa;;;EAuBxBA,KAAK,EAAC;AAAa;;;EACHA,KAAK,EAAC;;iEAC3BC,oBAEU;EAFDD,KAAK,EAAC,qBAAqB;EAACG,IAAI,EAAC;iBACxCF,oBAA+C;EAAzCD,KAAK,EAAC;AAAiB,GAAC,YAAU;;EAEjCA,KAAK,EAAC;AAAM;iEAGzBC,oBAAkC;EAAzBD,KAAK,EAAC;AAAQ;;;;uBAxDzBI,oBAyDU,WAzDVC,UAyDU,GAxDRJ,oBAAkE,MAAlEK,UAAkE,mBAArCC,cAAS,sCACtCC,UAAkC,EAClCP,oBAEU,WAFVQ,UAEU,GADRR,oBAA6D,MAA7DS,UAA6D,mBAAhCH,cAAS,mCAExCN,oBAgCU,WAhCVU,UAgCU,GA/BRV,oBA8BU,WA9BVW,UA8BU,GAtBRX,oBAqBQ,SArBRY,UAqBQ,GApBNZ,oBAmBQ,gBAlBNA,oBAIK,aAHHA,oBAAkC,6BAA3BM,cAAS,4BAChBN,oBAAkC,6BAA3BM,cAAS,4BAChBN,oBAA+D,MAA/Da,UAA+D,mBAApCP,cAAS,0DAEtCH,oBAYKW,kCAZkBC,QAAQ,EAApBC,GAAG;yBAAdb,oBAYK;MAZ6Bc,GAAG,EAAED,GAAG,CAACE;QACzClB,oBAAuB,6BAAhBgB,GAAG,CAACG,IAAI,kBACfnB,oBAAuB,6BAAhBgB,GAAG,CAACI,IAAI,kBACfpB,oBAQK,MARLqB,WAQK,GAPHrB,oBAMS;MALNsB,OAAK,YAAEhB,gBAAW,CAACU,GAAG,CAACE,GAAG;MAC3BK,IAAI,EAAC,QAAQ;MACbxB,KAAK,EAAC;wBAEHO,cAAS;0DAQ1BkB,aAQEC;IANCC,OAAK,EAAEpB,qBAAgB;IACvBqB,QAAM,EAAErB,WAAM;IACda,IAAI,EAAEb,SAAI;IACVsB,KAAK,EAAEtB,UAAK;IACZuB,OAAO,EAAEvB,YAAO;IAChBwB,OAAO,EAAExB;qGANFA,yBAAoB,KAQ9BN,oBAOU,WAPV+B,WAOU,GANOzB,WAAM,kBAArBH,oBAKU,WALV6B,WAKU,GAJRC,WAEU,EACVjC,oBAA6D,WAA7DkC,WAA6D,mBAApC5B,cAAS,yEAGtC6B,WAAkC","names":["class","_createElementVNode","style","role","_createElementBlock","_hoisted_1","_hoisted_2","_ctx","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","messages","msg","key","_id","name","date","_hoisted_10","onClick","type","_createVNode","_component_ModalAnswer","onClose","onAnswer","email","subject","message","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newmessages.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"newMessagesTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"messagesLbl\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"tdFrom\") }}</th>\r\n              <th>{{ translate(\"tdDate\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"msg of this.messages\" :key=\"msg._id\">\r\n              <td>{{ msg.name }}</td>\r\n              <td>{{ msg.date }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  @click=\"answerModal(msg._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                >\r\n                  {{ translate(\"btnAnswer\") }}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalAnswer\r\n      v-show=\"isModalAnswerVisible\"\r\n      @close=\"closeModalAnswer\"\r\n      @answer=\"answer\"\r\n      :name=\"name\"\r\n      :email=\"email\"\r\n      :subject=\"subject\"\r\n      :message=\"message\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalAnswer from \"../components/ModalAnswer\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalAnswer,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        data: localStorage.token,\r\n        messages: [],\r\n        name: \"\",\r\n        email: \"\",\r\n        subject: \"\",\r\n        message: \"\",\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalAnswerVisible: false,\r\n        isModalDeleteVisible: false,\r\n        usertodelete: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getMessages();\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getMessages() {\r\n        this.messages = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/report\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let messages = response.data.body;\r\n            for (let i = 0; i < messages.length; i++) {\r\n              let date = new Date(messages[i].registration_date);\r\n              let year = date.getFullYear();\r\n              let month =\r\n                date.getMonth() + 1 < 10\r\n                  ? \"0\" + (date.getMonth() + 1)\r\n                  : date.getMonth() + 1;\r\n              let day =\r\n                date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n              this.messages.push({\r\n                _id: messages[i]._id,\r\n                name: messages[i].name,\r\n                email: messages[i].email,\r\n                date: year + \"-\" + month + \"-\" + day,\r\n                answered: messages[i].answered,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      },\r\n      async cancel(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"cancelAccMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getUsers();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/report/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            this.email = response.data.body.email;\r\n            this.subject = response.data.body.subject;\r\n            this.message = response.data.body.message;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async answerModal(id) {\r\n        localStorage.setItem(\"idtoanswer\", id);\r\n        await this.detail(id);\r\n        this.isModalAnswerVisible = true;\r\n      },\r\n      async answer() {\r\n        this.isModalAnswerVisible = false;\r\n        this.isShow = true;\r\n        let postData = {\r\n            text: localStorage.getItem('messagetosend');\r\n        }\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/report/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            this.email = response.data.body.email;\r\n            this.subject = response.data.body.subject;\r\n            this.message = response.data.body.message;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async deleteModal(id) {\r\n        this.usertodelete = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      closeModalAnswer() {\r\n        this.isModalAnswerVisible = false;\r\n      },\r\n      closeModalDelete() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async cancelUser(id) {\r\n        await this.cancel(this.usertodelete);\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}