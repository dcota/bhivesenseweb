{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDetails from \"../components/ModalInterventionDetails.vue\";\nexport default {\n  components: {\n    ModalDetails\n  },\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      interventions: [],\n      lang: lang,\n      isShow: false,\n      hasInterventions: false,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false\n    };\n  },\n  computed: {\n    attributes() {\n      return [...this.interventions.map(todo => ({\n        _id: todo._id,\n        dates: todo.dates,\n        highlight: {\n          color: todo.color,\n          start: {\n            fillMode: \"solid\",\n            color: todo.color\n          },\n          base: {\n            fillMode: \"light\",\n            color: todo.color\n          },\n          end: {\n            fillMode: \"solid\",\n            color: todo.color\n          }\n          //order: todo.order,\n          //class: todo.isComplete ? \"opacity-50\" : \"\",\n        },\n\n        popover: {\n          label: todo.description,\n          visibility: \"hover\"\n        }\n      }))];\n    }\n  },\n  mounted() {\n    this.getInterventions();\n  },\n  methods: {\n    async getInterventions() {\n      this.interventions = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/intervention/apiary/\" + localStorage.getItem(\"idtointerventions\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        if (response.data.body.length == 0) {\n          this.hasInterventions = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"mesNoInterventions\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasInterventions = true;\n          this.interventions = [];\n          let resArray = response.data.body;\n          for (let i = 0; i < resArray.length; i++) {\n            let sd = new Date(resArray[i].startDate);\n            let ed = new Date(resArray[i].endDate);\n            let dates = \"\";\n            dates = {\n              start: sd,\n              end: ed\n            };\n            let color;\n            if (resArray[i].type == 1) color = \"green\";else if (resArray[i].type == 2) color = \"orange\";else color = \"red\";\n            this.interventions.push({\n              _id: resArray[i]._id,\n              color: color,\n              dates: dates,\n              description: resArray[i].description,\n              startTime: resArray[i].startTime,\n              endTime: resArray[i].endTime,\n              observations: resArray[i].observations\n            });\n          }\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    padTo2Digits(num) {\n      return String(num).padStart(2, \"0\");\n    },\n    dayClicked(day) {\n      let date = new Date(day.id);\n      for (let i = 0; i < this.interventions.length; i++) {\n        let sd = new Date(this.interventions[i].dates.start);\n        let sdConv = this.padTo2Digits(sd.toLocaleDateString(\"sv-SE\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }));\n        let sdFinal = new Date(sdConv);\n        let ed = new Date(this.interventions[i].dates.end);\n        let edConv = this.padTo2Digits(ed.toLocaleDateString(\"sv-SE\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }));\n        let edFinal = new Date(edConv);\n        if (date.getTime() >= sdFinal.getTime() && date.getTime() <= edFinal.getTime()) {\n          console.log(this.interventions[i].observations);\n          break;\n        }\n      }\n    },\n    back() {\n      this.$router.push(\"apiaries\");\n    },\n    formNew() {\n      this.$router.push(\"newintervention\");\n    },\n    closeDetailsModal() {\n      this.isModalDetailsVisible = false;\n    },\n    closeDeleteModal() {\n      this.isModalDeleteVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDetails","components","mixins","data","lang","localStorage","getItem","interventions","isShow","hasInterventions","isModalDetailsVisible","isModalDeleteVisible","computed","attributes","map","todo","_id","dates","highlight","color","start","fillMode","base","end","popover","label","description","visibility","mounted","getInterventions","methods","get","headers","Authorization","token","then","response","body","length","title","translate","text","type","duration","speed","resArray","i","sd","Date","startDate","ed","endDate","push","startTime","endTime","observations","catch","prop","padTo2Digits","num","String","padStart","dayClicked","day","date","id","sdConv","toLocaleDateString","year","month","sdFinal","edConv","edFinal","getTime","console","log","back","$router","formNew","closeDetailsModal","closeDeleteModal"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Interventions.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"interventionsTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"mt-4\">\r\n      <button @click=\"formNew\" class=\"btn my-button me-3\">\r\n        <section v-if=\"!isShow\">\r\n          {{ translate(\"btnNew\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n      <button @click=\"back\" class=\"btn my-button\">\r\n        <section v-if=\"!isShow\">\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n    </section>\r\n\r\n    <section class=\"mt-4\" v-if=\"hasInterventions != false\">\r\n      <v-calendar\r\n        :locale=\"lang\"\r\n        is-expanded\r\n        :attributes=\"attributes\"\r\n        :rows=\"1\"\r\n        :columns=\"3\"\r\n        @dayclick=\"dayClicked\"\r\n      >\r\n      </v-calendar>\r\n    </section>\r\n\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeDetailsModal\"\r\n      @edit=\"edit\"\r\n      :description=\"description\"\r\n      :observations=\"observations\"\r\n    >\r\n    </ModalDetails>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDetails from \"../components/ModalInterventionDetails.vue\";\r\n  export default {\r\n    components: {\r\n      ModalDetails,\r\n    },\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        interventions: [],\r\n        lang: lang,\r\n        isShow: false,\r\n        hasInterventions: false,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n      };\r\n    },\r\n    computed: {\r\n      attributes() {\r\n        return [\r\n          ...this.interventions.map((todo) => ({\r\n            _id: todo._id,\r\n            dates: todo.dates,\r\n            highlight: {\r\n              color: todo.color,\r\n              start: { fillMode: \"solid\", color: todo.color },\r\n              base: { fillMode: \"light\", color: todo.color },\r\n              end: { fillMode: \"solid\", color: todo.color },\r\n              //order: todo.order,\r\n              //class: todo.isComplete ? \"opacity-50\" : \"\",\r\n            },\r\n            popover: {\r\n              label: todo.description,\r\n              visibility: \"hover\",\r\n            },\r\n          })),\r\n        ];\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getInterventions();\r\n    },\r\n    methods: {\r\n      async getInterventions() {\r\n        this.interventions = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/intervention/apiary/\" +\r\n              localStorage.getItem(\"idtointerventions\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            if (response.data.body.length == 0) {\r\n              this.hasInterventions = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"mesNoInterventions\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasInterventions = true;\r\n              this.interventions = [];\r\n              let resArray = response.data.body;\r\n              for (let i = 0; i < resArray.length; i++) {\r\n                let sd = new Date(resArray[i].startDate);\r\n                let ed = new Date(resArray[i].endDate);\r\n                let dates = \"\";\r\n                dates = {\r\n                  start: sd,\r\n                  end: ed,\r\n                };\r\n                let color;\r\n                if (resArray[i].type == 1) color = \"green\";\r\n                else if (resArray[i].type == 2) color = \"orange\";\r\n                else color = \"red\";\r\n                this.interventions.push({\r\n                  _id: resArray[i]._id,\r\n                  color: color,\r\n                  dates: dates,\r\n                  description: resArray[i].description,\r\n                  startTime: resArray[i].startTime,\r\n                  endTime: resArray[i].endTime,\r\n                  observations: resArray[i].observations,\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      padTo2Digits(num) {\r\n        return String(num).padStart(2, \"0\");\r\n      },\r\n      dayClicked(day) {\r\n        let date = new Date(day.id);\r\n        for (let i = 0; i < this.interventions.length; i++) {\r\n          let sd = new Date(this.interventions[i].dates.start);\r\n          let sdConv = this.padTo2Digits(\r\n            sd.toLocaleDateString(\"sv-SE\", {\r\n              year: \"numeric\",\r\n              month: \"2-digit\",\r\n              day: \"2-digit\",\r\n            })\r\n          );\r\n          let sdFinal = new Date(sdConv);\r\n          let ed = new Date(this.interventions[i].dates.end);\r\n          let edConv = this.padTo2Digits(\r\n            ed.toLocaleDateString(\"sv-SE\", {\r\n              year: \"numeric\",\r\n              month: \"2-digit\",\r\n              day: \"2-digit\",\r\n            })\r\n          );\r\n          let edFinal = new Date(edConv);\r\n          if (\r\n            date.getTime() >= sdFinal.getTime() &&\r\n            date.getTime() <= edFinal.getTime()\r\n          ) {\r\n            console.log(this.interventions[i].observations);\r\n            break;\r\n          }\r\n        }\r\n      },\r\n      back() {\r\n        this.$router.push(\"apiaries\");\r\n      },\r\n      formNew() {\r\n        this.$router.push(\"newintervention\");\r\n      },\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModal() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}