{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  slot: \"body\",\n  \"slot-scope\": \"props\"\n};\nconst _hoisted_2 = {\n  class: \"title\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-fw fa-close\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  id: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_notifications = _resolveComponent(\"notifications\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createCommentVNode(\"<Sidebar />\"), _createCommentVNode(\"<Loader v-if=\\\"showLoader\\\"></Loader>\"), _createCommentVNode(\"<notifications\\r\\n      position=\\\"bottom right\\\"\\r\\n      closeOnClick=\\\"true\\\"\\r\\n      classes=\\\"my-notification\\\"\\r\\n    />\"), _createVNode(_component_notifications, {\n    group: \"custom-template\",\n    position: \"bottom right\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"a\", _hoisted_2, _toDisplayString(_ctx.props.item.title), 1 /* TEXT */), _createElementVNode(\"a\", {\n      class: \"close\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.props.close && _ctx.props.close(...args))\n    }, _hoisted_4), _createElementVNode(\"div\", {\n      innerHTML: _ctx.props.item.text\n    }, null, 8 /* PROPS */, _hoisted_5)])])]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"section\", _hoisted_6, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"mappings":";;EAUgBA,IAAI,EAAC,MAAM;EAAC,YAAU,EAAC;;;EAE1BC,KAAK,EAAC;AAAO;gCAIdC,oBAAiC;EAA9BD,KAAK,EAAC;AAAmB;oBAA5BE,UAAiC;;;EAMhCC,EAAE,EAAC;AAAS;;;;uBArBvBC,oBAsBU,kBArBRC,kCAAkB,EAClBA,4DAA0C,EAC1CA,sJAIK,EACLC,aAYgBC;IAZDC,KAAK,EAAC,iBAAiB;IAACC,QAAQ,EAAC;;sBAC9C,MAUW,CAVXR,oBAUW,YAVXS,UAUW,GATTT,oBAQM,cAPJA,oBAEI,KAFJU,UAEI,mBADCC,UAAK,CAACC,IAAI,CAACC,KAAK,kBAErBb,oBAEI;MAFDD,KAAK,EAAC,OAAO;MAAEe,OAAK,yCAAEH,UAAK,CAACI,KAAK,IAAXJ,UAAK,CAACI,KAAK;oBAGpCf,oBAAoC;MAA/BgB,SAAwB,EAAhBL,UAAK,CAACC,IAAI,CAACK;;;MAI9BjB,oBAA2D,WAA3DkB,UAA2D,GAArCb,aAA2Bc","names":["slot","class","_createElementVNode","_hoisted_3","id","_createElementBlock","_createCommentVNode","_createVNode","_component_notifications","group","position","_hoisted_1","_hoisted_2","_ctx","item","title","onClick","close","innerHTML","text","_hoisted_6","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\App.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <!--<Sidebar />-->\r\n    <!--<Loader v-if=\"showLoader\"></Loader>-->\r\n    <!--<notifications\r\n      position=\"bottom right\"\r\n      closeOnClick=\"true\"\r\n      classes=\"my-notification\"\r\n    />-->\r\n    <notifications group=\"custom-template\" position=\"bottom right\">\r\n      <template slot=\"body\" slot-scope=\"props\">\r\n        <div>\r\n          <a class=\"title\">\r\n            {{ props.item.title }}\r\n          </a>\r\n          <a class=\"close\" @click=\"props.close\">\r\n            <i class=\"fa fa-fw fa-close\"></i>\r\n          </a>\r\n          <div v-html=\"props.item.text\"></div>\r\n        </div>\r\n      </template>\r\n    </notifications>\r\n    <section id=\"content\"><router-view></router-view></section>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n  // import Modal from \"@/components/Modal.vue\";\r\n\r\n  import { mapState } from \"vuex\";\r\n  import { AUTO_LOGIN_ACTION } from \"./store/storeconstants\";\r\n  export default {\r\n    name: \"App\",\r\n    computed: {\r\n      ...mapState({\r\n        showLoader: (state) => state.showLoader,\r\n        autoLogout: (state) => state.auth.autoLogout,\r\n      }),\r\n    },\r\n    watch: {\r\n      autoLogout(curValue, oldValue) {\r\n        if (curValue && curValue != oldValue) {\r\n          this.$router.replace(\"/Login\");\r\n        }\r\n      },\r\n    },\r\n    components: {\r\n      //Modal,\r\n    },\r\n    created() {\r\n      this.$store.dispatch(`auth/${AUTO_LOGIN_ACTION}`);\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}