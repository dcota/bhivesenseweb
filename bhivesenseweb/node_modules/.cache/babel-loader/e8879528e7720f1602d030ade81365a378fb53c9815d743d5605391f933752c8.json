{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3a4c590\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"line-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0,\n  class: \"row mt-3\"\n};\nconst _hoisted_5 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"card mt-5 text-center p-4\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"card mt-2\"\n};\nconst _hoisted_8 = {\n  class: \"card-body\",\n  style: {\n    \"border-radius\": \"3px\",\n    \"box-shadow\": \"rgba(0, 0, 0, 0.25) 0px 14px 28px,\\r\\n            rgba(0, 0, 0, 0.22) 0px 10px 10px\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"table mt-2 table-striped\"\n};\nconst _hoisted_10 = {\n  class: \"text-center\"\n};\nconst _hoisted_11 = {\n  class: \"text-center\"\n};\nconst _hoisted_12 = {\n  class: \"text-center\"\n};\nconst _hoisted_13 = {\n  class: \"text-center\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = {\n  class: \"text-center\"\n};\nconst _hoisted_16 = {\n  class: \"text-center\"\n};\nconst _hoisted_17 = [\"title\", \"onClick\"];\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-search\",\n  \"aria-hidden\": \"true\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_19 = [_hoisted_18];\nconst _hoisted_20 = {\n  class: \"text-center\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spinner-border mt-4\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")], -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"mb-2\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalDelete = _resolveComponent(\"ModalDelete\");\n  const _component_ModalDetails = _resolveComponent(\"ModalDetails\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString($options.translate(\"dashLogTitle\")), 1 /* TEXT */), _hoisted_3, $data.hasHiveEvents ? (_openBlock(), _createElementBlock(\"section\", _hoisted_4, [_createElementVNode(\"h4\", _hoisted_5, _toDisplayString($options.translate(\"dashLogDescr\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), !$data.hasHiveEvents && !$data.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($options.translate(\"cardNoEvents\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.hasHiveEvents ? (_openBlock(), _createElementBlock(\"section\", _hoisted_7, [_createElementVNode(\"section\", _hoisted_8, [_createElementVNode(\"table\", _hoisted_9, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString($options.translate(\"thdEvent\")), 1 /* TEXT */), _createElementVNode(\"th\", _hoisted_10, _toDisplayString($options.translate(\"thdHive\")), 1 /* TEXT */), _createElementVNode(\"th\", _hoisted_11, _toDisplayString($options.translate(\"tdDate\")), 1 /* TEXT */), _createElementVNode(\"th\", _hoisted_12, _toDisplayString($options.translate(\"thdDevicesApiary\")), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hiveEvents, event => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: event._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(event.text), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_13, [_createElementVNode(\"a\", {\n      onClick: $event => $options.loadDetails(event.apiary, event.device),\n      style: {\n        \"text-decoration\": \"underline\",\n        \"color\": \"brown\",\n        \"cursor\": \"pointer\"\n      }\n    }, _toDisplayString(event.device), 9 /* TEXT, PROPS */, _hoisted_14)]), _createElementVNode(\"td\", _hoisted_15, _toDisplayString(event.date), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_16, [_createElementVNode(\"button\", {\n      \"data-bs-toggle\": \"tooltip\",\n      title: $options.translate('lblCardApiary'),\n      \"data-bs-placement\": \"bottom\",\n      \"data-bs-custom-class\": \"custom-tooltip\",\n      onClick: $event => $options.detailsModalHive(event.apiary),\n      type: \"button\",\n      class: \"btn btn-info btn-sm me-2 ac-btn\",\n      style: {\n        \"width\": \"50px\"\n      }\n    }, _hoisted_19, 8 /* PROPS */, _hoisted_17)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"table for intervention notifictions\"), _withDirectives(_createVNode(_component_ModalDelete, {\n    onClose: $options.closeDeleteModalHive,\n    onSolve: $options.solveHive\n  }, null, 8 /* PROPS */, [\"onClose\", \"onSolve\"]), [[_vShow, $data.isModalDeleteVisible]]), _withDirectives(_createVNode(_component_ModalDetails, {\n    onClose: $options.closeDetailsModalHive,\n    location: $data.location,\n    address: $data.address,\n    observations: $data.observations,\n    regdate: $data.regdate\n  }, null, 8 /* PROPS */, [\"onClose\", \"location\", \"address\", \"observations\", \"regdate\"]), [[_vShow, $data.isModalDetailsVisible]]), _createElementVNode(\"section\", _hoisted_20, [$data.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_21, [_hoisted_22, _createElementVNode(\"section\", _hoisted_23, _toDisplayString($options.translate(\"spinnerTxt\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _hoisted_24]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_hoisted_18","role","_createElementBlock","_hoisted_1","_hoisted_2","$options","_hoisted_3","$data","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","event","key","_id","text","_hoisted_13","onClick","apiary","device","_hoisted_15","date","_hoisted_16","title","type","_createCommentVNode","_createVNode","_component_ModalDelete","onClose","onSolve","_component_ModalDetails","location","address","observations","regdate","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Logdetails.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"dashLogTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\" v-if=\"hasHiveEvents\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"dashLogDescr\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-5 text-center p-4\" v-if=\"!hasHiveEvents && !isShow\">\r\n      <h3>{{ translate(\"cardNoEvents\") }}</h3>\r\n    </section>\r\n    <section class=\"card mt-2\" v-if=\"hasHiveEvents\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2 table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdEvent\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdHive\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"tdDate\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdDevicesApiary\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n              <td>{{ event.text }}</td>\r\n              <td class=\"text-center\">\r\n                <a\r\n                  @click=\"loadDetails(event.apiary, event.device)\"\r\n                  style=\"\r\n                    text-decoration: underline;\r\n                    color: brown;\r\n                    cursor: pointer;\r\n                  \"\r\n                  >{{ event.device }}</a\r\n                >\r\n              </td>\r\n              <td class=\"text-center\">{{ event.date }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblCardApiary')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"detailsModalHive(event.apiary)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-info btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <!--table for intervention notifictions-->\r\n\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeDeleteModalHive\"\r\n      @solve=\"solveHive\"\r\n    />\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeDetailsModalHive\"\r\n      :location=\"location\"\r\n      :address=\"address\"\r\n      :observations=\"observations\"\r\n      :regdate=\"regdate\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDelete from \"../components/ModalSolveEvent.vue\";\r\n  import ModalDetails from \"../components/ModalApiaryNotification.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDelete,\r\n      ModalDetails,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        searchID: \"\",\r\n        data: localStorage.token,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        hasHiveEvents: false,\r\n        timer: \"\",\r\n        text: \"\",\r\n        location: \"\",\r\n        address: \"\",\r\n        observations: \"\",\r\n        regdate: \"\",\r\n        hiveEvents: [],\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getLog();\r\n      this.timer = setInterval(this.getEvents, 30000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    methods: {\r\n      closeDetailsModalHive() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModalHive() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async detailsModalHive(id) {\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModalHive(id) {\r\n        localStorage.setItem(\"idhivetosolve\", id);\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getLog() {\r\n        this.hiveEvents = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/log/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (!events.length == 0) {\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].cat == \"hive\") {\r\n                  let date = new Date(events[i].registration_date);\r\n                  let year = date.getFullYear();\r\n                  let month =\r\n                    date.getMonth() + 1 < 10\r\n                      ? \"0\" + (date.getMonth() + 1)\r\n                      : date.getMonth() + 1;\r\n                  let day =\r\n                    date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n                  this.text = \"\";\r\n                  if (events[i].type == \"LIDOPEN\") {\r\n                    this.text = this.translate(\"hiveText\");\r\n                  } else if (events[i].type == \"TEMPHIGH\") {\r\n                    this.text = this.translate(\"tempText\");\r\n                  } else if (events[i].type == \"HUMHIGH\") {\r\n                    this.text = this.translate(\"humText\");\r\n                  } else if (events[i].type == \"HARVEST\") {\r\n                    this.text = this.translate(\"harvestText\");\r\n                  }\r\n                  this.hiveEvents.push({\r\n                    _id: events[i]._id,\r\n                    apiary: events[i].apiary,\r\n                    device: events[i].device,\r\n                    date: year + \"-\" + month + \"-\" + day,\r\n                    text: this.text,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            this.hiveEvents.length > 0\r\n              ? (this.hasHiveEvents = true)\r\n              : (this.hasHiveEvents = false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.location = response.data.body.location;\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.regdate = response.data.body.registration_date;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async solveHive() {\r\n        this.isModalDeleteVisible = false;\r\n        let id = localStorage.getItem(\"idhivetosolve\");\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/event/solve/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"notifHiveEventSolved\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n        this.getEvents();\r\n      },\r\n      async assign(id) {\r\n        alert(id);\r\n        alert(localStorage.getItem(\"apiaryIDtoget\"));\r\n        await axios\r\n          .patch(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              id +\r\n              \"/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"assignMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      loadDetails(apiary, hive) {\r\n        localStorage.setItem(\"lastroute\", this.$route.path);\r\n        localStorage.setItem(\"hiveIDtoget\", hive);\r\n        localStorage.setItem(\"apiaryIDtoget\", apiary);\r\n        console.log(apiary, \" \", hive);\r\n        this.$router.push(\"/hivedetails\");\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}