{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"edit Apiary\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        location: \"\",\n        address: \"\",\n        observations: \"\"\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: false,\n      showsection: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.detail();\n  },\n  methods: {\n    async detail() {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      let id = localStorage.getItem(\"idtoedit\");\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.form.location = response.data.body.location;\n        this.form.address = response.data.body.address;\n        this.form.observations = response.data.body.observations;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n        return false;\n      });\n    },\n    async send() {\n      this.message.type = \"\", this.message.msg = \"\";\n      let postData = {\n        user: this._id,\n        address: this.form.address,\n        location: this.form.location,\n        observations: this.form.observations\n      };\n      //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\n      if (this.checkForm() == true) {\n        this.isShow = true;\n        await axios.post(\"https://bhsapi.duartecota.com/apiary\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            this.showsection = true;\n            this.message.type = \"success\";\n            this.message.msg = this.translate(\"mesNewApiarySuccess\");\n            setTimeout(() => this.showsection = false, 3000);\n          } else {\n            this.isShow = false;\n            this.showsection = true;\n            this.message.type = \"danger\";\n            this.message.msg = this.translate(\"mesProblem\");\n          }\n        }).catch(error => {\n          console.log(error);\n          this.isShow = false;\n          this.showsection = true;\n          this.message.type = \"danger\";\n          this.message.msg = this.translate(\"mesProblem\");\n        });\n      } else {\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesFields\");\n        setTimeout(() => this.showsection = false, 3000);\n      }\n    },\n    cleanForm() {\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      this.form.location = \"\", this.form.address = \"\", this.form.observations = \"\";\n      this.isShow = false;\n      this.showsection = false;\n    },\n    back() {\n      this.$router.replace(\"/\");\n    },\n    checkForm() {\n      if (this.form.location == \"\" || this.form.address == \"\" || this.form.observations == \"\") return false;else return true;\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","form","location","address","observations","message","type","msg","isShow","showsection","computed","token","level","_id","mounted","detail","methods","id","get","headers","Authorization","then","response","body","catch","title","translate","text","duration","speed","send","postData","user","checkForm","post","http","setTimeout","error","console","log","cleanForm","back","$router","replace","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Editapiary.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n    <section class=\"container my-body\">\r\n      <h1 class=\"text-center mt-5\">{{ translate(\"formEditApiaryTitle\") }}</h1>\r\n      <section\r\n        v-if=\"showsection\"\r\n        class=\"alert mt-3 alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        v-bind:class=\"'alert-' + message.type\"\r\n      >\r\n        {{ message.msg }}\r\n      </section>\r\n      <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n        <section class=\"row\">\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"location\" class=\"form-label\">{{\r\n              translate(\"formNewApiaryLocation\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.location\"\r\n              class=\"form-control\"\r\n              id=\"mobile\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"address\" class=\"form-label\">{{\r\n              translate(\"formNewApiaryAddress\")\r\n            }}</label>\r\n            <input\r\n              class=\"form-control textbox-n\"\r\n              type=\"text\"\r\n              v-model=\"form.address\"\r\n              id=\"bdate\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"row\">\r\n          <section class=\"col-md-12 g-4\">\r\n            <label for=\"observations\" class=\"form-label\">{{\r\n              translate(\"formNewApiaryObservations\")\r\n            }}</label>\r\n            <textarea\r\n              rows=\"5\"\r\n              v-model=\"form.observations\"\r\n              class=\"form-control\"\r\n              id=\"username\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"text-center\">\r\n          <button @click=\"send\" type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n            {{ translate(\"btnSubmit\") }}\r\n          </button>\r\n          <button\r\n            @click=\"cleanForm()\"\r\n            type=\"button\"\r\n            class=\"btn mt-4 me-4 my-button\"\r\n          >\r\n            {{ translate(\"btnClean\") }}\r\n          </button>\r\n          <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n            {{ translate(\"btnBack\") }}\r\n          </button>\r\n        </section>\r\n      </form>\r\n      <section class=\"text-center\">\r\n        <section v-if=\"isShow\" class=\"text-center\">\r\n          <section class=\"spinner-border mt-4\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </section>\r\n          <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n        </section>\r\n      </section>\r\n      <section class=\"spacer\"></section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n.my-body {\r\n  margin-top: 0px;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"edit Apiary\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          location: \"\",\r\n          address: \"\",\r\n          observations: \"\",\r\n        },\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        isShow: false,\r\n        showsection: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n\r\n    mounted() {\r\n      this.detail();\r\n    },\r\n    methods: {\r\n      async detail() {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        let id = localStorage.getItem(\"idtoedit\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.form.location = response.data.body.location;\r\n            this.form.address = response.data.body.address;\r\n            this.form.observations = response.data.body.observations;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            return false;\r\n          });\r\n      },\r\n      async send() {\r\n        (this.message.type = \"\"), (this.message.msg = \"\");\r\n        let postData = {\r\n          user: this._id,\r\n          address: this.form.address,\r\n          location: this.form.location,\r\n          observations: this.form.observations,\r\n        };\r\n        //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\r\n        if (this.checkForm() == true) {\r\n          this.isShow = true;\r\n          await axios\r\n            .post(\"https://bhsapi.duartecota.com/apiary\", postData, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.http == 201) {\r\n                this.isShow = false;\r\n                this.showsection = true;\r\n                this.message.type = \"success\";\r\n                this.message.msg = this.translate(\"mesNewApiarySuccess\");\r\n                setTimeout(() => (this.showsection = false), 3000);\r\n              } else {\r\n                this.isShow = false;\r\n                this.showsection = true;\r\n                this.message.type = \"danger\";\r\n                this.message.msg = this.translate(\"mesProblem\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"danger\";\r\n              this.message.msg = this.translate(\"mesProblem\");\r\n            });\r\n        } else {\r\n          this.isShow = false;\r\n          this.showsection = true;\r\n          this.message.type = \"danger\";\r\n          this.message.msg = this.translate(\"mesFields\");\r\n          setTimeout(() => (this.showsection = false), 3000);\r\n        }\r\n      },\r\n      cleanForm() {\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        (this.form.location = \"\"),\r\n          (this.form.address = \"\"),\r\n          (this.form.observations = \"\");\r\n        this.isShow = false;\r\n        this.showsection = false;\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      checkForm() {\r\n        if (\r\n          this.form.location == \"\" ||\r\n          this.form.address == \"\" ||\r\n          this.form.observations == \"\"\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}