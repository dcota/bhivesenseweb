{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport { LOADING_SPINNER_SHOW_MUTATION, GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"submit\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        firstname: \"\",\n        lastname: \"\",\n        name: \"\",\n        nif: \"\",\n        type: \"\",\n        email: \"\",\n        mobile: \"\",\n        bdate: \"\",\n        notifications: true\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: false,\n      showsection: false,\n      lang: lang,\n      item: {\n        image: null,\n        imageUrl: null\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.getAccountInfo();\n  },\n  methods: {\n    async getAccountInfo() {\n      this.message.type = \"\", this.message.msg = \"\", await axios.get(\"https://bhsapi.duartecota.com/user/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        console.log(response.data.body.name)(this.form.firstname = response.data.body.firstname), this.form.lastname = response.data.body.lastname, this.form.name = response.data.body.name, this.form.type = response.data.body.type, this.form.nif = response.data.body.nif, this.form.bdate = response.data.body.bdate, this.form.email = response.data.body.email, this.form.mobile = response.data.body.mobile, this.form.notifications = response.data.body.notifications;\n        this.item.imageUrl = response.data.body.img;\n        this.isShow = false;\n      }).catch(() => {\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n        this.isShow = true;\n      });\n    },\n    async update() {\n      this.message.type = \"\", this.message.msg = \"\", this.showLoader(true);\n      let postData = {\n        firstname: this.form.firstname,\n        lastname: this.form.lastname,\n        name: this.form.name,\n        course: this.form.course,\n        class: this.form.class,\n        email: this.form.email,\n        mobile: parseInt(this.form.mobile),\n        bdate: this.form.bdate,\n        notifications: this.form.notifications\n      };\n      await axios.patch(\"https://cprob-api.herokuapp.com/user/\" + this._id, postData, {\n        //.patch(\"http://localhost:3000/user/\" + this._id, postData, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.showLoader(false);\n          this.message.type = \"success\";\n          this.message.msg = \"Alterações registadas com sucesso.\";\n          this.isShow = true;\n        } else {\n          this.showLoader(false);\n          this.message.type = \"danger\";\n          this.message.msg = \"Ocorreu um problema, tente de novo...\";\n        }\n      }).catch(() => {\n        this.error = \"Valores inválidos!\";\n        this.showLoader(false);\n      });\n    },\n    leave() {\n      this.$router.replace(\"/\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    onChange(e) {\n      const file = e.target.files[0];\n      this.item.image = file; //o que deve ser enviado\n      this.item.imageUrl = URL.createObjectURL(file);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","mapGetters","mapMutations","LOADING_SPINNER_SHOW_MUTATION","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","form","firstname","lastname","nif","type","email","mobile","bdate","notifications","message","msg","isShow","showsection","item","image","imageUrl","computed","token","level","_id","mounted","getAccountInfo","methods","get","headers","Authorization","then","response","console","log","body","img","catch","translate","update","showLoader","postData","course","class","parseInt","patch","http","error","leave","$router","replace","prop","onChange","e","file","target","files","URL","createObjectURL"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Account.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Alterar Conta\r\n*/\r\n\r\n<template>\r\n  <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n    <section class=\"container my-body\">\r\n      <h1 class=\"text-center mt-5\">{{ translate(\"accFormTitle\") }}</h1>\r\n      <section\r\n        v-if=\"showsection\"\r\n        class=\"alert mt-3 alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        v-bind:class=\"'alert-' + message.type\"\r\n      >\r\n        {{ message.msg }}\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </section>\r\n      <form class=\"form-signin\" v-on:submit.prevent=\"send\">\r\n        <section class=\"row align-items-center\" style=\"min-height: 15vh\">\r\n          <section class=\"col-md-8 g-4\">\r\n            <label for=\"\" class=\"me-5\">{{ translate(\"profilePhoto\") }}</label>\r\n            <label for=\"img\" class=\"btn my-button\">{{\r\n              translate(\"photoButton\")\r\n            }}</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"img\"\r\n              style=\"display: none\"\r\n              accept=\"image/*\"\r\n              @change=\"onChange\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-4 d-flex justify-content-center\">\r\n            <section id=\"preview\">\r\n              <img\r\n                v-if=\"item.imageUrl\"\r\n                :src=\"item.imageUrl\"\r\n                width=\"100\"\r\n                height=\"100\"\r\n                class=\"rounded-circle me-2\"\r\n                style=\"\r\n                  background-color: white;\r\n                  border-radius: 2px;\r\n                  border-color: gray;\r\n                  border-style: solid;\r\n                \"\r\n              />\r\n              <img\r\n                v-else\r\n                src=\"../assets/avatar.png\"\r\n                width=\"100\"\r\n                height=\"100\"\r\n                class=\"rounded-circle me-2\"\r\n                style=\"\r\n                  background-color: white;\r\n                  border-radius: 2px;\r\n                  border-color: gray;\r\n                  border-style: solid;\r\n                \"\r\n              />\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <section class=\"row mt-4\">\r\n          <section class=\"col-md-2 g-4\">\r\n            <label for=\"firstname\" class=\"form-label\">{{\r\n              translate(\"newAccFnamePh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.firstname\"\r\n              class=\"form-control\"\r\n              id=\"firstname\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-2 g-4\">\r\n            <label for=\"lastname\" class=\"form-label\">{{\r\n              translate(\"newAccLnamePh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.lastname\"\r\n              class=\"form-control\"\r\n              id=\"lastname\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-8 g-4\">\r\n            <label for=\"name\" class=\"form-label\">{{\r\n              translate(\"newAccNamePh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"row\">\r\n          <section class=\"col-md-4 g-4\">\r\n            <label for=\"type\" class=\"form-label\">{{\r\n              translate(\"selectLbl\")\r\n            }}</label>\r\n            <select\r\n              class=\"form-select\"\r\n              v-model=\"form.type\"\r\n              style=\"font-size: small\"\r\n            >\r\n              <option v-bind:value=\"translate('typeOp1')\">\r\n                {{ translate(\"typeOp1\") }}\r\n              </option>\r\n              <option v-bind:value=\"translate('typeOp2')\">\r\n                {{ translate(\"typeOp2\") }}\r\n              </option>\r\n              <option v-bind:value=\"translate('typeOp3')\">\r\n                {{ translate(\"typeOp3\") }}\r\n              </option>\r\n            </select>\r\n          </section>\r\n          <section class=\"col-md-4 g-4\">\r\n            <label for=\"nif\" class=\"form-label\">{{\r\n              translate(\"newAccNifPh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.nif\"\r\n              class=\"form-control\"\r\n              id=\"course\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-4 g-4\">\r\n            <label for=\"email\" class=\"form-label\">{{\r\n              translate(\"newAccEmailPh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.email\"\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"row\">\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"mobile\" class=\"form-label\">{{\r\n              translate(\"newAccMobilePh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.mobile\"\r\n              class=\"form-control\"\r\n              id=\"mobile\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"bdate\" class=\"form-label\">{{\r\n              translate(\"newAccBdatePh\")\r\n            }}</label>\r\n            <input\r\n              class=\"form-control textbox-n\"\r\n              type=\"text\"\r\n              v-model=\"form.bdate\"\r\n              onfocus=\"(this.type = 'date')\"\r\n              id=\"bdate\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <!--<section class=\"row\">\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"username\" class=\"form-label\">{{\r\n              translate(\"newAccUserPh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.auth.username\"\r\n              class=\"form-control\"\r\n              id=\"username\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"password\" class=\"form-label\">{{\r\n              translate(\"newAccPassPh\")\r\n            }}</label>\r\n            <input\r\n              type=\"password\"\r\n              v-model=\"form.auth.password\"\r\n              class=\"form-control\"\r\n              id=\"password\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>-->\r\n        <section class=\"row mt-4\">\r\n          <section>\r\n            <section class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                v-model=\"form.notifications\"\r\n                value=\"\"\r\n                id=\"subscribenews\"\r\n                checked\r\n                style=\"text-align: left: important;\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"subscribenews\">\r\n                {{ translate(\"newAccSubs\") }}</label\r\n              >\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <section class=\"text-center\">\r\n          <button @click=\"send()\" type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n            {{ translate(\"btnSubmit\") }}\r\n          </button>\r\n          <!--<button\r\n            @click=\"cleanForm()\"\r\n            type=\"button\"\r\n            class=\"btn mt-4 me-4 my-button\"\r\n          >\r\n            {{ translate(\"btnClean\") }}\r\n          </button>-->\r\n          <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n            {{ translate(\"btnBack\") }}\r\n          </button>\r\n        </section>\r\n      </form>\r\n      <section class=\"text-center\">\r\n        <section v-if=\"isShow\" class=\"text-center\">\r\n          <section class=\"spinner-border mt-4\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </section>\r\n          <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n        </section>\r\n      </section>\r\n      <section class=\"spacer\"></section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n.my-body {\r\n  margin-top: 0px;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { mapGetters, mapMutations } from \"vuex\";\r\n  import {\r\n    LOADING_SPINNER_SHOW_MUTATION,\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"submit\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          name: \"\",\r\n          nif: \"\",\r\n          type: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          bdate: \"\",\r\n          notifications: true,\r\n        },\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        isShow: false,\r\n        showsection: false,\r\n        lang: lang,\r\n        item: {\r\n          image: null,\r\n          imageUrl: null,\r\n        },\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getAccountInfo();\r\n    },\r\n    methods: {\r\n      async getAccountInfo() {\r\n        (this.message.type = \"\"),\r\n          (this.message.msg = \"\"),\r\n          await axios\r\n            .get(\"https://bhsapi.duartecota.com/user/\" + this._id, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              console.log(response.data.body.name)(\r\n                (this.form.firstname = response.data.body.firstname)\r\n              ),\r\n                (this.form.lastname = response.data.body.lastname),\r\n                (this.form.name = response.data.body.name),\r\n                (this.form.type = response.data.body.type),\r\n                (this.form.nif = response.data.body.nif),\r\n                (this.form.bdate = response.data.body.bdate),\r\n                (this.form.email = response.data.body.email),\r\n                (this.form.mobile = response.data.body.mobile),\r\n                (this.form.notifications = response.data.body.notifications);\r\n              this.item.imageUrl = response.data.body.img;\r\n              this.isShow = false;\r\n            })\r\n            .catch(() => {\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"danger\";\r\n              this.message.msg = this.translate(\"mesProblem\");\r\n              this.isShow = true;\r\n            });\r\n      },\r\n      async update() {\r\n        (this.message.type = \"\"), (this.message.msg = \"\"), this.showLoader(true);\r\n        let postData = {\r\n          firstname: this.form.firstname,\r\n          lastname: this.form.lastname,\r\n          name: this.form.name,\r\n          course: this.form.course,\r\n          class: this.form.class,\r\n          email: this.form.email,\r\n          mobile: parseInt(this.form.mobile),\r\n          bdate: this.form.bdate,\r\n          notifications: this.form.notifications,\r\n        };\r\n        await axios\r\n          .patch(\"https://cprob-api.herokuapp.com/user/\" + this._id, postData, {\r\n            //.patch(\"http://localhost:3000/user/\" + this._id, postData, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.showLoader(false);\r\n              this.message.type = \"success\";\r\n              this.message.msg = \"Alterações registadas com sucesso.\";\r\n              this.isShow = true;\r\n            } else {\r\n              this.showLoader(false);\r\n              this.message.type = \"danger\";\r\n              this.message.msg = \"Ocorreu um problema, tente de novo...\";\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.error = \"Valores inválidos!\";\r\n            this.showLoader(false);\r\n          });\r\n      },\r\n      leave() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      onChange(e) {\r\n        const file = e.target.files[0];\r\n        this.item.image = file; //o que deve ser enviado\r\n        this.item.imageUrl = URL.createObjectURL(file);\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}