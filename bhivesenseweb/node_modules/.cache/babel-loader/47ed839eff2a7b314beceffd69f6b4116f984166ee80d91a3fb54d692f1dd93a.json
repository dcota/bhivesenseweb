{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport { LOADING_SPINNER_SHOW_MUTATION, GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  data() {\n    return {\n      data: localStorage.token,\n      usersAccepted: [],\n      usersToAccept: [],\n      showModal: true,\n      form: {\n        firstname: \"\",\n        lastname: \"\",\n        name: \"\",\n        course: \"\",\n        class: \"\",\n        email: \"\",\n        mobile: \"\",\n        bdate: \"\",\n        notifications: false\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      state: true,\n      isShow: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  /*mounted() {\r\n    this.getUsers();\r\n  },*/\n  methods: {\n    ...mapMutations({\n      showLoader: LOADING_SPINNER_SHOW_MUTATION\n    }),\n    async getUsers() {\n      this.usersAccepted = [];\n      this.usersToAccept = [];\n      this.showLoader(true);\n      await axios.get(\"https://cprob-api.herokuapp.com/user\", {\n        //.get(\"http://localhost:3000/user\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.showLoader(false);\n        let users = response.data.body;\n        for (let i = 0; i < users.length; i++) {\n          if (users[i].accepted == true && users[i].level == \"student\") {\n            this.usersAccepted.push({\n              _id: users[i]._id,\n              firstname: users[i].firstname,\n              lastname: users[i].lastname,\n              course: users[i].course,\n              class: users[i].class\n            });\n          } else if (users[i].accepted == false && users[i].level == \"student\") {\n            this.usersToAccept.push({\n              _id: users[i]._id,\n              firstname: users[i].firstname,\n              lastname: users[i].lastname,\n              course: users[i].course,\n              class: users[i].class\n            });\n          }\n        }\n      }).catch(error => {\n        this.showLoader(false);\n        alert(error);\n      });\n    },\n    async acceptStd(_id) {\n      this.showLoader(true);\n      await axios.put(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.put(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(() => {\n        this.message.msg = \"Utilizador aceite!\";\n        this.message.type = \"success\";\n        this.isShow = true;\n        this.showLoader(false);\n        this.getUsers();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async deleteStd(_id) {\n      this.showLoader(true);\n      await axios.delete(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.delete(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(() => {\n        this.message.msg = \"Utilizador eliminado!\";\n        this.message.type = \"success\";\n        this.isShow = true;\n        this.showLoader(false);\n        this.getUsers();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async detail(_id) {\n      this.message.type = \"\", this.message.msg = \"\", this.showLoader(true);\n      await axios.get(\"https://cprob-api.herokuapp.com/user/\" + _id, {\n        //.get(\"http://localhost:3000/user/\" + _id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.form.firstname = response.data.body.firstname, this.form.lastname = response.data.body.lastname, this.form.name = response.data.body.name, this.form.course = response.data.body.course, this.form.class = response.data.body.class, this.form.bdate = response.data.body.bdate, this.form.email = response.data.body.email, this.form.mobile = response.data.body.mobile;\n        if (response.data.body.notifications == true) this.form.notifications = \"SIM\";else this.form.notifications = \"NÃƒO\";\n        this.state = true;\n        this.showLoader(false);\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = true;\n        this.showLoader(false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","mapGetters","mapMutations","LOADING_SPINNER_SHOW_MUTATION","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","data","localStorage","token","usersAccepted","usersToAccept","showModal","form","firstname","lastname","name","course","class","email","mobile","bdate","notifications","message","type","msg","state","isShow","computed","level","_id","methods","showLoader","getUsers","get","headers","Authorization","then","response","users","body","i","length","accepted","push","catch","error","alert","acceptStd","put","console","log","deleteStd","delete","detail"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Admin.vue"],"sourcesContent":["/*\r\nMEIW - ProgramaÃ§Ã£o Web AvanÃ§ada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view GestÃ£o de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container\">\r\n    <section class=\"row mt-3 text-center\">\r\n      <h1 class=\"text-center\">GESTÃƒO DE ALUNOS</h1>\r\n    </section>\r\n    <section v-if=isShow\r\n      class=\"alert mt-3\"\r\n      role=\"alert\"\r\n      v-bind:class=\"'alert-' + message.type\"\r\n    >\r\n      {{ message.msg }}\r\n    </section>\r\n    <section class=\"row mt-3\">\r\n      <h4>Alunos inscritos:</h4>\r\n    </section>\r\n    <!--<section class=\"card mt-2\">\r\n      <section class=\"card-body\">\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Turma</th>\r\n              <th>Curso</th>\r\n              <th class=\"text-center\">AÃ§Ãµes</th>\r\n            </tr>\r\n            <tr v-for=\"user of this.usersAccepted\" :key=\"user._id\">\r\n              <td>{{ user.firstname + \" \" + user.lastname }}</td>\r\n              <td>{{ user.course }}</td>\r\n              <td>{{ user.class }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  @click=\"detail(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#exampleModal\"\r\n                >\r\n                  <i class=\"fas fa-search me-1\" aria-hidden=\"true\"></i>\r\n                  Detalhes\r\n                </button>\r\n                <button\r\n                  @click=\"deleteStd(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"far fa-trash-alt me-1\" aria-hidden=\"true\"></i\r\n                  >Remover\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <section class=\"row mt-3\">\r\n      <h4>Pedidos pendentes:</h4>\r\n    </section>\r\n    <section class=\"card mt-2\">\r\n      <section class=\"card-body\">\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Turma</th>\r\n              <th>Curso</th>\r\n              <th class=\"text-center\">AÃ§Ãµes</th>\r\n            </tr>\r\n            <tr v-for=\"user of this.usersToAccept\" :key=\"user._id\">\r\n              <td>{{ user.firstname + \" \" + user.lastname }}</td>\r\n              <td>{{ user.course }}</td>\r\n              <td>{{ user.class }}</td>\r\n              <td>\r\n                <button\r\n                  @click=\"acceptStd(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"fas fa-check me-1 act-btn\" aria-hidden=\"true\"></i\r\n                  >Aceitar\r\n                </button>\r\n                <button\r\n                  @click=\"deleteStd(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"far fa-trash-alt me-1\" aria-hidden=\"true\"></i\r\n                  >Rejeitar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>-->\r\n    <!-- Modal -->\r\n    <!--<section\r\n      class=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      v-if=\"state == true\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <section class=\"modal-lg modal-dialog\">\r\n        <section class=\"modal-content\">\r\n          <section class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n              Detalhes do aluno:\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </section>\r\n          <section class=\"modal-body\">\r\n            <section class=\"row\">\r\n              <section class=\"col-md-3\">Nome:</section>\r\n              <section class=\"col-md-4\">{{ form.name }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-3\">Curso:</section>\r\n              <section class=\"col-md-4\">{{ form.course }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-3\">Turma:</section>\r\n              <section class=\"col-md-4\">{{ form.class }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-3\">Email:</section>\r\n              <section class=\"col-md-4\">{{ form.email }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-3\">Contacto mÃ³vel:</section>\r\n              <section class=\"col-md-4\">{{ form.mobile }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-3\">Data de nascimento:</section>\r\n              <section class=\"col-md-4\">{{ form.bdate }}</section>\r\n            </section>\r\n            <section class=\"row mt-3\">\r\n              <section class=\"col-md-4\">SubscriÃ§Ã£o de notificaÃ§Ãµes:</section>\r\n              <section class=\"col-md-4\">{{ form.notifications }}</section>\r\n            </section>\r\n          </section>\r\n          <section class=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              data-bs-dismiss=\"modal\"\r\n            >\r\n              Fechar\r\n            </button>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>-->\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\nimport {\r\n  LOADING_SPINNER_SHOW_MUTATION,\r\n  GET_USER_TOKEN_GETTER,\r\n  GET_USER_LEVEL_GETTER,\r\n  GET_USER_ID_GETTER,\r\n} from \"../store/storeconstants\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: localStorage.token,\r\n      usersAccepted: [],\r\n      usersToAccept: [],\r\n      showModal: true,\r\n      form: {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        name: \"\",\r\n        course: \"\",\r\n        class: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        bdate: \"\",\r\n        notifications: false,\r\n      },\r\n      message: {\r\n        type: \"\",\r\n        msg: \"\",\r\n      },\r\n      state: true,\r\n      isShow: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", {\r\n      token: GET_USER_TOKEN_GETTER,\r\n      level: GET_USER_LEVEL_GETTER,\r\n      _id: GET_USER_ID_GETTER,\r\n    }),\r\n  },\r\n  /*mounted() {\r\n    this.getUsers();\r\n  },*/\r\n  methods: {\r\n    ...mapMutations({\r\n      showLoader: LOADING_SPINNER_SHOW_MUTATION,\r\n    }),\r\n\r\n    async getUsers() {\r\n      this.usersAccepted = [];\r\n      this.usersToAccept = [];\r\n      this.showLoader(true);\r\n      await axios\r\n        .get(\"https://cprob-api.herokuapp.com/user\", {\r\n        //.get(\"http://localhost:3000/user\", {\r\n          headers: {\r\n            Authorization: this.token,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.showLoader(false);\r\n          let users = response.data.body;\r\n          for (let i = 0; i < users.length; i++) {\r\n            if (users[i].accepted == true && users[i].level == \"student\") {\r\n              this.usersAccepted.push({\r\n                _id: users[i]._id,\r\n                firstname: users[i].firstname,\r\n                lastname: users[i].lastname,\r\n                course: users[i].course,\r\n                class: users[i].class,\r\n              });\r\n            } else if (\r\n              users[i].accepted == false &&\r\n              users[i].level == \"student\"\r\n            ) {\r\n              this.usersToAccept.push({\r\n                _id: users[i]._id,\r\n                firstname: users[i].firstname,\r\n                lastname: users[i].lastname,\r\n                course: users[i].course,\r\n                class: users[i].class,\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.showLoader(false);\r\n          alert(error);\r\n        });\r\n    },\r\n    async acceptStd(_id) {\r\n      this.showLoader(true);\r\n      await axios\r\n        .put(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n        //.put(\"http://localhost:3000/user/\" + _id, {\r\n          headers: {\r\n            Authorization: this.token,\r\n          },\r\n        })\r\n        .then(() => {\r\n          this.message.msg = \"Utilizador aceite!\";\r\n          this.message.type = \"success\";\r\n          this.isShow=true\r\n          this.showLoader(false);\r\n          this.getUsers();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    async deleteStd(_id) {\r\n      this.showLoader(true);\r\n      await axios\r\n        .delete(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n        //.delete(\"http://localhost:3000/user/\" + _id, {\r\n          headers: {\r\n            Authorization: this.token,\r\n          },\r\n        })\r\n        .then(() => {\r\n          this.message.msg = \"Utilizador eliminado!\";\r\n          this.message.type = \"success\";\r\n          this.isShow=true\r\n          this.showLoader(false);\r\n          this.getUsers();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    async detail(_id) {\r\n      (this.message.type = \"\"), (this.message.msg = \"\"), this.showLoader(true);\r\n      await axios\r\n        .get(\"https://cprob-api.herokuapp.com/user/\" + _id, {\r\n        //.get(\"http://localhost:3000/user/\" + _id, {\r\n          headers: {\r\n            Authorization: this.token,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          (this.form.firstname = response.data.body.firstname),\r\n            (this.form.lastname = response.data.body.lastname),\r\n            (this.form.name = response.data.body.name),\r\n            (this.form.course = response.data.body.course),\r\n            (this.form.class = response.data.body.class),\r\n            (this.form.bdate = response.data.body.bdate),\r\n            (this.form.email = response.data.body.email),\r\n            (this.form.mobile = response.data.body.mobile);\r\n          if (response.data.body.notifications == true)\r\n            this.form.notifications = \"SIM\";\r\n          else this.form.notifications = \"NÃƒO\";\r\n          this.state = true;\r\n          this.showLoader(false);\r\n        })\r\n        .catch(() => {\r\n          this.message.msg = \"Ocorreu um problema\";\r\n          this.message.type = \"warning\";\r\n          this.isShow=true\r\n          this.showLoader(false);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}