{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { IS_USER_AUTHENTICATED_GETTER, GET_USER_ID_GETTER, GET_USER_TOKEN_GETTER, AUTO_NUMEVENTS_ACTION, GET_NUMEVENTS_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      logo: require(\"../assets/IMG1224.png\"),\n      lang: lang,\n      nEvents: \"\",\n      eventsText: \"\",\n      nInterventions: 0,\n      interventionsText: \"\",\n      nMessages: 0,\n      totalApiaries: \"\",\n      totalHives: \"\",\n      totalProduction: \"\",\n      timer: \"\",\n      isShow: true,\n      interventions: [],\n      harvestEvents: [],\n      nHarvest: 0,\n      harvestText: \"\",\n      hiveEvents: []\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\n      token: GET_USER_TOKEN_GETTER,\n      _id: GET_USER_ID_GETTER,\n      numEvents: GET_NUMEVENTS_GETTER,\n      auth: localStorage.getItem(\"auth\")\n    })\n  },\n  mounted() {\n    this.updateEvents();\n    this.updateHarvest();\n    this.refreshDashboard();\n    this.timer = setInterval(this.updateEvents, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  /*beforeCreate() {\r\n            this.$OneSignal.showSlidedownPrompt();\r\n          },*/\n  methods: {\n    ...mapActions(\"auth\", {\n      _numEventsChng: AUTO_NUMEVENTS_ACTION\n    }),\n    interventionsEvent() {\n      console.log(this.interventions);\n      localStorage.setItem(\"teste\", JSON.stringify(this.interventions));\n      this.$router.push(\"sooninterventions\");\n    },\n    refreshDashboard() {\n      this.updateEvents();\n      this.updateInterventions();\n      this.updateTotalApiaries();\n      this.updateTotalHives();\n      this.updateTotalProduction();\n      this.getLog();\n    },\n    updateEvents() {\n      if (this.numEvents == null) {\n        this.nEvents = 0;\n        this.eventsText = this.translate(\"dashEventsTextNo\");\n      } else {\n        this.nEvents = this.numEvents;\n        this.eventsText = this.translate(\"dashEventsTextYes\");\n      }\n    },\n    async updateInterventions() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.body.length == 0) {\n          this.nInterventions = 0;\n          this.interventionsText = this.translate(\"dashIntervTextNo\");\n        } else {\n          this.interventions = response.data.body;\n          this.nInterventions = response.data.body.length;\n          this.interventionsText = this.translate(\"dashIntervTextYes\");\n        }\n      });\n    },\n    async updateHarvest() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (events.length == 0) {\n          this.nHarvest = 0;\n          this.harvestText = this.translate(\"dashHarvestNo\");\n        } else {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].type == \"HARVEST\") {\n              this.nHarvest = events.length;\n              this.harvestText = this.translate(\"dashHarvestYes\");\n              break;\n            } else {\n              this.nHarvest = 0;\n              this.harvestText = this.translate(\"dashHarvestNo\");\n            }\n          }\n        }\n        console.log(this.harvestText);\n        console.log(this.nHarvest);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async updateTotalApiaries() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalApiaries = response.data.body.totalApiaries;\n      }).catch(error => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async updateTotalHives() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalHives = response.data.body.totalHives;\n      }).catch(error => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n      this.isShow = false;\n    },\n    async updateTotalProduction() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/harvest/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalProduction = response.data.body.totalProduction;\n      }).catch(error => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n      this.isShow = false;\n    },\n    async getLog() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/log/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (!events.length == 0) {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].cat == \"hive\") {\n              let date = new Date(events[i].registration_date);\n              let year = date.getFullYear();\n              let month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n              let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n              this.text = \"\";\n              if (events[i].type == \"LIDOPEN\") {\n                this.text = this.translate(\"hiveText\");\n              } else if (events[i].type == \"TEMPHIGH\") {\n                this.text = this.translate(\"tempText\");\n              } else if (events[i].type == \"HUMHIGH\") {\n                this.text = this.translate(\"humText\");\n              }\n              if (events[i].type != \"HARVEST\") this.hiveEvents.push({\n                _id: events[i]._id,\n                apiary: events[i].apiary,\n                device: events[i].device,\n                date: year + \"-\" + month + \"-\" + day,\n                text: this.text\n              });\n            }\n          }\n        }\n      });\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","en","pt","mapActions","mapGetters","IS_USER_AUTHENTICATED_GETTER","GET_USER_ID_GETTER","GET_USER_TOKEN_GETTER","AUTO_NUMEVENTS_ACTION","GET_NUMEVENTS_GETTER","mixins","data","lang","localStorage","getItem","logo","require","nEvents","eventsText","nInterventions","interventionsText","nMessages","totalApiaries","totalHives","totalProduction","timer","isShow","interventions","harvestEvents","nHarvest","harvestText","hiveEvents","computed","isAuthenticated","token","_id","numEvents","auth","mounted","updateEvents","updateHarvest","refreshDashboard","setInterval","beforeUnmount","clearInterval","methods","_numEventsChng","interventionsEvent","console","log","setItem","JSON","stringify","$router","push","updateInterventions","updateTotalApiaries","updateTotalHives","updateTotalProduction","getLog","translate","get","headers","Authorization","then","response","body","length","events","i","type","catch","error","notify","title","text","duration","speed","cat","date","Date","registration_date","year","getFullYear","month","getMonth","day","getDate","apiary","device","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Homebeekeeper.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Home\r\n*/\r\n\r\n<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"myDashTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section v-if=\"!isShow\">\r\n      <!--1st row-->\r\n      <section class=\"row mt-3\">\r\n        <!--events-->\r\n        <section class=\"col-12 col-md-4 col-lg-4\">\r\n          <section\r\n            class=\"card mb-3 mh-100 text-center\"\r\n            style=\"\r\n              border-radius: 10px;\r\n              box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n            \"\r\n          >\r\n            <section class=\"card-body\">\r\n              <h6 class=\"card-title text-center\">\r\n                <strong\r\n                  ><span> {{ translate(\"dashNotif\") }}</span></strong\r\n                >\r\n              </h6>\r\n              <section class=\"text-center my-text-green\" v-if=\"nEvents == 0\">\r\n                <hr />\r\n                <i class=\"fa-regular fa-face-smile\" style=\"font-size: 30px\"></i>\r\n                {{ eventsText }}\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('events')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-success\"\r\n                    style=\"font-size: small; width: 160px\"\r\n                  >\r\n                    {{ translate(\"dashNotifBtn\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n              <section class=\"text-center my-text-red\" v-if=\"nEvents > 0\">\r\n                <hr />\r\n                <p>\r\n                  <i\r\n                    class=\"fa-regular fa-face-frown\"\r\n                    style=\"font-size: 30px\"\r\n                  ></i>\r\n                </p>\r\n                {{ eventsText }}\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('events')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-danger\"\r\n                    style=\"font-size: small; width: 160px\"\r\n                  >\r\n                    {{ translate(\"dashNotifBtn\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <!--interventions-->\r\n        <section class=\"col-12 col-md-4 col-lg-4\">\r\n          <section\r\n            class=\"card mb-3 mh-100 text-center\"\r\n            style=\"\r\n              border-radius: 10px;\r\n              box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n            \"\r\n          >\r\n            <section class=\"card-body\">\r\n              <h6 class=\"card-title text-center\">\r\n                <strong\r\n                  ><span> {{ translate(\"dashInterventions\") }}</span></strong\r\n                >\r\n              </h6>\r\n              <section\r\n                class=\"text-center my-text-green\"\r\n                v-if=\"nInterventions == 0\"\r\n              >\r\n                <hr />\r\n                <p>\r\n                  <i\r\n                    class=\"fa-solid fa-circle-check\"\r\n                    style=\"font-size: 30px\"\r\n                  ></i>\r\n                </p>\r\n                <section>{{ interventionsText }}</section>\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('sooninterventions')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-success\"\r\n                    style=\"font-size: small; width: 160px\"\r\n                    disabled\r\n                  >\r\n                    {{ translate(\"dashIntervBtn\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n\r\n              <section\r\n                class=\"text-center my-text-yellow\"\r\n                v-if=\"nInterventions > 0\"\r\n              >\r\n                <hr />\r\n                <p>\r\n                  <i\r\n                    class=\"fa-solid fa-circle-exclamation\"\r\n                    style=\"font-size: 30px\"\r\n                  ></i>\r\n                </p>\r\n                {{ interventionsText }}\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"interventionsEvent\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-warning\"\r\n                    style=\"font-size: small; width: 160px; color: white\"\r\n                  >\r\n                    {{ translate(\"dashIntervBtn\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <!--harvest-->\r\n        <section class=\"col-12 col-md-4 col-lg-4\">\r\n          <section\r\n            class=\"card mb-3 mh-100 text-center\"\r\n            style=\"\r\n              border-radius: 10px;\r\n              box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n            \"\r\n          >\r\n            <section class=\"card-body\">\r\n              <h6 class=\"card-title text-center\">\r\n                <strong\r\n                  ><span> {{ translate(\"dashHarvest\") }}</span></strong\r\n                >\r\n              </h6>\r\n              <section class=\"text-center my-text-green\" v-if=\"nHarvest == 0\">\r\n                <hr />\r\n                <section>\r\n                  <p>\r\n                    <span\r\n                      class=\"material-symbols-outlined\"\r\n                      style=\"font-size: 30px\"\r\n                    >\r\n                      emoji_nature\r\n                    </span>\r\n                  </p>\r\n                  {{ harvestText }}\r\n                </section>\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('harvest')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-success\"\r\n                    style=\"font-size: small; width: 160px\"\r\n                    disabled\r\n                  >\r\n                    {{ translate(\"dashBtnGoToHarvest\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n              <section class=\"text-center my-text-yellow\" v-if=\"nHarvest > 0\">\r\n                <hr />\r\n                <p>\r\n                  <i\r\n                    class=\"fa-solid fa-circle-exclamation\"\r\n                    style=\"font-size: 30px\"\r\n                  ></i>\r\n                </p>\r\n                {{ harvestText }}\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('harvest')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-warning\"\r\n                    style=\"font-size: small; width: 160px; color: white\"\r\n                  >\r\n                    {{ translate(\"dashBtnGoToHarvest\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n\r\n      <!--2nd row-->\r\n      <section class=\"row mt-3\">\r\n        <!--logs-->\r\n        <section class=\"col-12 col-md-6 col-lg-6\">\r\n          <section\r\n            class=\"card mb-3 mh-100\"\r\n            style=\"\r\n              border-radius: 10px;\r\n              box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n            \"\r\n          >\r\n            <section class=\"card-body\">\r\n              <h6 class=\"card-title text-center\">\r\n                <strong\r\n                  ><span> {{ translate(\"dashLogsTitle\") }}</span></strong\r\n                >\r\n              </h6>\r\n              <section>\r\n                <hr />\r\n                <section>\r\n                  <table class=\"table mt-2\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th>\r\n                          {{ translate(\"dashLogsTHEvent\") }}\r\n                        </th>\r\n                        <th>\r\n                          {{ translate(\"dashLogsTHDate\") }}\r\n                        </th>\r\n                      </tr>\r\n                      <tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n                        <td>{{ event.text }}</td>\r\n                        <td>\r\n                          {{ event.date }}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </section>\r\n                <hr />\r\n                <section class=\"text-center\">\r\n                  <button\r\n                    @click=\"this.$router.push('log')\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-success\"\r\n                    style=\"font-size: small; width: 160px\"\r\n                  >\r\n                    {{ translate(\"dashLogsBtn\") }}\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <section class=\"col-12 col-md-6 col-lg-6\">\r\n          <section class=\"row\">\r\n            <!--swarming-->\r\n            <section class=\"col\">\r\n              <section\r\n                class=\"card mb-3 mh-100 text-center\"\r\n                style=\"\r\n                  height: 210px;\r\n                  border-radius: 10px;\r\n                  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                    0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n                \"\r\n              >\r\n                <section class=\"card-body\">\r\n                  <h6 class=\"card-title text-center\">\r\n                    <strong\r\n                      ><span>\r\n                        {{ translate(\"dashSwarmingTitle\") }}</span\r\n                      ></strong\r\n                    >\r\n                  </h6>\r\n                  <section class=\"text-center my-indicator-green\">\r\n                    <hr />\r\n                    <section>{{ totalApiaries }}</section>\r\n                    <hr />\r\n                    <section class=\"text-center\">\r\n                      <button\r\n                        @click=\"this.$router.push('swarming')\"\r\n                        type=\"button\"\r\n                        class=\"btn btn-success\"\r\n                        style=\"font-size: small; width: 160px\"\r\n                      >\r\n                        {{ translate(\"dashSwarmingBtn\") }}\r\n                      </button>\r\n                    </section>\r\n                  </section>\r\n                </section>\r\n              </section>\r\n            </section>\r\n            <!--production-->\r\n            <section class=\"col\">\r\n              <section\r\n                class=\"card mb-3 mh-100 text-center\"\r\n                style=\"\r\n                  height: 210px;\r\n                  border-radius: 10px;\r\n                  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                    0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n                \"\r\n              >\r\n                <section class=\"card-body\">\r\n                  <h6 class=\"card-title text-center\">\r\n                    <strong\r\n                      ><span> {{ translate(\"prodTotalTitle\") }}</span></strong\r\n                    >\r\n                  </h6>\r\n                  <section class=\"text-center my-indicator-blue\">\r\n                    <hr />\r\n                    <section>{{ totalProduction }} Kg</section>\r\n                    <hr />\r\n                    <section class=\"text-center\">\r\n                      <button\r\n                        @click=\"this.$router.push('newdevice')\"\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary\"\r\n                        style=\"font-size: small; width: 160px\"\r\n                      >\r\n                        {{ translate(\"prodTotalBtn\") }}\r\n                      </button>\r\n                    </section>\r\n                  </section>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n          <section class=\"row\">\r\n            <!--apiaries-->\r\n            <section class=\"col\">\r\n              <section\r\n                class=\"card mb-3 mh-100 text-center\"\r\n                style=\"\r\n                  height: 210px;\r\n                  border-radius: 10px;\r\n                  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                    0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n                \"\r\n              >\r\n                <section class=\"card-body\">\r\n                  <h6 class=\"card-title text-center\">\r\n                    <strong\r\n                      ><span>\r\n                        {{ translate(\"dashTotalApiaries\") }}</span\r\n                      ></strong\r\n                    >\r\n                  </h6>\r\n                  <section class=\"text-center my-indicator-blue\">\r\n                    <hr />\r\n                    <section>{{ totalApiaries }}</section>\r\n                    <hr />\r\n                    <section class=\"text-center\">\r\n                      <button\r\n                        @click=\"this.$router.push('newapiary')\"\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary\"\r\n                        style=\"font-size: small; width: 160px\"\r\n                      >\r\n                        {{ translate(\"dashApiariesBtn\") }}\r\n                      </button>\r\n                    </section>\r\n                  </section>\r\n                </section>\r\n              </section>\r\n            </section>\r\n            <!--hives-->\r\n            <section class=\"col\">\r\n              <section\r\n                class=\"card mb-3 mh-100 text-center\"\r\n                style=\"\r\n                  height: 210px;\r\n                  border-radius: 10px;\r\n                  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n                    0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n                \"\r\n              >\r\n                <section class=\"card-body\">\r\n                  <h6 class=\"card-title text-center\">\r\n                    <strong\r\n                      ><span> {{ translate(\"dashTotalHives\") }}</span></strong\r\n                    >\r\n                  </h6>\r\n                  <section class=\"text-center my-indicator-blue\">\r\n                    <hr />\r\n                    <section>{{ totalHives }}</section>\r\n                    <hr />\r\n                    <section class=\"text-center\">\r\n                      <button\r\n                        @click=\"this.$router.push('newdevice')\"\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary\"\r\n                        style=\"font-size: small; width: 160px\"\r\n                      >\r\n                        {{ translate(\"dashHivesBtn\") }}\r\n                      </button>\r\n                    </section>\r\n                  </section>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-text-green {\r\n  font-size: 17px;\r\n  color: #198754;\r\n}\r\n.my-text-red {\r\n  font-size: 17px;\r\n  color: #dc3545;\r\n}\r\n.my-text-yellow {\r\n  font-size: 17px;\r\n  color: #ffc107;\r\n}\r\n.my-indicator-green {\r\n  font-size: 30px;\r\n  color: #198754;\r\n}\r\n.my-indicator-red {\r\n  font-size: 30px;\r\n  color: #dc3545;\r\n}\r\n.my-indicator-blue {\r\n  font-size: 30px;\r\n  color: #007bff;\r\n}\r\n.my-indicator-yello {\r\n  font-size: 30px;\r\n  color: #ffc107;\r\n}\r\n.my-img {\r\n  max-width: 30%;\r\n  height: auto;\r\n}\r\n\r\nh3 {\r\n  color: #c55a11 !important;\r\n  position: relative;\r\n  margin-top: 40px;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n  letter-spacing: 10px;\r\n}\r\n</style>     \r\n\r\n<script>\r\n  import axios from \"axios\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { mapActions, mapGetters } from \"vuex\";\r\n  import {\r\n    IS_USER_AUTHENTICATED_GETTER,\r\n    GET_USER_ID_GETTER,\r\n    GET_USER_TOKEN_GETTER,\r\n    AUTO_NUMEVENTS_ACTION,\r\n    GET_NUMEVENTS_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        logo: require(\"../assets/IMG1224.png\"),\r\n        lang: lang,\r\n        nEvents: \"\",\r\n        eventsText: \"\",\r\n        nInterventions: 0,\r\n        interventionsText: \"\",\r\n        nMessages: 0,\r\n        totalApiaries: \"\",\r\n        totalHives: \"\",\r\n        totalProduction: \"\",\r\n        timer: \"\",\r\n        isShow: true,\r\n        interventions: [],\r\n        harvestEvents: [],\r\n        nHarvest: 0,\r\n        harvestText: \"\",\r\n        hiveEvents: [],\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\r\n        token: GET_USER_TOKEN_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        numEvents: GET_NUMEVENTS_GETTER,\r\n        auth: localStorage.getItem(\"auth\"),\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.updateEvents();\r\n      this.updateHarvest();\r\n      this.refreshDashboard();\r\n      this.timer = setInterval(this.updateEvents, 1000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    /*beforeCreate() {\r\n              this.$OneSignal.showSlidedownPrompt();\r\n            },*/\r\n    methods: {\r\n      ...mapActions(\"auth\", {\r\n        _numEventsChng: AUTO_NUMEVENTS_ACTION,\r\n      }),\r\n\r\n      interventionsEvent() {\r\n        console.log(this.interventions);\r\n        localStorage.setItem(\"teste\", JSON.stringify(this.interventions));\r\n        this.$router.push(\"sooninterventions\");\r\n      },\r\n      refreshDashboard() {\r\n        this.updateEvents();\r\n        this.updateInterventions();\r\n        this.updateTotalApiaries();\r\n        this.updateTotalHives();\r\n        this.updateTotalProduction();\r\n        this.getLog();\r\n      },\r\n      updateEvents() {\r\n        if (this.numEvents == null) {\r\n          this.nEvents = 0;\r\n          this.eventsText = this.translate(\"dashEventsTextNo\");\r\n        } else {\r\n          this.nEvents = this.numEvents;\r\n          this.eventsText = this.translate(\"dashEventsTextYes\");\r\n        }\r\n      },\r\n      async updateInterventions() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.body.length == 0) {\r\n              this.nInterventions = 0;\r\n              this.interventionsText = this.translate(\"dashIntervTextNo\");\r\n            } else {\r\n              this.interventions = response.data.body;\r\n              this.nInterventions = response.data.body.length;\r\n              this.interventionsText = this.translate(\"dashIntervTextYes\");\r\n            }\r\n          });\r\n      },\r\n      async updateHarvest() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (events.length == 0) {\r\n              this.nHarvest = 0;\r\n              this.harvestText = this.translate(\"dashHarvestNo\");\r\n            } else {\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].type == \"HARVEST\") {\r\n                  this.nHarvest = events.length;\r\n                  this.harvestText = this.translate(\"dashHarvestYes\");\r\n                  break;\r\n                } else {\r\n                  this.nHarvest = 0;\r\n                  this.harvestText = this.translate(\"dashHarvestNo\");\r\n                }\r\n              }\r\n            }\r\n            console.log(this.harvestText);\r\n            console.log(this.nHarvest);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async updateTotalApiaries() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.totalApiaries = response.data.body.totalApiaries;\r\n          })\r\n          .catch((error) => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async updateTotalHives() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.totalHives = response.data.body.totalHives;\r\n          })\r\n          .catch((error) => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n        this.isShow = false;\r\n      },\r\n      async updateTotalProduction() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/harvest/total/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.totalProduction = response.data.body.totalProduction;\r\n          })\r\n          .catch((error) => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n        this.isShow = false;\r\n      },\r\n      async getLog() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/log/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (!events.length == 0) {\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].cat == \"hive\") {\r\n                  let date = new Date(events[i].registration_date);\r\n                  let year = date.getFullYear();\r\n                  let month =\r\n                    date.getMonth() + 1 < 10\r\n                      ? \"0\" + (date.getMonth() + 1)\r\n                      : date.getMonth() + 1;\r\n                  let day =\r\n                    date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n                  this.text = \"\";\r\n                  if (events[i].type == \"LIDOPEN\") {\r\n                    this.text = this.translate(\"hiveText\");\r\n                  } else if (events[i].type == \"TEMPHIGH\") {\r\n                    this.text = this.translate(\"tempText\");\r\n                  } else if (events[i].type == \"HUMHIGH\") {\r\n                    this.text = this.translate(\"humText\");\r\n                  }\r\n                  if (events[i].type != \"HARVEST\")\r\n                    this.hiveEvents.push({\r\n                      _id: events[i]._id,\r\n                      apiary: events[i].apiary,\r\n                      device: events[i].device,\r\n                      date: year + \"-\" + month + \"-\" + day,\r\n                      text: this.text,\r\n                    });\r\n                }\r\n              }\r\n            }\r\n          });\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}