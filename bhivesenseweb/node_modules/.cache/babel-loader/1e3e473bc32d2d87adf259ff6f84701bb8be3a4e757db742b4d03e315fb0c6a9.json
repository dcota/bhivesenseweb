{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new Apiary\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        id: \"\"\n      },\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  methods: {\n    async register() {\n      if (this.checkForm) alert(\"register\");else {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n      /*this.isShow = true;\r\n                  await axios\r\n                    .post(\"https://bhsapi.duartecota.com/device\", {\r\n                      headers: {\r\n                        Authorization: this.token,\r\n                      },\r\n                    })\r\n                    .then((response) => {\r\n                      if (response.data.http == 201) {\r\n                        this.form.id = response.data.body;\r\n                        this.isShow = false;\r\n                        notify({\r\n                          title: this.translate(\"notifSuccessTitle\"),\r\n                          text: this.translate(\"mesNewDeviceSuccess\"),\r\n                          type: \"success\",\r\n                          duration: 3000,\r\n                          speed: 500,\r\n                        });\r\n                      } else {\r\n                        this.isShow = false;\r\n                        notify({\r\n                          title: this.translate(\"notifErrorTitle\"),\r\n                          text: this.translate(\"mesProblem\"),\r\n                          type: \"error\",\r\n                          duration: 3000,\r\n                          speed: 500,\r\n                        });\r\n                      }\r\n                    })\r\n                    .catch((error) => {\r\n                      this.isShow = false;\r\n                      notify({\r\n                        title: this.translate(\"notifErrorTitle\"),\r\n                        text: this.translate(\"mesProblem\"),\r\n                        type: \"error\",\r\n                        duration: 3000,\r\n                        speed: 500,\r\n                      });\r\n                    });*/\n    },\n\n    back() {\n      this.$router.replace(\"/\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    checkForm() {\n      this.isShow = false;\n      if (this.form.id == \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAiFE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,yBAAyB;AAChD,SAASC,UAAS,QAAS,MAAM;AACjC,SACEC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,yBAAyB;AAChC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,CAACT,EAAE,EAAEC,EAAE,CAAC;EAChBS,IAAI,GAAG;IACL,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE;MACN,CAAC;MACDC,MAAM,EAAE,KAAK;MACbL,IAAI,EAAEA;IACR,CAAC;EACH,CAAC;EACDM,QAAQ,EAAE;IACR,GAAGb,UAAU,CAAC,MAAM,EAAE;MACpBc,KAAK,EAAEb,qBAAqB;MAC5Bc,KAAK,EAAEb,qBAAqB;MAC5Bc,GAAG,EAAEb;IACP,CAAC;EACH,CAAC;EACDc,OAAO,EAAE;IACP,MAAMC,QAAQ,GAAG;MACf,IAAI,IAAI,CAACC,SAAS,EAAEC,KAAK,CAAC,UAAU,CAAC,MAChC;QACH,IAAI,CAACR,MAAK,GAAI,KAAK;QACnBb,MAAM,CAAC;UACLsB,KAAK,EAAE,IAAI,CAACC,SAAS,CAAC,iBAAiB,CAAC;UACxCC,IAAI,EAAE,IAAI,CAACD,SAAS,CAAC,YAAY,CAAC;UAClCE,IAAI,EAAE,OAAO;UACbC,QAAQ,EAAE,IAAI;UACdC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCF,CAAC;;IACDC,IAAI,GAAG;MACL,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,GAAG,CAAC;IAC3B,CAAC;IACDP,SAAS,CAACQ,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAACvB,IAAI,CAAC,CAACuB,IAAI,CAAC;IAC9B,CAAC;IACDX,SAAS,GAAG;MACV,IAAI,CAACP,MAAK,GAAI,KAAK;MACnB,IAAI,IAAI,CAACF,IAAI,CAACC,EAAC,IAAK,EAAE,EAAE;QACtB,OAAO,KAAK;MACd,OAAO;QACL,OAAO,IAAI;MACb;IACF;EACF;AACF,CAAC","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","form","id","isShow","computed","token","level","_id","methods","register","checkForm","alert","title","translate","text","type","duration","speed","back","$router","replace","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Adddevice.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"container\">\r\n    <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n      <section class=\"container my-body\">\r\n        <h1 class=\"my-text-color\">{{ translate(\"formNewDeviceTitle\") }}</h1>\r\n        <section class=\"line-1\"></section>\r\n        <section class=\"mt-4\">\r\n          <button type=\"submit\" class=\"btn me-4 my-button\" @click=\"register\">\r\n            <section v-if=\"!isShow\">\r\n              {{ translate(\"btnSubmit\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n          <button @click=\"back\" type=\"button\" class=\"btn my-button\">\r\n            <section v-if=\"!isShow\">\r\n              {{ translate(\"btnBack\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n        </section>\r\n        <section class=\"container\" style=\"max-width: 70%\">\r\n          <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n            <section class=\"row\">\r\n              <section class=\"col-md-12 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"formAddDeviceID\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.id\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n            </section>\r\n          </form>\r\n          <section class=\"text-center\">\r\n            <section v-if=\"isShow\" class=\"text-center\">\r\n              <section class=\"spinner-border mt-4\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </section>\r\n              <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n            </section>\r\n          </section>\r\n          <section class=\"spacer\"></section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new Apiary\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          id: \"\",\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      async register() {\r\n        if (this.checkForm) alert(\"register\");\r\n        else {\r\n          this.isShow = false;\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesProblem\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n        /*this.isShow = true;\r\n                    await axios\r\n                      .post(\"https://bhsapi.duartecota.com/device\", {\r\n                        headers: {\r\n                          Authorization: this.token,\r\n                        },\r\n                      })\r\n                      .then((response) => {\r\n                        if (response.data.http == 201) {\r\n                          this.form.id = response.data.body;\r\n                          this.isShow = false;\r\n                          notify({\r\n                            title: this.translate(\"notifSuccessTitle\"),\r\n                            text: this.translate(\"mesNewDeviceSuccess\"),\r\n                            type: \"success\",\r\n                            duration: 3000,\r\n                            speed: 500,\r\n                          });\r\n                        } else {\r\n                          this.isShow = false;\r\n                          notify({\r\n                            title: this.translate(\"notifErrorTitle\"),\r\n                            text: this.translate(\"mesProblem\"),\r\n                            type: \"error\",\r\n                            duration: 3000,\r\n                            speed: 500,\r\n                          });\r\n                        }\r\n                      })\r\n                      .catch((error) => {\r\n                        this.isShow = false;\r\n                        notify({\r\n                          title: this.translate(\"notifErrorTitle\"),\r\n                          text: this.translate(\"mesProblem\"),\r\n                          type: \"error\",\r\n                          duration: 3000,\r\n                          speed: 500,\r\n                        });\r\n                      });*/\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      checkForm() {\r\n        this.isShow = false;\r\n        if (this.form.id == \"\") {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}