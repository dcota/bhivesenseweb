{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport Modal from \"../components/ModalUserDetails.vue\";\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\n//import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    Modal\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      data: localStorage.token,\n      users: [],\n      showModal: true,\n      /*form: {\r\n                  firstname: \"\",\r\n                  lastname: \"\",\r\n                  name: \"\",\r\n                  mobile: \"\",\r\n                  type: \"\",\r\n                  email: \"\",\r\n                  bdate: \"\",\r\n                  notifications: false,\r\n                },*/\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      state: true,\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalVisible: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.getUsers();\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getUsers() {\n      this.users = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/user\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let users = response.data.body;\n        for (let i = 0; i < users.length; i++) {\n          if (users[i].level == \"beekeeper\") {\n            this.users.push({\n              _id: users[i]._id,\n              name: users[i].name,\n              status: users[i].active == true ? this.translate(\"usersActive\") : this.translate(\"usersInactive\"),\n              lastlogin: users[i].lastlogin == null ? this.translate(\"lastLoginNever\") : users[i].lastlogin\n            });\n          }\n        }\n      }).catch(error => {\n        this.showLoader(false);\n        alert(error);\n      });\n    },\n    async cancel(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          this.showsection = true;\n          this.message.type = \"success\";\n          this.message.msg = this.translate(\"cancelAccMessage\");\n          setTimeout(() => this.showsection = false, 3000);\n          this.getUsers();\n        } else {\n          this.isShow = false;\n          this.showsection = true;\n          this.message.type = \"danger\";\n          this.message.msg = this.translate(\"mesProblem\");\n        }\n      }).catch(() => {\n        this.isShow = false;\n        this.showsection = true;\n        this.error = this.translate(\"mesProblem\");\n      });\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.name = response.data.body.name;\n        switch (response.data.body.type) {\n          case \"Individual\":\n            this.type = this.translate(\"typeOp1\");\n          case \"Company\":\n            this.type = this.translate(\"typeOp2\");\n          case \"Association\":\n            this.type = this.translate(\"typeOp3\");\n        }\n        //this.type = response.data.body.type;\n        this.email = response.data.body.email;\n        this.bdate = response.data.body.bdate;\n        this.mobile = response.data.body.mobile;\n        this.nif = response.data.body.nif;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async detailsModal(id) {\n      await this.detail(id);\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6FE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,oCAAoC;AACtD,SAASC,UAAU,EAAEC,YAAY,EAAEC,UAAS,QAAS,MAAM;AAC3D,SACEC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,yBAAyB;AAChC;AACA,eAAe;EACbC,MAAM,EAAE,CAACV,EAAE,EAAEC,EAAE,CAAC;EAChBU,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,IAAI,GAAG;IACL,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLH,IAAI,EAAEE,YAAY,CAACE,KAAK;MACxBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACf;;;;;;;;;;MAUAC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE;MACP,CAAC;MACDC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,KAAK;MAClBC,MAAM,EAAE,KAAK;MACbX,IAAI,EAAEA,IAAI;MACVY,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGtB,UAAU,CAAC,MAAM,EAAE;MACpBY,KAAK,EAAET,qBAAqB;MAC5BoB,KAAK,EAAEnB,qBAAqB;MAC5BoB,GAAG,EAAEnB;IACP,CAAC;EACH,CAAC;EACDoB,OAAO,GAAG;IACR,IAAI,CAACC,QAAQ,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAACpB,IAAI,CAAC,CAACoB,IAAI,CAAC;IAC9B,CAAC;IACD,MAAMH,QAAQ,GAAG;MACf,IAAI,CAACb,KAAI,GAAI,EAAE;MACf,IAAI,CAACO,MAAK,GAAI,IAAI;MAClB,MAAMtB,KAAI,CACPgC,GAAG,CAAC,oCAAoC,EAAE;QACzCC,OAAO,EAAE;UACPC,aAAa,EAAE,IAAI,CAACpB;QACtB;MACF,CAAC,EACAqB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACd,MAAK,GAAI,KAAK;QACnB,IAAIP,KAAI,GAAIqB,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI;QAC9B,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAIvB,KAAK,CAACwB,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIvB,KAAK,CAACuB,CAAC,CAAC,CAACb,KAAI,IAAK,WAAW,EAAE;YACjC,IAAI,CAACV,KAAK,CAACyB,IAAI,CAAC;cACdd,GAAG,EAAEX,KAAK,CAACuB,CAAC,CAAC,CAACZ,GAAG;cACjBe,IAAI,EAAE1B,KAAK,CAACuB,CAAC,CAAC,CAACG,IAAI;cACnBC,MAAM,EACJ3B,KAAK,CAACuB,CAAC,CAAC,CAACK,MAAK,IAAK,IAAG,GAClB,IAAI,CAACb,SAAS,CAAC,aAAa,IAC5B,IAAI,CAACA,SAAS,CAAC,eAAe,CAAC;cACrCc,SAAS,EACP7B,KAAK,CAACuB,CAAC,CAAC,CAACM,SAAQ,IAAK,IAAG,GACrB,IAAI,CAACd,SAAS,CAAC,gBAAgB,IAC/Bf,KAAK,CAACuB,CAAC,CAAC,CAACM;YACjB,CAAC,CAAC;UACJ;QACF;MACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC;QACtBC,KAAK,CAACF,KAAK,CAAC;MACd,CAAC,CAAC;IACN,CAAC;IACD,MAAMG,MAAM,CAACC,EAAE,EAAE;MACf,MAAMlD,KAAI,CACPmD,GAAG,CAAC,qCAAoC,GAAID,EAAE,EAAE;QAC/CjB,OAAO,EAAE;UACPC,aAAa,EAAE,IAAI,CAACpB;QACtB;MACF,CAAC,EACAqB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAAC1B,IAAI,CAAC0C,IAAG,IAAK,GAAG,EAAE;UAC7B,IAAI,CAAC9B,MAAK,GAAI,KAAK;UACnB,IAAI,CAACD,WAAU,GAAI,IAAI;UACvB,IAAI,CAACJ,OAAO,CAACC,IAAG,GAAI,SAAS;UAC7B,IAAI,CAACD,OAAO,CAACE,GAAE,GAAI,IAAI,CAACW,SAAS,CAAC,kBAAkB,CAAC;UACrDuB,UAAU,CAAC,MAAO,IAAI,CAAChC,WAAU,GAAI,KAAM,EAAE,IAAI,CAAC;UAClD,IAAI,CAACO,QAAQ,EAAE;QACjB,OAAO;UACL,IAAI,CAACN,MAAK,GAAI,KAAK;UACnB,IAAI,CAACD,WAAU,GAAI,IAAI;UACvB,IAAI,CAACJ,OAAO,CAACC,IAAG,GAAI,QAAQ;UAC5B,IAAI,CAACD,OAAO,CAACE,GAAE,GAAI,IAAI,CAACW,SAAS,CAAC,YAAY,CAAC;QACjD;MACF,CAAC,EACAe,KAAK,CAAC,MAAM;QACX,IAAI,CAACvB,MAAK,GAAI,KAAK;QACnB,IAAI,CAACD,WAAU,GAAI,IAAI;QACvB,IAAI,CAACyB,KAAI,GAAI,IAAI,CAAChB,SAAS,CAAC,YAAY,CAAC;MAC3C,CAAC,CAAC;IACN,CAAC;IACD,MAAMwB,MAAM,CAACJ,EAAE,EAAE;MACf,IAAI,CAAC5B,MAAK,GAAI,IAAI;MAClB,IAAI,CAACL,OAAO,CAACC,IAAG,GAAI,EAAE;MACtB,IAAI,CAACD,OAAO,CAACE,GAAE,GAAI,EAAE;MACrB;MACA,MAAMnB,KAAI,CACPgC,GAAG,CAAC,qCAAoC,GAAIkB,EAAE,EAAE;QAC/CjB,OAAO,EAAE;UACPC,aAAa,EAAE,IAAI,CAACpB;QACtB;MACF,CAAC,EACAqB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACK,IAAG,GAAIL,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACI,IAAI;QACnC,QAAQL,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACnB,IAAI;UAC7B,KAAK,YAAY;YACf,IAAI,CAACA,IAAG,GAAI,IAAI,CAACY,SAAS,CAAC,SAAS,CAAC;UACvC,KAAK,SAAS;YACZ,IAAI,CAACZ,IAAG,GAAI,IAAI,CAACY,SAAS,CAAC,SAAS,CAAC;UACvC,KAAK,aAAa;YAChB,IAAI,CAACZ,IAAG,GAAI,IAAI,CAACY,SAAS,CAAC,SAAS,CAAC;QAAA;QAEzC;QACA,IAAI,CAACyB,KAAI,GAAInB,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACkB,KAAK;QACrC,IAAI,CAACC,KAAI,GAAIpB,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACmB,KAAK;QACrC,IAAI,CAACC,MAAK,GAAIrB,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACoB,MAAM;QACvC,IAAI,CAACC,GAAE,GAAItB,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAACqB,GAAG;QACjC,IAAI,CAACpC,MAAK,GAAI,KAAK;QACnB,OAAO,IAAI;MACb,CAAC,EACAuB,KAAK,CAAC,MAAM;QACX,IAAI,CAAC5B,OAAO,CAACE,GAAE,GAAI,qBAAqB;QACxC,IAAI,CAACF,OAAO,CAACC,IAAG,GAAI,SAAS;QAC7B,IAAI,CAACI,MAAK,GAAI,KAAK;QACnB,OAAO,KAAK;MACd,CAAC,CAAC;IACN,CAAC;IACD,MAAMqC,YAAY,CAACT,EAAE,EAAE;MACrB,MAAM,IAAI,CAACI,MAAM,CAACJ,EAAE,CAAC;MACrB,IAAI,CAAC3B,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDqC,UAAU,GAAG;MACX,IAAI,CAACrC,cAAa,GAAI,KAAK;IAC7B;EACF;AACF,CAAC","names":["en","pt","axios","Modal","mapGetters","mapMutations","mapActions","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","token","users","showModal","message","type","msg","state","showsection","isShow","isModalVisible","computed","level","_id","mounted","getUsers","methods","translate","prop","get","headers","Authorization","then","response","body","i","length","push","name","status","active","lastlogin","catch","error","showLoader","alert","cancel","id","put","http","setTimeout","detail","email","bdate","mobile","nif","detailsModal","closeModal"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Users.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container\">\r\n    <section class=\"row mt-3 text-center\">\r\n      <h1 class=\"text-center\">{{ translate(\"usersTitle\") }}</h1>\r\n    </section>\r\n    <section\r\n      v-if=\"showsection\"\r\n      class=\"alert mt-3\"\r\n      role=\"alert\"\r\n      v-bind:class=\"'alert-' + message.type\"\r\n    >\r\n      {{ message.msg }}\r\n    </section>\r\n    <section class=\"row mt-3\">\r\n      <h4>{{ translate(\"usersLbl\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\">\r\n      <section class=\"card-body\">\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdName\") }}</th>\r\n              <th>{{ translate(\"thdStatus\") }}</th>\r\n              <th>{{ translate(\"thdLastAccess\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"user of this.users\" :key=\"user._id\">\r\n              <td>{{ user.name }}</td>\r\n              <td>{{ user.status }}</td>\r\n              <td>{{ user.lastlogin }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  @click=\"detailsModal(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"fas fa-search me-1\" aria-hidden=\"true\"></i>\r\n                  {{ translate(\"btnDetails\") }}\r\n                </button>\r\n                <button\r\n                  @click=\"cancel(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                >\r\n                  <i class=\"far fa-trash-alt me-1\" aria-hidden=\"true\"></i\r\n                  >Remover\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <Modal\r\n      v-show=\"isModalVisible\"\r\n      @close=\"closeModal\"\r\n      :name=\"name\"\r\n      :type=\"type\"\r\n      :email=\"email\"\r\n      :mobile=\"mobile\"\r\n      :bdate=\"bdate\"\r\n      :nif=\"nif\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import Modal from \"../components/ModalUserDetails.vue\";\r\n  import { mapGetters, mapMutations, mapActions } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      Modal,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        data: localStorage.token,\r\n        users: [],\r\n        showModal: true,\r\n        /*form: {\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    name: \"\",\r\n                    mobile: \"\",\r\n                    type: \"\",\r\n                    email: \"\",\r\n                    bdate: \"\",\r\n                    notifications: false,\r\n                  },*/\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        state: true,\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalVisible: false,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getUsers();\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getUsers() {\r\n        this.users = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/user\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let users = response.data.body;\r\n            for (let i = 0; i < users.length; i++) {\r\n              if (users[i].level == \"beekeeper\") {\r\n                this.users.push({\r\n                  _id: users[i]._id,\r\n                  name: users[i].name,\r\n                  status:\r\n                    users[i].active == true\r\n                      ? this.translate(\"usersActive\")\r\n                      : this.translate(\"usersInactive\"),\r\n                  lastlogin:\r\n                    users[i].lastlogin == null\r\n                      ? this.translate(\"lastLoginNever\")\r\n                      : users[i].lastlogin,\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.showLoader(false);\r\n            alert(error);\r\n          });\r\n      },\r\n      async cancel(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"success\";\r\n              this.message.msg = this.translate(\"cancelAccMessage\");\r\n              setTimeout(() => (this.showsection = false), 3000);\r\n              this.getUsers();\r\n            } else {\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"danger\";\r\n              this.message.msg = this.translate(\"mesProblem\");\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.error = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            switch (response.data.body.type) {\r\n              case \"Individual\":\r\n                this.type = this.translate(\"typeOp1\");\r\n              case \"Company\":\r\n                this.type = this.translate(\"typeOp2\");\r\n              case \"Association\":\r\n                this.type = this.translate(\"typeOp3\");\r\n            }\r\n            //this.type = response.data.body.type;\r\n            this.email = response.data.body.email;\r\n            this.bdate = response.data.body.bdate;\r\n            this.mobile = response.data.body.mobile;\r\n            this.nif = response.data.body.nif;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        await this.detail(id);\r\n        this.isModalVisible = true;\r\n      },\r\n      closeModal() {\r\n        this.isModalVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}