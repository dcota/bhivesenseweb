{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\nimport { LOADING_SPINNER_SHOW_MUTATION, LOGIN_ACTION, GET_USER_LEVEL_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"login\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      error: \"\",\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      level: GET_USER_LEVEL_GETTER\n    })\n  },\n  methods: {\n    ...mapActions(\"auth\", {\n      _login: LOGIN_ACTION\n    }),\n    ...mapMutations({\n      showLoader: LOADING_SPINNER_SHOW_MUTATION\n    }),\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async login() {\n      this.error = \"\";\n      this.isShow = true;\n      let response = await this._login({\n        username: this.form.username,\n        password: this.form.password,\n        device: \"\"\n      }).catch(error => {\n        console.log(error.response.status);\n        if (error.response.status === 404) {\n          this.error = this.translate(\"userMessageNotFound\");\n          this.isShow = false;\n        } else if (error.response.status === 403) {\n          this.error = this.translate(\"userMessagePassword\");\n          this.isShow = false;\n        }\n      });\n      if (response) {\n        this.isShow = false;\n        if (this.level == \"admin\") this.$router.replace(\"/\");else if (this.level == \"beekeeper\") this.$router.replace(\"/\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAsEE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,SAASC,UAAU,EAAEC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC3D,SACEC,6BAA6B,EAC7BC,YAAY,EACZC,qBAAqB,QAChB,yBAAyB;AAChC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,CAACT,EAAE,EAAEC,EAAE,CAAC;EAChBS,IAAI,GAAG;IACL,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,KAAK;MACbP,IAAI,EAAEA;IACR,CAAC;EACH,CAAC;EACDQ,QAAQ,EAAE;IACR,GAAGhB,UAAU,CAAC,MAAM,EAAE;MACpBiB,KAAK,EAAEb;IACT,CAAC;EACH,CAAC;EACDc,OAAO,EAAE;IACP,GAAGnB,UAAU,CAAC,MAAM,EAAE;MACpBoB,MAAM,EAAEhB;IACV,CAAC,CAAC;IACF,GAAGF,YAAY,CAAC;MACdmB,UAAU,EAAElB;IACd,CAAC,CAAC;IACFmB,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAACd,IAAI,CAAC,CAACc,IAAI,CAAC;IAC9B,CAAC;IACD,MAAMC,KAAK,GAAG;MACZ,IAAI,CAACT,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,MAAK,GAAI,IAAI;MAClB,IAAIS,QAAO,GAAI,MAAM,IAAI,CAACL,MAAM,CAAC;QAC/BP,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC,QAAQ;QAC5BC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE,QAAQ;QAC5BY,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,KAAK,CAAEZ,KAAK,IAAK;QAClBa,OAAO,CAACC,GAAG,CAACd,KAAK,CAACU,QAAQ,CAACK,MAAM,CAAC;QAClC,IAAIf,KAAK,CAACU,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UACjC,IAAI,CAACf,KAAI,GAAI,IAAI,CAACO,SAAS,CAAC,qBAAqB,CAAC;UAClD,IAAI,CAACN,MAAK,GAAI,KAAK;QACrB,OAAO,IAAID,KAAK,CAACU,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UACxC,IAAI,CAACf,KAAI,GAAI,IAAI,CAACO,SAAS,CAAC,qBAAqB,CAAC;UAClD,IAAI,CAACN,MAAK,GAAI,KAAK;QACrB;MACF,CAAC,CAAC;MACF,IAAIS,QAAQ,EAAE;QACZ,IAAI,CAACT,MAAK,GAAI,KAAK;QACnB,IAAI,IAAI,CAACE,KAAI,IAAK,OAAO,EAAE,IAAI,CAACa,OAAO,CAACC,OAAO,CAAC,GAAG,CAAC,MAC/C,IAAI,IAAI,CAACd,KAAI,IAAK,WAAW,EAAE,IAAI,CAACa,OAAO,CAACC,OAAO,CAAC,GAAG,CAAC;MAC/D;IACF;EACF;AACF,CAAC","names":["en","pt","mapActions","mapGetters","mapMutations","LOADING_SPINNER_SHOW_MUTATION","LOGIN_ACTION","GET_USER_LEVEL_GETTER","name","mixins","data","lang","localStorage","getItem","form","username","password","error","isShow","computed","level","methods","_login","showLoader","translate","prop","login","response","device","catch","console","log","status","$router","replace"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Login.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Login\r\n*/\r\n\r\n<template>\r\n  <section class=\"container\">\r\n    <section class=\"jumbotron d-flex align-items-center min-vh-100\">\r\n      <form\r\n        class=\"form-signin\"\r\n        v-on:submit.prevent=\"login\"\r\n        style=\"border-radius: 30px\"\r\n      >\r\n        <section v-if=\"isShow\">\r\n          <section class=\"spinner-border\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </section>\r\n          <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n        </section>\r\n        <section class=\"alert alert-danger\" v-if=\"error\">{{ error }}</section>\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"form.username\"\r\n          class=\"form-control mt-4\"\r\n          id=\"username\"\r\n          placeholder=\"username\"\r\n          required=\"\"\r\n          autofocus=\"\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          v-model=\"form.password\"\r\n          class=\"form-control mt-4\"\r\n          id=\"password\"\r\n          placeholder=\"password\"\r\n          required=\"\"\r\n        />\r\n        <button class=\"btn btn-lg btn-primary btn-block mt-4 bn\" type=\"submit\">\r\n          {{ translate(\"btnSubmit\") }}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.bn {\r\n  background-color: #ebc002;\r\n  border-color: #ebc002;\r\n  width: 150px;\r\n}\r\n\r\n.bn:hover {\r\n  background-color: #947902;\r\n  border-color: #947902;\r\n}\r\n\r\n.form-signin {\r\n  max-width: 380px;\r\n  padding: 15px 35px 45px;\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { mapActions, mapGetters, mapMutations } from \"vuex\";\r\n  import {\r\n    LOADING_SPINNER_SHOW_MUTATION,\r\n    LOGIN_ACTION,\r\n    GET_USER_LEVEL_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"login\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        error: \"\",\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        level: GET_USER_LEVEL_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      ...mapActions(\"auth\", {\r\n        _login: LOGIN_ACTION,\r\n      }),\r\n      ...mapMutations({\r\n        showLoader: LOADING_SPINNER_SHOW_MUTATION,\r\n      }),\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async login() {\r\n        this.error = \"\";\r\n        this.isShow = true;\r\n        let response = await this._login({\r\n          username: this.form.username,\r\n          password: this.form.password,\r\n          device: \"\",\r\n        }).catch((error) => {\r\n          console.log(error.response.status);\r\n          if (error.response.status === 404) {\r\n            this.error = this.translate(\"userMessageNotFound\");\r\n            this.isShow = false;\r\n          } else if (error.response.status === 403) {\r\n            this.error = this.translate(\"userMessagePassword\");\r\n            this.isShow = false;\r\n          }\r\n        });\r\n        if (response) {\r\n          this.isShow = false;\r\n          if (this.level == \"admin\") this.$router.replace(\"/\");\r\n          else if (this.level == \"beekeeper\") this.$router.replace(\"/\");\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}