{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDetails from \"../components/ModalUserDetails.vue\";\nimport ModalDelete from \"../components/ModalCancelAccount.vue\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\n//import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    ModalDetails,\n    ModalDelete\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      searchID: \"\",\n      data: localStorage.token,\n      devices: [],\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      id: \"\",\n      state: \"\",\n      name: \"\",\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      usertodelete: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    }),\n    filteredPersons: function () {\n      return this.devices.filter(this.filterByName).sort(this.orderBy);\n    }\n  },\n  mounted() {\n    this.getDevices();\n  },\n  methods: {\n    filterByName: function (device) {\n      // no search, don't filter :\n      if (this.searchID.length === 0) {\n        return true;\n      }\n      return device.id.toLowerCase().indexOf(this.searchID.toLowerCase()) > -1;\n    },\n    orderBy: function (userA, userB) {\n      let condition = userA[this.sortKey] > userB[this.sortKey];\n      if (this.reverse) {\n        return !condition;\n      } else {\n        return condition;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getDevices() {\n      this.devices = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/device/all/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let devices = response.data.body;\n        for (let i = 0; i < devices.length; i++) {\n          if (devices[i].apiary == null) {\n            this.devices.push({\n              id: devices[i]._id,\n              assigned: this.translate(\"notAssignedText\"),\n              hasapiary: false\n            });\n          } else {\n            this.devices.push({\n              id: devices[i]._id,\n              assigned: this.translate(\"assignedText\"),\n              hasapiary: true\n            });\n          }\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async getUser(id, callback) {\n      await axios.get(\"https://bhsapi.duartecota.com/device/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let user = response.data.body;\n        callback(user.firstName + \" \" + user.lastName);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async cancel(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"cancelAccMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getUsers();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.name = response.data.body.name;\n        let type = response.data.body.type;\n        switch (type) {\n          case \"Individual\":\n            this.type = this.translate(\"typeOp1\");\n            break;\n          case \"Company\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Companhia\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Association\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n          case \"Associação\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n        }\n        this.email = response.data.body.email;\n        this.bdate = response.data.body.bdate;\n        this.mobile = response.data.body.mobile;\n        this.nif = response.data.body.nif;\n        let notifications = response.data.body.notifications;\n        switch (notifications) {\n          case true:\n            this.notifications = this.translate(\"modalNotifTrue\");\n            break;\n          case false:\n            this.notifications = this.translate(\"modalNotifFalse\");\n            break;\n        }\n        let img = response.data.body.img;\n        this.img = response.data.body.img;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async detailsModal(id) {\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      this.usertodelete = id;\n      this.isModalDeleteVisible = true;\n    },\n    closeModalDetails() {\n      this.isModalDetailsVisible = false;\n    },\n    closeModalDelete() {\n      this.isModalDeleteVisible = false;\n    },\n    async cancelUser(id) {\n      await this.cancel(this.usertodelete);\n      this.isModalDeleteVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDetails","ModalDelete","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","searchID","token","devices","message","type","msg","id","state","name","showsection","isShow","isModalDetailsVisible","isModalDeleteVisible","usertodelete","computed","level","_id","filteredPersons","filter","filterByName","sort","orderBy","mounted","getDevices","methods","device","length","toLowerCase","indexOf","userA","userB","condition","sortKey","reverse","translate","prop","get","headers","Authorization","then","response","body","i","apiary","push","assigned","hasapiary","catch","error","console","log","getUser","callback","user","firstName","lastName","cancel","put","http","title","text","duration","speed","getUsers","detail","email","bdate","mobile","nif","notifications","img","detailsModal","deleteModal","closeModalDetails","closeModalDelete","cancelUser"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Managehives.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"manageHivesTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"manageHivesLabel\") }}</h4>\r\n    </section>\r\n    <input\r\n      type=\"search\"\r\n      v-model=\"searchID\"\r\n      class=\"form-control mt-4\"\r\n      v-bind:placeholder=\"translate('searchPholder')\"\r\n    />\r\n\r\n    <section class=\"card mt-4\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdDevicesID\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdDevicesApiary\") }}</th>\r\n              <!--<th class=\"text-center\">{{ translate(\"thdUsersStatus\") }}</th>-->\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"device in filteredPersons\" :key=\"device.id\">\r\n              <td>{{ device.id }}</td>\r\n              <td>{{ device.assigned }}</td>\r\n              <!--<td class=\"text-center\">{{ user.lastlogin }}</td>-->\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblDetailsUser')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"detailsModal(device.id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  :disabled=\"!device.hasapiary\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblDelete')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"deleteModal(device.id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  :disabled=\"!device.hasapiary\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalDetails v-show=\"isModalDetailsVisible\" @close=\"closeModalDetails\" />\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeModalDelete\"\r\n      @cancel=\"cancelUser\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDetails from \"../components/ModalUserDetails.vue\";\r\n  import ModalDelete from \"../components/ModalCancelAccount.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDetails,\r\n      ModalDelete,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        searchID: \"\",\r\n        data: localStorage.token,\r\n        devices: [],\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        id: \"\",\r\n        state: \"\",\r\n        name: \"\",\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        usertodelete: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n      filteredPersons: function () {\r\n        return this.devices.filter(this.filterByName).sort(this.orderBy);\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getDevices();\r\n    },\r\n    methods: {\r\n      filterByName: function (device) {\r\n        // no search, don't filter :\r\n        if (this.searchID.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        return device.id.toLowerCase().indexOf(this.searchID.toLowerCase()) > -1;\r\n      },\r\n      orderBy: function (userA, userB) {\r\n        let condition = userA[this.sortKey] > userB[this.sortKey];\r\n        if (this.reverse) {\r\n          return !condition;\r\n        } else {\r\n          return condition;\r\n        }\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getDevices() {\r\n        this.devices = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/device/all/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let devices = response.data.body;\r\n            for (let i = 0; i < devices.length; i++) {\r\n              if (devices[i].apiary == null) {\r\n                this.devices.push({\r\n                  id: devices[i]._id,\r\n                  assigned: this.translate(\"notAssignedText\"),\r\n                  hasapiary: false,\r\n                });\r\n              } else {\r\n                this.devices.push({\r\n                  id: devices[i]._id,\r\n                  assigned: this.translate(\"assignedText\"),\r\n                  hasapiary: true,\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async getUser(id, callback) {\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/device/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            let user = response.data.body;\r\n            callback(user.firstName + \" \" + user.lastName);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async cancel(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"cancelAccMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getUsers();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            let type = response.data.body.type;\r\n            switch (type) {\r\n              case \"Individual\":\r\n                this.type = this.translate(\"typeOp1\");\r\n                break;\r\n              case \"Company\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Companhia\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Association\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n              case \"Associação\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n            }\r\n            this.email = response.data.body.email;\r\n            this.bdate = response.data.body.bdate;\r\n            this.mobile = response.data.body.mobile;\r\n            this.nif = response.data.body.nif;\r\n            let notifications = response.data.body.notifications;\r\n            switch (notifications) {\r\n              case true:\r\n                this.notifications = this.translate(\"modalNotifTrue\");\r\n                break;\r\n              case false:\r\n                this.notifications = this.translate(\"modalNotifFalse\");\r\n                break;\r\n            }\r\n            let img = response.data.body.img;\r\n            this.img = response.data.body.img;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.usertodelete = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      closeModalDetails() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeModalDelete() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async cancelUser(id) {\r\n        await this.cancel(this.usertodelete);\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}