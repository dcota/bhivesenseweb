{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDetails from \"../components/ModalUserDetails.vue\";\nimport ModalDelete from \"../components/ModalCancelAccount.vue\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\n//import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    ModalDetails,\n    ModalDelete\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      data: localStorage.token,\n      devices: [],\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      _id: \"\",\n      user: \"\",\n      state: \"\",\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      usertodelete: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.getDevices();\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getDevices() {\n      this.devices = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/device\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let devices = response.data.body;\n        for (let i = 0; i < devices.length; i++) {\n          this._id = devices[i]._id;\n          this.user = devices[i].user == \"\" ? this.user = this.translate(\"notAssignedText\") : this.user = devices[i].user;\n          this.this.devices.push({\n            _id: this._id,\n            user: this.user,\n            active: users[i].active\n          });\n        }\n      }).catch(error => {\n        this.showLoader(false);\n        alert(error);\n      });\n    },\n    async cancel(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"cancelAccMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getUsers();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.name = response.data.body.name;\n        let type = response.data.body.type;\n        switch (type) {\n          case \"Individual\":\n            this.type = this.translate(\"typeOp1\");\n            break;\n          case \"Company\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Companhia\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Association\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n          case \"Associação\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n        }\n        this.email = response.data.body.email;\n        this.bdate = response.data.body.bdate;\n        this.mobile = response.data.body.mobile;\n        this.nif = response.data.body.nif;\n        let notifications = response.data.body.notifications;\n        switch (notifications) {\n          case true:\n            this.notifications = this.translate(\"modalNotifTrue\");\n            break;\n          case false:\n            this.notifications = this.translate(\"modalNotifFalse\");\n            break;\n        }\n        let img = response.data.body.img;\n        this.img = response.data.body.img;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async detailsModal(id) {\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      this.usertodelete = id;\n      this.isModalDeleteVisible = true;\n    },\n    closeModalDetails() {\n      this.isModalDetailsVisible = false;\n    },\n    closeModalDelete() {\n      this.isModalDeleteVisible = false;\n    },\n    async cancelUser(id) {\n      await this.cancel(this.usertodelete);\n      this.isModalDeleteVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDetails","ModalDelete","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","token","devices","message","type","msg","_id","user","state","showsection","isShow","isModalDetailsVisible","isModalDeleteVisible","usertodelete","computed","level","mounted","getDevices","methods","translate","prop","get","headers","Authorization","then","response","body","i","length","this","push","active","users","catch","error","showLoader","alert","cancel","id","put","http","title","text","duration","speed","getUsers","detail","name","email","bdate","mobile","nif","notifications","img","detailsModal","deleteModal","closeModalDetails","closeModalDelete","cancelUser"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Alldevices.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"manageDevicesTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"manageDevicesLabel\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdDevicesID\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdDevicesUser\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersStatus\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"user of this.users\" :key=\"user._id\">\r\n              <td>{{ user.name }}</td>\r\n              <td class=\"text-center\">{{ user.status }}</td>\r\n              <td class=\"text-center\">{{ user.lastlogin }}</td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblDetailsUser')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"detailsModal(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  :disabled=\"!user.active\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblCancelUser')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"deleteModal(user._id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  :disabled=\"!user.active\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeModalDetails\"\r\n      :name=\"name\"\r\n      :type=\"type\"\r\n      :email=\"email\"\r\n      :mobile=\"mobile\"\r\n      :bdate=\"bdate\"\r\n      :nif=\"nif\"\r\n      :notifications=\"notifications\"\r\n      :img=\"img\"\r\n    />\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeModalDelete\"\r\n      @cancel=\"cancelUser\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDetails from \"../components/ModalUserDetails.vue\";\r\n  import ModalDelete from \"../components/ModalCancelAccount.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDetails,\r\n      ModalDelete,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        data: localStorage.token,\r\n        devices: [],\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        _id: \"\",\r\n        user: \"\",\r\n        state: \"\",\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        usertodelete: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getDevices();\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getDevices() {\r\n        this.devices = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/device\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let devices = response.data.body;\r\n            for (let i = 0; i < devices.length; i++) {\r\n              this._id = devices[i]._id;\r\n              this.user =\r\n                devices[i].user == \"\"\r\n                  ? (this.user = this.translate(\"notAssignedText\"))\r\n                  : (this.user = devices[i].user);\r\n              this.this.devices.push({\r\n                _id: this._id,\r\n                user: this.user,\r\n                active: users[i].active,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.showLoader(false);\r\n            alert(error);\r\n          });\r\n      },\r\n      async cancel(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"cancelAccMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getUsers();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            let type = response.data.body.type;\r\n            switch (type) {\r\n              case \"Individual\":\r\n                this.type = this.translate(\"typeOp1\");\r\n                break;\r\n              case \"Company\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Companhia\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Association\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n              case \"Associação\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n            }\r\n            this.email = response.data.body.email;\r\n            this.bdate = response.data.body.bdate;\r\n            this.mobile = response.data.body.mobile;\r\n            this.nif = response.data.body.nif;\r\n            let notifications = response.data.body.notifications;\r\n            switch (notifications) {\r\n              case true:\r\n                this.notifications = this.translate(\"modalNotifTrue\");\r\n                break;\r\n              case false:\r\n                this.notifications = this.translate(\"modalNotifFalse\");\r\n                break;\r\n            }\r\n            let img = response.data.body.img;\r\n            this.img = response.data.body.img;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.usertodelete = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      closeModalDetails() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeModalDelete() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async cancelUser(id) {\r\n        await this.cancel(this.usertodelete);\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}