{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDetails from \"../components/ModalUserDetails.vue\";\nimport ModalDelete from \"../components/ModalCancelAccount.vue\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    ModalDetails,\n    ModalDelete\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      searchName: \"\",\n      data: localStorage.token,\n      messages: [],\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      mobile: \"\",\n      bdate: \"\",\n      nif: \"\",\n      notifications: \"\",\n      img: \"\",\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      usertodelete: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    }),\n    filteredPersons: function () {\n      return this.messages.filter(this.filterByName).sort(this.orderBy);\n    }\n  },\n  mounted() {\n    this.getMessages();\n  },\n  methods: {\n    filterByName: function (msg) {\n      if (this.searchName.length === 0) {\n        return true;\n      }\n      return msg.name.toLowerCase().indexOf(this.searchName.toLowerCase()) > -1;\n    },\n    orderBy: function (userA, userB) {\n      let condition = userA[this.sortKey] > userB[this.sortKey];\n      if (this.reverse) {\n        return !condition;\n      } else {\n        return condition;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getMessages() {\n      this.messages = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/report\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let messages = response.data.body;\n        for (let i = 0; i < messages.length; i++) {\n          let date = new Date(messages[i].registration_date);\n          let year = date.getFullYear();\n          let month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n          let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n          this.messages.push({\n            _id: messages[i]._id,\n            name: messages[i].name,\n            email: messages[i].email,\n            date: year + \"-\" + month + \"-\" + day,\n            answered: messages[i].answered\n          });\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    async cancel(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"cancelAccMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getUsers();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      await axios.get(\"https://bhsapi.duartecota.com/user/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.name = response.data.body.name;\n        let type = response.data.body.type;\n        switch (type) {\n          case \"Individual\":\n            this.type = this.translate(\"typeOp1\");\n            break;\n          case \"Company\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Companhia\":\n            this.type = this.translate(\"typeOp2\");\n            break;\n          case \"Association\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n          case \"Associação\":\n            this.type = this.translate(\"typeOp3\");\n            break;\n        }\n        this.email = response.data.body.email;\n        this.bdate = response.data.body.bdate;\n        this.mobile = response.data.body.mobile;\n        this.nif = response.data.body.nif;\n        let notifications = response.data.body.notifications;\n        switch (notifications) {\n          case true:\n            this.notifications = this.translate(\"modalNotifTrue\");\n            break;\n          case false:\n            this.notifications = this.translate(\"modalNotifFalse\");\n            break;\n        }\n        this.img = response.data.body.img;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async detailsModal(id) {\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      this.usertodelete = id;\n      this.isModalDeleteVisible = true;\n    },\n    closeModalDetails() {\n      this.isModalDetailsVisible = false;\n    },\n    closeModalDelete() {\n      this.isModalDeleteVisible = false;\n    },\n    async cancelUser() {\n      await this.cancel(this.usertodelete);\n      this.isModalDeleteVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDetails","ModalDelete","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","searchName","token","messages","name","type","email","mobile","bdate","nif","notifications","img","showsection","isShow","isModalDetailsVisible","isModalDeleteVisible","usertodelete","computed","level","_id","filteredPersons","filter","filterByName","sort","orderBy","mounted","getMessages","methods","msg","length","toLowerCase","indexOf","userA","userB","condition","sortKey","reverse","translate","prop","get","headers","Authorization","then","response","body","i","date","Date","registration_date","year","getFullYear","month","getMonth","day","getDate","push","answered","catch","error","alert","cancel","id","put","http","title","text","duration","speed","getUsers","detail","message","detailsModal","deleteModal","closeModalDetails","closeModalDelete","cancelUser"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Allmessages.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"allReportsTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"messagesLbl\") }}</h4>\r\n    </section>\r\n    <input\r\n      type=\"search\"\r\n      v-model=\"searchName\"\r\n      class=\"form-control mt-4\"\r\n      v-bind:placeholder=\"translate('searchPholderUser')\"\r\n    />\r\n    <section class=\"card mt-3\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"tdFrom\") }}</th>\r\n              <th>{{ translate(\"tdDate\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"msg in filteredPersons\" :key=\"msg._id\">\r\n              <td>{{ msg.name }}</td>\r\n              <td>{{ msg.date }}</td>\r\n              <td class=\"text-center\">\r\n                <section v-if=\"!msg.answered\">\r\n                  <button\r\n                    @click=\"detailsModal(user._id)\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  >\r\n                    {{ translate(\"btnAnswer\") }}\r\n                  </button>\r\n                </section>\r\n                <section v-if=\"msg.answered\">\r\n                  <button\r\n                    @click=\"detailsModal(user._id)\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary btn-sm me-2 ac-btn\"\r\n                  >\r\n                    {{ translate(\"btnAnswered\") }}\r\n                  </button>\r\n                </section>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeModalDetails\"\r\n      :name=\"name\"\r\n      :type=\"type\"\r\n      :email=\"email\"\r\n      :mobile=\"mobile\"\r\n      :bdate=\"bdate\"\r\n      :nif=\"nif\"\r\n      :notifications=\"notifications\"\r\n      :img=\"img\"\r\n    />\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeModalDelete\"\r\n      @cancel=\"cancelUser\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDetails from \"../components/ModalUserDetails.vue\";\r\n  import ModalDelete from \"../components/ModalCancelAccount.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDetails,\r\n      ModalDelete,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        searchName: \"\",\r\n        data: localStorage.token,\r\n        messages: [],\r\n        name: \"\",\r\n        type: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        bdate: \"\",\r\n        nif: \"\",\r\n        notifications: \"\",\r\n        img: \"\",\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        usertodelete: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n      filteredPersons: function () {\r\n        return this.messages.filter(this.filterByName).sort(this.orderBy);\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getMessages();\r\n    },\r\n    methods: {\r\n      filterByName: function (msg) {\r\n        if (this.searchName.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        return msg.name.toLowerCase().indexOf(this.searchName.toLowerCase()) > -1;\r\n      },\r\n      orderBy: function (userA, userB) {\r\n        let condition = userA[this.sortKey] > userB[this.sortKey];\r\n        if (this.reverse) {\r\n          return !condition;\r\n        } else {\r\n          return condition;\r\n        }\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getMessages() {\r\n        this.messages = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/report\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let messages = response.data.body;\r\n            for (let i = 0; i < messages.length; i++) {\r\n              let date = new Date(messages[i].registration_date);\r\n              let year = date.getFullYear();\r\n              let month =\r\n                date.getMonth() + 1 < 10\r\n                  ? \"0\" + (date.getMonth() + 1)\r\n                  : date.getMonth() + 1;\r\n              let day =\r\n                date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n              this.messages.push({\r\n                _id: messages[i]._id,\r\n                name: messages[i].name,\r\n                email: messages[i].email,\r\n                date: year + \"-\" + month + \"-\" + day,\r\n                answered: messages[i].answered,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      },\r\n      async cancel(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"cancelAccMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getUsers();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/user/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.name = response.data.body.name;\r\n            let type = response.data.body.type;\r\n            switch (type) {\r\n              case \"Individual\":\r\n                this.type = this.translate(\"typeOp1\");\r\n                break;\r\n              case \"Company\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Companhia\":\r\n                this.type = this.translate(\"typeOp2\");\r\n                break;\r\n              case \"Association\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n              case \"Associação\":\r\n                this.type = this.translate(\"typeOp3\");\r\n                break;\r\n            }\r\n            this.email = response.data.body.email;\r\n            this.bdate = response.data.body.bdate;\r\n            this.mobile = response.data.body.mobile;\r\n            this.nif = response.data.body.nif;\r\n            let notifications = response.data.body.notifications;\r\n            switch (notifications) {\r\n              case true:\r\n                this.notifications = this.translate(\"modalNotifTrue\");\r\n                break;\r\n              case false:\r\n                this.notifications = this.translate(\"modalNotifFalse\");\r\n                break;\r\n            }\r\n            this.img = response.data.body.img;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.usertodelete = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      closeModalDetails() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeModalDelete() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async cancelUser() {\r\n        await this.cancel(this.usertodelete);\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}