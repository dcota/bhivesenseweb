{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"edit intervention\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      range: {\n        start: \"\",\n        end: \"\"\n      },\n      form: {\n        description: \"\",\n        observations: \"\",\n        type: \"\"\n      },\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n      /*attributes() {\r\n                                            return {\r\n                                              dates: {},\r\n                                              highlight: {\r\n                                                color: \"\",\r\n                                                start: { fillMode: \"solid\", color: \"\" },\r\n                                                base: { fillMode: \"light\", color: \"\" },\r\n                                                end: { fillMode: \"solid\", color: \"\" },\r\n                                              },\r\n                                              popover: {\r\n                                                label: \"\",\r\n                                                visibility: \"hover\",\r\n                                              },\r\n                                            };\r\n                                          },*/\n    })\n  },\n\n  mounted() {\n    this.getIntervention();\n  },\n  methods: {\n    padTo2Digits(num) {\n      return String(num).padStart(2, \"0\");\n    },\n    async getIntervention() {\n      let id = localStorage.getItem(\"interventiontoedit\");\n      await axios.get(\"https://bhsapi.duartecota.com/intervention/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.form.description = response.data.body.description;\n        this.form.observations = response.data.body.observations;\n        let sd = new Date(response.data.body.startDate);\n        alert(sd);\n        let ed = new Date(response.data.body.endDate);\n        let sdConv = this.padTo2Digits(sd.toLocaleDateString(\"sv-SE\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }));\n        let sdFinal = new Date(sdConv);\n        this.range.start = sdFinal;\n        console.log(this.range.start);\n        this.range.end = ed.getFullYear() + \"-\" + (ed.getMonth() + 1) + \"-\" + ed.getDate();\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n        return false;\n      });\n    },\n    async send() {\n      this.isShow = true;\n      if (this.checkForm() == true) {\n        //format start date\n        /*let sd = new Date(\r\n                                                                                  \t\t\t\t\t\t\tthis.range.start.getFullYear() +\r\n                                                                                  \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                  \t\t\t\t\t\t\t\t(parseInt(this.range.start.getMonth()) + 1) +\r\n                                                                                  \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                  \t\t\t\t\t\t\t\tthis.range.start.getDate()\r\n                                                                                  \t\t\t\t\t\t);\r\n                                                                                  \t\t\t\t\t\tlet startDate = sd.toLocaleDateString(\"sv-SE\", {\r\n                                                                                  \t\t\t\t\t\t\tyear: \"numeric\",\r\n                                                                                  \t\t\t\t\t\t\tmonth: \"2-digit\",\r\n                                                                                  \t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                                                  \t\t\t\t\t\t});\r\n                                                                                  \t\t\t\t\t\tconsole.log(startDate);\r\n                                                                                  \t\t\t\t\t\t//format end date\r\n                                                                                  \t\t\t\t\t\tlet ed = new Date(\r\n                                                                                  \t\t\t\t\t\t\tthis.range.end.getFullYear() +\r\n                                                                                  \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                  \t\t\t\t\t\t\t\t(parseInt(this.range.end.getMonth()) + 1) +\r\n                                                                                  \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                  \t\t\t\t\t\t\t\tthis.range.end.getDate()\r\n                                                                                  \t\t\t\t\t\t);\r\n                                                                                  \t\t\t\t\t\tlet endDate = ed.toLocaleDateString(\"sv-SE\", {\r\n                                                                                  \t\t\t\t\t\t\tyear: \"numeric\",\r\n                                                                                  \t\t\t\t\t\t\tmonth: \"2-digit\",\r\n                                                                                  \t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                                                  \t\t\t\t\t\t});\r\n                                                                                  \t\t\t\t\t\tconsole.log(endDate);*/\n        //format start time\n        let startTime = this.padTo2Digits(this.range.start.getHours()) + \":\" + this.padTo2Digits(this.range.start.getMinutes());\n        console.log(startTime);\n        //format end time\n        let endTime = this.padTo2Digits(this.range.end.getHours()) + \":\" + this.padTo2Digits(this.range.end.getMinutes());\n        console.log(endTime);\n        let postData = {\n          apiary: localStorage.getItem(\"idtointerventions\"),\n          startDate: this.range.start,\n          endDate: this.range.end,\n          startTime: startTime,\n          endTime: endTime,\n          type: this.form.type,\n          description: this.form.description,\n          observations: this.form.observations,\n          notifications: this.form.notifications\n        };\n        await axios.post(\"https://bhsapi.duartecota.com/intervention\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"mesNewInterventionSuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n            this.$router.replace(\"apiaries\");\n          } else {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifErrorTitle\"),\n              text: this.translate(\"mesProblem\"),\n              type: \"error\",\n              duration: 3000,\n              speed: 500\n            });\n          }\n        }).catch(error => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFieldsIntervention\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n      //postData.append(\"lang\", this.lang); //enviar se necess√°rio para e-mail\n    },\n\n    cleanForm() {\n      this.form.description = \"\", this.form.observations = \"\", this.form.type = \"\";\n      this.form.notifications = true, this.range.start = new Date(), this.range.end = new Date(), this.isShow = false;\n    },\n    back() {\n      this.$router.replace(\"interventions\");\n    },\n    checkForm() {\n      this.isShow = false;\n      if (this.form.description == \"\" || this.form.type == \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    dayClicked(day) {\n      alert(this.range.start + \";\" + this.range.end);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","range","start","end","form","description","observations","type","isShow","computed","token","level","_id","mounted","getIntervention","methods","padTo2Digits","num","String","padStart","id","get","headers","Authorization","then","response","body","sd","Date","startDate","alert","ed","endDate","sdConv","toLocaleDateString","year","month","day","sdFinal","console","log","getFullYear","getMonth","getDate","catch","title","translate","text","duration","speed","send","checkForm","startTime","getHours","getMinutes","endTime","postData","apiary","notifications","post","http","$router","replace","error","cleanForm","back","prop","dayClicked"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Editintervention.vue"],"sourcesContent":["/*\r\nMEIW - Programa√ß√£o Web Avan√ßada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscri√ß√£o\r\n*/\r\n\r\n<template>\r\n  <!--<section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">-->\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">\r\n      {{ translate(\"formNewInterventionTitle\") }}\r\n    </h2>\r\n    <section class=\"line-1\"></section>\r\n    <form class=\"form-signin\" v-on:submit.prevent=\"send\">\r\n      <section>\r\n        <button type=\"submit\" class=\"btn mt-4 me-3 my-button\">\r\n          <section v-if=\"!isShow\">\r\n            {{ translate(\"btnSubmit\") }}\r\n          </section>\r\n          <section\r\n            v-else\r\n            class=\"spinner-border spinner-border-sm\"\r\n            role=\"status\"\r\n          ></section>\r\n        </button>\r\n        <button\r\n          @click=\"cleanForm\"\r\n          type=\"button\"\r\n          class=\"btn mt-4 me-3 my-button\"\r\n        >\r\n          {{ translate(\"btnClean\") }}\r\n        </button>\r\n        <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n          {{ translate(\"btnBack\") }}\r\n        </button>\r\n      </section>\r\n      <section class=\"row mt-4\">\r\n        <section class=\"col-md-6\">\r\n          <label for=\"bdate\" class=\"form-label\">{{\r\n            translate(\"formNewInterventionDate\")\r\n          }}</label>\r\n          <v-date-picker\r\n            :locale=\"lang\"\r\n            is-expanded\r\n            v-model=\"range\"\r\n            is-range\r\n            is24hr\r\n            mode=\"datetime\"\r\n          />\r\n        </section>\r\n        <section class=\"col-md-6\">\r\n          <label for=\"observations\" class=\"form-label\">{{\r\n            translate(\"formNewInterventionDescription\")\r\n          }}</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            v-model=\"form.description\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            style=\"font-size: small\"\r\n          />\r\n          <label for=\"observations\" class=\"form-label\">{{\r\n            translate(\"formNewApiaryObservations\")\r\n          }}</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            v-model=\"form.observations\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            style=\"font-size: small\"\r\n          />\r\n          <label for=\"type\" class=\"form-label\">{{\r\n            translate(\"selectLbl\")\r\n          }}</label>\r\n\r\n          <section class=\"my_radios\">\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"1\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault1\"\r\n                style=\"color: green\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType1\") }}</strong>\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"2\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault2\"\r\n                style=\"color: orange\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType2\") }}</strong>\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"3\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault3\"\r\n                style=\"color: red\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType3\") }}</strong>\r\n              </label>\r\n            </div>\r\n          </section>\r\n\r\n          <section class=\"form-check mt-3\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              v-model=\"form.notifications\"\r\n              value=\"\"\r\n              id=\"subscribenews\"\r\n              checked\r\n              style=\"text-align: left: important;\"\r\n            />\r\n            <label class=\"form-check-label\" for=\"subscribenews\">\r\n              {{ translate(\"formNewInterventionNotifications\") }}</label\r\n            >\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </form>\r\n\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n  <!--</section>>-->\r\n</template>\r\n\r\n<style scoped>\r\n.my_radios {\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n}\r\n\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"edit intervention\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        range: {\r\n          start: \"\",\r\n          end: \"\",\r\n        },\r\n        form: {\r\n          description: \"\",\r\n          observations: \"\",\r\n          type: \"\",\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        /*attributes() {\r\n                                              return {\r\n                                                dates: {},\r\n                                                highlight: {\r\n                                                  color: \"\",\r\n                                                  start: { fillMode: \"solid\", color: \"\" },\r\n                                                  base: { fillMode: \"light\", color: \"\" },\r\n                                                  end: { fillMode: \"solid\", color: \"\" },\r\n                                                },\r\n                                                popover: {\r\n                                                  label: \"\",\r\n                                                  visibility: \"hover\",\r\n                                                },\r\n                                              };\r\n                                            },*/\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getIntervention();\r\n    },\r\n    methods: {\r\n      padTo2Digits(num) {\r\n        return String(num).padStart(2, \"0\");\r\n      },\r\n      async getIntervention() {\r\n        let id = localStorage.getItem(\"interventiontoedit\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/intervention/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.form.description = response.data.body.description;\r\n            this.form.observations = response.data.body.observations;\r\n            let sd = new Date(response.data.body.startDate);\r\n            alert(sd);\r\n            let ed = new Date(response.data.body.endDate);\r\n            let sdConv = this.padTo2Digits(\r\n              sd.toLocaleDateString(\"sv-SE\", {\r\n                year: \"numeric\",\r\n                month: \"2-digit\",\r\n                day: \"2-digit\",\r\n              })\r\n            );\r\n            let sdFinal = new Date(sdConv);\r\n            this.range.start = sdFinal;\r\n            console.log(this.range.start);\r\n            this.range.end =\r\n              ed.getFullYear() + \"-\" + (ed.getMonth() + 1) + \"-\" + ed.getDate();\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            return false;\r\n          });\r\n      },\r\n      async send() {\r\n        this.isShow = true;\r\n        if (this.checkForm() == true) {\r\n          //format start date\r\n          /*let sd = new Date(\r\n                                                                                    \t\t\t\t\t\t\tthis.range.start.getFullYear() +\r\n                                                                                    \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                    \t\t\t\t\t\t\t\t(parseInt(this.range.start.getMonth()) + 1) +\r\n                                                                                    \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                    \t\t\t\t\t\t\t\tthis.range.start.getDate()\r\n                                                                                    \t\t\t\t\t\t);\r\n                                                                                    \t\t\t\t\t\tlet startDate = sd.toLocaleDateString(\"sv-SE\", {\r\n                                                                                    \t\t\t\t\t\t\tyear: \"numeric\",\r\n                                                                                    \t\t\t\t\t\t\tmonth: \"2-digit\",\r\n                                                                                    \t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                                                    \t\t\t\t\t\t});\r\n                                                                                    \t\t\t\t\t\tconsole.log(startDate);\r\n                                                                                    \t\t\t\t\t\t//format end date\r\n                                                                                    \t\t\t\t\t\tlet ed = new Date(\r\n                                                                                    \t\t\t\t\t\t\tthis.range.end.getFullYear() +\r\n                                                                                    \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                    \t\t\t\t\t\t\t\t(parseInt(this.range.end.getMonth()) + 1) +\r\n                                                                                    \t\t\t\t\t\t\t\t\"-\" +\r\n                                                                                    \t\t\t\t\t\t\t\tthis.range.end.getDate()\r\n                                                                                    \t\t\t\t\t\t);\r\n                                                                                    \t\t\t\t\t\tlet endDate = ed.toLocaleDateString(\"sv-SE\", {\r\n                                                                                    \t\t\t\t\t\t\tyear: \"numeric\",\r\n                                                                                    \t\t\t\t\t\t\tmonth: \"2-digit\",\r\n                                                                                    \t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                                                    \t\t\t\t\t\t});\r\n                                                                                    \t\t\t\t\t\tconsole.log(endDate);*/\r\n          //format start time\r\n          let startTime =\r\n            this.padTo2Digits(this.range.start.getHours()) +\r\n            \":\" +\r\n            this.padTo2Digits(this.range.start.getMinutes());\r\n          console.log(startTime);\r\n          //format end time\r\n          let endTime =\r\n            this.padTo2Digits(this.range.end.getHours()) +\r\n            \":\" +\r\n            this.padTo2Digits(this.range.end.getMinutes());\r\n          console.log(endTime);\r\n          let postData = {\r\n            apiary: localStorage.getItem(\"idtointerventions\"),\r\n            startDate: this.range.start,\r\n            endDate: this.range.end,\r\n            startTime: startTime,\r\n            endTime: endTime,\r\n            type: this.form.type,\r\n            description: this.form.description,\r\n            observations: this.form.observations,\r\n            notifications: this.form.notifications,\r\n          };\r\n          await axios\r\n            .post(\"https://bhsapi.duartecota.com/intervention\", postData, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.http == 201) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"mesNewInterventionSuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n                this.$router.replace(\"apiaries\");\r\n              } else {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifErrorTitle\"),\r\n                  text: this.translate(\"mesProblem\"),\r\n                  type: \"error\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesFieldsIntervention\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n        //postData.append(\"lang\", this.lang); //enviar se necess√°rio para e-mail\r\n      },\r\n      cleanForm() {\r\n        (this.form.description = \"\"),\r\n          (this.form.observations = \"\"),\r\n          (this.form.type = \"\");\r\n        (this.form.notifications = true),\r\n          (this.range.start = new Date()),\r\n          (this.range.end = new Date()),\r\n          (this.isShow = false);\r\n      },\r\n      back() {\r\n        this.$router.replace(\"interventions\");\r\n      },\r\n      checkForm() {\r\n        this.isShow = false;\r\n        if (this.form.description == \"\" || this.form.type == \"\") {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      dayClicked(day) {\r\n        alert(this.range.start + \";\" + this.range.end);\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}