{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-26bca5dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"DEVICE LOCATION\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spinner-border mt-4\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"mb-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Marker = _resolveComponent(\"Marker\");\n  const _component_GoogleMap = _resolveComponent(\"GoogleMap\");\n  const _component_ModalDetails = _resolveComponent(\"ModalDetails\");\n  const _component_ModalDelete = _resolveComponent(\"ModalDelete\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"section\", _hoisted_5, [_ctx.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_6, [_hoisted_7, _createElementVNode(\"section\", _hoisted_8, _toDisplayString($options.translate(\"spinnerTxt\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_GoogleMap, {\n    \"api-key\": \"AIzaSyAtV6PctaCv-I54PVoNgNeeOjLN0IVUjd4\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"500px\"\n    },\n    center: _ctx.center,\n    zoom: 15\n  }, {\n    default: _withCtx(() => [_createVNode(_component_Marker, {\n      options: {\n        position: _ctx.center\n      }\n    }, null, 8 /* PROPS */, [\"options\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\"]), _withDirectives(_createVNode(_component_ModalDetails, {\n    onClose: $options.closeDetailsModal,\n    onEdit: $options.edit,\n    address: _ctx.address,\n    observations: _ctx.observations,\n    regdate: _ctx.regdate\n  }, null, 8 /* PROPS */, [\"onClose\", \"onEdit\", \"address\", \"observations\", \"regdate\"]), [[_vShow, _ctx.isModalDetailsVisible]]), _withDirectives(_createVNode(_component_ModalDelete, {\n    on_close: $options.closeDeleteModal,\n    onDeleteAction: $options._delete\n  }, null, 8 /* PROPS */, [\"on_close\", \"onDeleteAction\"]), [[_vShow, _ctx.isModalDeleteVisible]]), _createCommentVNode(\"<section class=\\\"spacer\\\"></section>\")]);\n}","map":{"version":3,"mappings":";;;EACWA,KAAK,EAAC;AAAmB;gEAChCC,oBAAM;gEACNA,oBAA4C;EAAxCD,KAAK,EAAC;AAAa,GAAC,iBAAe;gEACvCC,oBAAM;;EAEGD,KAAK,EAAC;AAAa;;;EACHA,KAAK,EAAC;;gEAC3BC,oBAEU;EAFDD,KAAK,EAAC,qBAAqB;EAACE,IAAI,EAAC;iBACxCD,oBAA+C;EAAzCD,KAAK,EAAC;AAAiB,GAAC,YAAU;;EAEjCA,KAAK,EAAC;AAAM;;;;;;uBAV3BG,oBAoCU,WApCVC,UAoCU,GAnCRC,UAAM,EACNC,UAA4C,EAC5CC,UAAM,EAENN,oBAOU,WAPVO,UAOU,GANOC,WAAM,kBAArBN,oBAKU,WALVO,UAKU,GAJRC,UAEU,EACVV,oBAA6D,WAA7DW,UAA6D,mBAApCC,kBAAS,yEAGtCC,aAOYC;IANV,SAAO,EAAC,yCAAyC;IACjDC,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IACjCC,MAAM,EAAER,WAAM;IACdS,IAAI,EAAE;;sBAEP,MAA0C,CAA1CJ,aAA0CK;MAAjCC,OAAO;QAAAC,UAAcZ;MAAM;;;iDAGtCK,aAOEQ;IALCC,OAAK,EAAEV,0BAAiB;IACxBW,MAAI,EAAEX,aAAI;IACVY,OAAO,EAAEhB,YAAO;IAChBiB,YAAY,EAAEjB,iBAAY;IAC1BkB,OAAO,EAAElB;kGALFA,0BAAqB,qBAO/BK,aAIEc;IAFCC,QAAM,EAAEhB,yBAAgB;IACxBiB,cAAY,EAAEjB;qEAFPJ,yBAAoB,KAI9BsB,2DAAyC","names":["class","_createElementVNode","role","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","_hoisted_6","_hoisted_7","_hoisted_8","$options","_createVNode","_component_GoogleMap","style","center","zoom","_component_Marker","options","position","_component_ModalDetails","onClose","onEdit","address","observations","regdate","_component_ModalDelete","on_close","onDeleteAction","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Map.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">DEVICE LOCATION</h1>\r\n    <hr />\r\n\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <GoogleMap\r\n      api-key=\"AIzaSyAtV6PctaCv-I54PVoNgNeeOjLN0IVUjd4\"\r\n      style=\"width: 100%; height: 500px\"\r\n      :center=\"center\"\r\n      :zoom=\"15\"\r\n    >\r\n      <Marker :options=\"{ position: center }\" />\r\n    </GoogleMap>\r\n\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeDetailsModal\"\r\n      @edit=\"edit\"\r\n      :address=\"address\"\r\n      :observations=\"observations\"\r\n      :regdate=\"regdate\"\r\n    />\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @_close=\"closeDeleteModal\"\r\n      @deleteAction=\"_delete\"\r\n    />\r\n    <!--<section class=\"spacer\"></section>-->\r\n  </section>\r\n</template>\r\n    \r\n    <style scoped>\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n.my-body {\r\n  margin-top: 100px;\r\n}\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n    \r\n    <script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import ModalDetails from \"../components/ModalApiaryDetails.vue\";\r\n  import ModalDelete from \"../components/ModalDeleteApiary.vue\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters, mapActions } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"Apiaries\",\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDetails,\r\n      ModalDelete,\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        apiaries: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        address: \"\",\r\n        observations: \"\",\r\n        regdate: \"\",\r\n        isShow: true,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        showsection: false,\r\n        toDeleteID: \"\",\r\n        toEditID: \"\",\r\n        toInterventionsID: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        el: \"#app\",\r\n      }),\r\n    },\r\n    mounted() {\r\n      localStorage.setItem(\"idtoedit\", \"\");\r\n      this.getApiaries();\r\n    },\r\n    methods: {\r\n      async getApiaries() {\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        this.isShow = true;\r\n        this.apiaries = [];\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.body.length == 0) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"mesNoApiaries\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              let apiaries = response.data.body;\r\n              for (let i = 0; i < apiaries.length; i++) {\r\n                this.apiaries.push({\r\n                  _id: apiaries[i]._id,\r\n                  num: i + 1,\r\n                  location: apiaries[i].location,\r\n                });\r\n              }\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModal() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      edit() {\r\n        this.isModalDetailsVisible = false;\r\n        localStorage.setItem(\"idtoedit\", this.toEditID);\r\n        this.$router.push(\"editapiary\");\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.regdate = response.data.body.registration_date;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async _delete() {\r\n        this.isModalDeleteVisible = false;\r\n        this.isShow = true;\r\n        await axios\r\n          .delete(\"https://bhsapi.duartecota.com/apiary/\" + this.toDeleteID, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"deleteApiarySuccess\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getApiaries();\r\n            } else if (response.data.http == 202) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"deleteApiaryFail\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblems\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        this.toEditID = id;\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.toDeleteID = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      interventions(id) {\r\n        localStorage.setItem(\"idtointerventions\", id);\r\n        this.$router.push(\"interventions\");\r\n      },\r\n      getApiaryDevices(id) {\r\n        alert(id);\r\n      },\r\n      map() {\r\n        this.$router.push(\"map\");\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}