{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<section>\\r\\n  <Header />\\r\\n  <Nav />\\r\\n  <Sidebar />\\r\\n  <Loader v-if=\\\"showLoader\\\"></Loader>\\r\\n  <section id=\\\"content\\\"><router-view></router-view></section>\\r\\n  </section>\"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAQOA,EAAE,EAAC;AAAK;;;6DAPbC,4MAMa,EACbC,oBAA+C,OAA/CC,UAA+C,GAAjCC,aAA2BC","names":["id","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\App.vue"],"sourcesContent":["<template>\r\n  <!--<section>\r\n  <Header />\r\n  <Nav />\r\n  <Sidebar />\r\n  <Loader v-if=\"showLoader\"></Loader>\r\n  <section id=\"content\"><router-view></router-view></section>\r\n  </section>-->\r\n  <div id=\"app\"><router-view></router-view></div>\r\n  \r\n</template>\r\n\r\n<script>\r\n//import Nav from \"./components/Nav.vue\";\r\n//import Sidebar from \"./components/Sidebar.vue\"\r\n//import Header from \"./components/Header.vue\";\r\n//import Footer from \"./components/Footer.vue\";\r\n//import Loader from \"./components/Loader.vue\";\r\nimport { mapState } from \"vuex\";\r\nimport { AUTO_LOGIN_ACTION } from \"./store/storeconstants\";\r\nexport default {\r\n  name: \"App\",\r\n  computed: {\r\n    ...mapState({\r\n      showLoader: (state) => state.showLoader,\r\n      autoLogout: (state) => state.auth.autoLogout,\r\n    }),\r\n  }, \r\n  watch: {\r\n    autoLogout(curValue, oldValue) {\r\n      if (curValue && curValue != oldValue) {\r\n        this.$router.replace(\"/Login\");\r\n      }\r\n    },\r\n  },\r\n  components: {\r\n    //Header,\r\n    //Sidebar,\r\n    //Nav,\r\n    //Loader,\r\n    //Footer,\r\n  },\r\n  created() {\r\n    this.$store.dispatch(`auth/${AUTO_LOGIN_ACTION}`);\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}