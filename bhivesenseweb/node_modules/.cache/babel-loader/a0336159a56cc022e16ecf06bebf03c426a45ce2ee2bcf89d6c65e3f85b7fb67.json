{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1bfd9fe3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"line-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-arrow-left me-1 act-btn\",\n  \"aria-hidden\": \"true\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 1,\n  class: \"spinner-border spinner-border-sm\",\n  role: \"status\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-plus me-1 act-btn\",\n  \"aria-hidden\": \"true\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 1,\n  class: \"spinner-border spinner-border-sm\",\n  role: \"status\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"mt-3\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"card p-2 mt-3\",\n  style: {\n    \"border-radius\": \"10px\"\n  }\n};\nconst _hoisted_12 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  const _component_ModalHarvest = _resolveComponent(\"ModalHarvest\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($options.translate(\"productionHiveTitle\")), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"section\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.back && $options.back(...args)),\n    type: \"button\",\n    class: \"btn mt-4 me-3 my-button\"\n  }, [!_ctx.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_4, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($options.translate(\"btnBack\")), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_6))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.modalHarvest && $options.modalHarvest(...args)),\n    type: \"button\",\n    class: \"btn mt-4 my-button\"\n  }, [!_ctx.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_7, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString($options.translate(\"dashHarvestTitle\")), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_9))]), _ctx.hasData ? (_openBlock(), _createElementBlock(\"section\", _hoisted_10, [_createElementVNode(\"h5\", null, _toDisplayString($options.translate(\"totalHiveProduction\")) + \" \" + _toDisplayString(_ctx.total) + \" kg\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _ctx.hasData ? (_openBlock(), _createElementBlock(\"section\", _hoisted_11, [_createElementVNode(\"section\", {\n    class: \"h5 text-center\",\n    id: \"title\",\n    innerHTML: _ctx.title\n  }, null, 8 /* PROPS */, _hoisted_12), _createCommentVNode(\"<Line v-if=\\\"loaded\\\" :data=\\\"data\\\" :options=\\\"options\\\" />\"), _ctx.loaded ? (_openBlock(), _createBlock(_component_line_chart, {\n    key: 0,\n    data: _ctx.hiveProduction,\n    min: 0,\n    max: _ctx.max,\n    download: true,\n    width: \"100%\",\n    class: \"ch\",\n    colors: ['#a17f05'],\n    dataset: {\n      borderWidth: 2\n    },\n    loading: \"Loading...\",\n    xtitle: \"Date\",\n    ytitle: _ctx.ytitle\n  }, null, 8 /* PROPS */, [\"data\", \"max\", \"ytitle\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _withDirectives(_createVNode(_component_ModalHarvest, {\n    value: _ctx.value,\n    onClose: $options.closeModalHarvest,\n    onRegister: $options.register\n  }, null, 8 /* PROPS */, [\"value\", \"onClose\", \"onRegister\"]), [[_vShow, _ctx.isModalHarvestVisible]])]);\n}","map":{"version":3,"mappings":";;;EACUA,KAAK,EAAC;AAAmB;;EAC7BA,KAAK,EAAC;AAAe;gEACzBC,oBAAkC;EAAzBD,KAAK,EAAC;AAAQ;;;;gEAIpBC,oBAAiE;EAA9DD,KAAK,EAAC,gCAAgC;EAAC,aAAW,EAAC;;;;EAKtDA,KAAK,EAAC,kCAAkC;EACxCE,IAAI,EAAC;;;;;gEAKLD,oBAA2D;EAAxDD,KAAK,EAAC,0BAA0B;EAAC,aAAW,EAAC;;;;EAKhDA,KAAK,EAAC,kCAAkC;EACxCE,IAAI,EAAC;;;;EAGiBF,KAAK,EAAC;;;;EAKtBA,KAAK,EAAC,eAAe;EAAgBG,KAA2B,EAA3B;IAAA;EAAA;;;;;;uBA/B/CC,oBAuDU,WAvDVC,UAuDU,GAtDTJ,oBAAqE,MAArEK,UAAqE,mBAAxCC,kBAAS,yCACtCC,UAAkC,EAClCP,oBA0BU,kBAzBTA,oBAUS;IAVAQ,OAAK,yCAAEF,uCAAI;IAAEG,IAAI,EAAC,QAAQ;IAACV,KAAK,EAAC;OACzBW,WAAM,kBAAtBP,oBAGU,wBAFTQ,UAAiE,sBACjE,oBAAGL,kBAAS,gDAEbH,oBAIW,WAJXS,UAIW,MAEZZ,oBAUS;IAVAQ,OAAK,yCAAEF,uDAAY;IAAEG,IAAI,EAAC,QAAQ;IAACV,KAAK,EAAC;OACjCW,WAAM,kBAAtBP,oBAGU,wBAFTU,UAA2D,sBAC3D,oBAAGP,kBAAS,yDAEbH,oBAIW,WAJXW,UAIW,MAEGJ,YAAO,kBAAtBP,oBAEU,WAFVY,WAEU,GADTf,oBAA8D,6BAAvDM,kBAAS,2BAA0B,GAAC,oBAAGI,UAAK,IAAG,KAAG,0DAItBA,YAAO,kBAA5CP,oBAiBU,WAjBVa,WAiBU,GAhBThB,oBAAoE;IAA3DD,KAAK,EAAC,gBAAgB;IAACkB,EAAE,EAAC,OAAO;IAACC,SAAc,EAANR;wCACnDS,mFAA6D,EAEtDT,WAAM,kBADbU,aAacC;;IAXZC,IAAI,EAAEZ,mBAAc;IACpBa,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEd,QAAG;IACRe,QAAQ,EAAE,IAAI;IACfC,KAAK,EAAC,MAAM;IACZ3B,KAAK,EAAC,IAAI;IACT4B,MAAM,EAAE,WAAW;IACnBC,OAAO,EAAE;MAAAC;IAAA,CAAkB;IAC5BC,OAAO,EAAC,YAAY;IACpBC,MAAM,EAAC,MAAM;IACZC,MAAM,EAAEtB;kJAGXuB,aAKEC;IAHAC,KAAK,EAAEzB,UAAK;IACZ0B,OAAK,EAAE9B,0BAAiB;IACxB+B,UAAQ,EAAE/B;yEAHHI,0BAAqB","names":["class","_createElementVNode","role","style","_createElementBlock","_hoisted_1","_hoisted_2","$options","_hoisted_3","onClick","type","_ctx","_hoisted_5","_hoisted_6","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","id","innerHTML","_createCommentVNode","_createBlock","_component_line_chart","data","min","max","download","width","colors","dataset","borderWidth","loading","xtitle","ytitle","_createVNode","_component_ModalHarvest","value","onClose","onRegister"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Productionhive.vue"],"sourcesContent":["<template>\r\n\t<section class=\"container my-body\">\r\n\t\t<h2 class=\"my-text-color\">{{ translate(\"productionHiveTitle\") }}</h2>\r\n\t\t<section class=\"line-1\"></section>\r\n\t\t<section>\r\n\t\t\t<button @click=\"back\" type=\"button\" class=\"btn mt-4 me-3 my-button\">\r\n\t\t\t\t<section v-if=\"!isShow\">\r\n\t\t\t\t\t<i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t{{ translate(\"btnBack\") }}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tv-else\r\n\t\t\t\t\tclass=\"spinner-border spinner-border-sm\"\r\n\t\t\t\t\trole=\"status\"\r\n\t\t\t\t></section>\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"modalHarvest\" type=\"button\" class=\"btn mt-4 my-button\">\r\n\t\t\t\t<section v-if=\"!isShow\">\r\n\t\t\t\t\t<i class=\"fas fa-plus me-1 act-btn\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t{{ translate(\"dashHarvestTitle\") }}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tv-else\r\n\t\t\t\t\tclass=\"spinner-border spinner-border-sm\"\r\n\t\t\t\t\trole=\"status\"\r\n\t\t\t\t></section>\r\n\t\t\t</button>\r\n\t\t\t<section v-if=\"hasData\" class=\"mt-3\">\r\n\t\t\t\t<h5>{{ translate(\"totalHiveProduction\") }} {{ total }} kg</h5>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\r\n\t\t<section class=\"card p-2 mt-3\" v-if=\"hasData\" style=\"border-radius: 10px\">\r\n\t\t\t<section class=\"h5 text-center\" id=\"title\" v-html=\"title\"></section>\r\n\t\t\t<!--<Line v-if=\"loaded\" :data=\"data\" :options=\"options\" />-->\r\n\t\t\t<line-chart\r\n\t\t\t\tv-if=\"loaded\"\r\n\t\t\t\t:data=\"hiveProduction\"\r\n\t\t\t\t:min=\"0\"\r\n\t\t\t\t:max=\"max\"\r\n\t\t\t\t:download=\"true\"\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tclass=\"ch\"\r\n\t\t\t\t:colors=\"['#a17f05']\"\r\n\t\t\t\t:dataset=\"{ borderWidth: 2 }\"\r\n\t\t\t\tloading=\"Loading...\"\r\n\t\t\t\txtitle=\"Date\"\r\n\t\t\t\t:ytitle=\"ytitle\"\r\n\t\t\t></line-chart>\r\n\t\t</section>\r\n\t\t<ModalHarvest\r\n\t\t\tv-show=\"isModalHarvestVisible\"\r\n\t\t\t:value=\"value\"\r\n\t\t\t@close=\"closeModalHarvest\"\r\n\t\t\t@register=\"register\"\r\n\t\t/>\r\n\t</section>\r\n</template>\r\n  \r\n  <style scoped>\r\n.bn_card {\r\n\tbackground-color: #ebc002;\r\n\tborder-radius: 10px;\r\n\twidth: 100px;\r\n}\r\n\r\n.bn_card:hover {\r\n\tbackground-color: #947902;\r\n}\r\n.spacer {\r\n\theight: 200px;\r\n}\r\n</style>\r\n  \r\n  <script>\r\n\timport en from \"../assets/en.js\";\r\n\timport pt from \"../assets/pt.js\";\r\n\timport axios from \"axios\";\r\n\timport ModalDetails from \"../components/ModalApiaryDetails.vue\";\r\n\timport ModalUnassign from \"../components/ModalUnassign.vue\";\r\n\timport ModalHarvest from \"../components/ModalHarvest.vue\";\r\n\timport { notify } from \"@kyvg/vue3-notification\";\r\n\timport { mapGetters } from \"vuex\";\r\n\timport {\r\n\t\tGET_USER_TOKEN_GETTER,\r\n\t\tGET_USER_LEVEL_GETTER,\r\n\t\tGET_USER_ID_GETTER,\r\n\t} from \"../store/storeconstants\";\r\n\timport { has } from \"lodash\";\r\n\texport default {\r\n\t\tname: \"Apiaries\",\r\n\t\tmixins: [en, pt],\r\n\t\tcomponents: {\r\n\t\t\tModalDetails,\r\n\t\t\tModalUnassign,\r\n\t\t\tModalHarvest,\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\tconst lang = localStorage.getItem(\"lang\") || \"pt\";\r\n\t\t\treturn {\r\n\t\t\t\tgreen: require(\"../assets/green.png\"),\r\n\t\t\t\tred: require(\"../assets/red.png\"),\r\n\t\t\t\tdevices: [],\r\n\t\t\t\thiveProduction: [],\r\n\t\t\t\timg: require(\"../assets/IMG1220.png\"),\r\n\t\t\t\tlang: lang,\r\n\t\t\t\tmessage: {\r\n\t\t\t\t\ttype: \"\",\r\n\t\t\t\t\tmsg: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taddress: \"\",\r\n\t\t\t\tobservations: \"\",\r\n\t\t\t\tregdate: \"\",\r\n\t\t\t\tisShow: true,\r\n\t\t\t\tisModalHarvestVisible: false,\r\n\t\t\t\tshowsection: false,\r\n\t\t\t\ttoDeleteID: \"\",\r\n\t\t\t\ttoEditID: \"\",\r\n\t\t\t\ttoInterventionsID: \"\",\r\n\t\t\t\thasData: false,\r\n\t\t\t\tytitle: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapGetters(\"auth\", {\r\n\t\t\t\ttoken: GET_USER_TOKEN_GETTER,\r\n\t\t\t\tlevel: GET_USER_LEVEL_GETTER,\r\n\t\t\t\t_id: GET_USER_ID_GETTER,\r\n\t\t\t\tel: \"#app\",\r\n\t\t\t}),\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.hasData = false;\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.getHiveProduction();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tasync getHiveProduction() {\r\n\t\t\t\tthis.ytitle = \"WEIGHT\";\r\n\t\t\t\tthis.title = this.translate(\"charHarvestHiveTitle\") + \" (kg)\";\r\n\t\t\t\tthis.max = 100;\r\n\t\t\t\tthis.loaded = false;\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tthis.hiveProduction = [];\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\r\n\t\t\t\t\t\t\"https://bhsapi.duartecota.com/harvest/hive/\" +\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"hiveIDtoget\"),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tlet d = response.data.body;\r\n\t\t\t\t\t\tif (d.length == 0) {\r\n\t\t\t\t\t\t\tthis.hasData = false;\r\n\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\ttitle: this.translate(\"notifWarningTitle\"),\r\n\t\t\t\t\t\t\t\ttext: this.translate(\"noDataForHive\"),\r\n\t\t\t\t\t\t\t\ttype: \"warn\",\r\n\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasData = true;\r\n\t\t\t\t\t\t\tfor (let i = 0; i < d.length; i++) {\r\n\t\t\t\t\t\t\t\tlet lastDate = new Date(\r\n\t\t\t\t\t\t\t\t\td[i].registration_date.toLocaleString(\"sv-SE\", {\r\n\t\t\t\t\t\t\t\t\t\ttimeZone: \"Atlantic/Azores\",\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tlet tempArray = [];\r\n\t\t\t\t\t\t\t\tlet year = lastDate.getFullYear();\r\n\t\t\t\t\t\t\t\tlet month = lastDate.getMonth() + 1;\r\n\t\t\t\t\t\t\t\tlet day = lastDate.getDate();\r\n\t\t\t\t\t\t\t\tlet x = year + \"-\" + month + \"-\" + day;\r\n\t\t\t\t\t\t\t\ttempArray.push(x);\r\n\t\t\t\t\t\t\t\tlet y = d[i].weight_registered;\r\n\t\t\t\t\t\t\t\ttempArray.push(y);\r\n\t\t\t\t\t\t\t\tthis.hiveProduction.push(tempArray);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.loaded = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tthis.hiveProduction.forEach((element) => {\r\n\t\t\t\t\t\t\tthis.total = this.total + element[1];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t},\r\n\t\t\ttranslate(prop) {\r\n\t\t\t\treturn this[this.lang][prop];\r\n\t\t\t},\r\n\t\t\tmodalHarvest() {\r\n\t\t\t\tthis.isModalHarvestVisible = true;\r\n\t\t\t},\r\n\t\t\tcloseModalHarvest() {\r\n\t\t\t\tthis.isModalHarvestVisible = false;\r\n\t\t\t},\r\n\t\t\tasync deleteModal(id) {\r\n\t\t\t\tthis.toDeleteID = id;\r\n\t\t\t\tthis.isModalDeleteVisible = true;\r\n\t\t\t},\r\n\t\t\tinterventions(id) {\r\n\t\t\t\tlocalStorage.setItem(\"idtointerventions\", id);\r\n\t\t\t\tthis.$router.push(\"interventions\");\r\n\t\t\t},\r\n\t\t\tback() {\r\n\t\t\t\tthis.$router.push(\"productionapiary\");\r\n\t\t\t},\r\n\t\t\tloadDetails(id) {\r\n\t\t\t\tlocalStorage.setItem(\"lastroute\", this.$route.path);\r\n\t\t\t\tlocalStorage.setItem(\"hiveIDtoget\", id);\r\n\t\t\t\tthis.$router.push(\"/hivedetails\");\r\n\t\t\t},\r\n\t\t\tloadEditPage(id) {\r\n\t\t\t\tlocalStorage.setItem(\"hiveidtoedit\", id);\r\n\t\t\t\tthis.$router.push(\"/editdevice\");\r\n\t\t\t},\r\n\t\t\tsetToUnassign(id) {\r\n\t\t\t\tlocalStorage.setItem(\"idtounassign\", id);\r\n\t\t\t\tthis.isModalUnassignVisible = true;\r\n\t\t\t},\r\n\t\t\tharvest() {\r\n\t\t\t\talert(\"clique\");\r\n\t\t\t},\r\n\t\t\tasync register() {\r\n\t\t\t\tthis.isModalHarvestVisible = false;\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tfor (let i = 0; i < this.hiveEvents.length; i++) {\r\n\t\t\t\t\tif (localStorage.getItem(\"eventID\") == this.hiveEvents[i]._id) {\r\n\t\t\t\t\t\tlet postData = {\r\n\t\t\t\t\t\t\tuser: this.hiveEvents[i].user, //localstorage\r\n\t\t\t\t\t\t\tapiary: this.hiveEvents[i].apiary, //localstorage\r\n\t\t\t\t\t\t\tdevice: this.hiveEvents[i].device, //localstorage\r\n\t\t\t\t\t\t\tweight_reported: this.hiveEvents[i].value,\r\n\t\t\t\t\t\t\tweight_registered: parseFloat(localStorage.getItem(\"harvestValue\")),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tconsole.log(postData);\r\n\t\t\t\t\t\tawait axios\r\n\t\t\t\t\t\t\t.post(\"https://bhsapi.duartecota.com/harvest\", postData, {\r\n\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tif (response.data.http == 201) {\r\n\t\t\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\t\t\ttitle: this.translate(\"notifSuccessTitle\"),\r\n\t\t\t\t\t\t\t\t\t\ttext: this.translate(\"mesNewHarvest\"),\r\n\t\t\t\t\t\t\t\t\t\ttype: \"success\",\r\n\t\t\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.solveHarvest();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}