{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport ModalDetails from \"../components/ModalApiaryDetails.vue\";\nimport ModalUnassign from \"../components/ModalUnassign.vue\";\nimport ModalHarvest from \"../components/ModalHarvest.vue\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nimport { has } from \"lodash\";\nexport default {\n  name: \"Apiaries\",\n  mixins: [en, pt],\n  components: {\n    ModalDetails,\n    ModalUnassign,\n    ModalHarvest\n  },\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      green: require(\"../assets/green.png\"),\n      red: require(\"../assets/red.png\"),\n      devices: [],\n      hiveProduction: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      address: \"\",\n      observations: \"\",\n      regdate: \"\",\n      isShow: true,\n      isModalHarvestVisible: false,\n      showsection: false,\n      toDeleteID: \"\",\n      toEditID: \"\",\n      toInterventionsID: \"\",\n      hasData: false,\n      ytitle: \"\",\n      title: \"\",\n      total: 0,\n      value: 0\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER,\n      el: \"#app\"\n    })\n  },\n  created() {\n    this.hasData = false;\n  },\n  mounted() {\n    this.getHiveProduction();\n    this.getLatestWeight();\n  },\n  methods: {\n    async getHiveProduction() {\n      this.ytitle = \"WEIGHT\";\n      this.title = this.translate(\"charHarvestHiveTitle\") + \" (kg)\";\n      this.max = 100;\n      this.loaded = false;\n      this.isShow = true;\n      this.hiveProduction = [];\n      await axios.get(\"https://bhsapi.duartecota.com/harvest/hive/\" + localStorage.getItem(\"hiveIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let d = response.data.body;\n        if (d.length == 0) {\n          this.hasData = false;\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noDataForHive\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasData = true;\n          for (let i = 0; i < d.length; i++) {\n            let lastDate = new Date(d[i].registration_date.toLocaleString(\"sv-SE\", {\n              timeZone: \"Atlantic/Azores\"\n            }));\n            let tempArray = [];\n            let year = lastDate.getFullYear();\n            let month = lastDate.getMonth() + 1;\n            let day = lastDate.getDate();\n            let x = year + \"-\" + month + \"-\" + day;\n            tempArray.push(x);\n            let y = d[i].weight_registered;\n            tempArray.push(y);\n            this.hiveProduction.push(tempArray);\n          }\n          this.loaded = true;\n        }\n        this.isShow = false;\n        this.hiveProduction.forEach(element => {\n          this.total = this.total + element[1];\n        });\n      }).catch(() => {});\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    modalHarvest() {\n      this.isModalHarvestVisible = true;\n    },\n    closeModalHarvest() {\n      this.isModalHarvestVisible = false;\n    },\n    async deleteModal(id) {\n      this.toDeleteID = id;\n      this.isModalDeleteVisible = true;\n    },\n    interventions(id) {\n      localStorage.setItem(\"idtointerventions\", id);\n      this.$router.push(\"interventions\");\n    },\n    back() {\n      this.$router.push(\"productionapiary\");\n    },\n    loadDetails(id) {\n      localStorage.setItem(\"lastroute\", this.$route.path);\n      localStorage.setItem(\"hiveIDtoget\", id);\n      this.$router.push(\"/hivedetails\");\n    },\n    loadEditPage(id) {\n      localStorage.setItem(\"hiveidtoedit\", id);\n      this.$router.push(\"/editdevice\");\n    },\n    setToUnassign(id) {\n      localStorage.setItem(\"idtounassign\", id);\n      this.isModalUnassignVisible = true;\n    },\n    harvest() {\n      alert(\"clique\");\n    },\n    async getLatestWeight() {\n      this.isShow = true;\n      //this.devices = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/latest/\" + localStorage.getItem(\"hiveIDtoget\") + \"/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let device = response.data.body.data;\n        if (!device) {\n          this.hasData = false;\n          this.isShow = false;\n        } else {\n          this.value = device.w;\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n      });\n    },\n    async register() {\n      this.isModalHarvestVisible = false;\n      this.isShow = true;\n      let apiary = localStorage.getItem(\"apiaryIDtoget\");\n      let hive = localStorage.getItem(\"hiveIDtoget\");\n      let weight_registered = parseFloat(localStorage.getItem(\"harvestValue\"));\n      console.log(apiary);\n      console.log(hive);\n      console.log(this.value);\n      console.log(weight_registered);\n      this.isShow = false;\n      let postData = {\n        user: this._id,\n        apiary: apiary,\n        device: hive,\n        weight_reported: this.value,\n        weight_registered: parseFloat(localStorage.getItem(\"harvestValue\"))\n      };\n      await axios.post(\"https://bhsapi.duartecota.com/harvest\", postData, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 201) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"mesNewHarvest\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","ModalDetails","ModalUnassign","ModalHarvest","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","has","name","mixins","components","data","lang","localStorage","getItem","green","require","red","devices","hiveProduction","img","message","type","msg","address","observations","regdate","isShow","isModalHarvestVisible","showsection","toDeleteID","toEditID","toInterventionsID","hasData","ytitle","title","total","value","computed","token","level","_id","el","created","mounted","getHiveProduction","getLatestWeight","methods","translate","max","loaded","get","headers","Authorization","then","response","d","body","length","text","duration","speed","i","lastDate","Date","registration_date","toLocaleString","timeZone","tempArray","year","getFullYear","month","getMonth","day","getDate","x","push","y","weight_registered","forEach","element","catch","prop","modalHarvest","closeModalHarvest","deleteModal","id","isModalDeleteVisible","interventions","setItem","$router","back","loadDetails","$route","path","loadEditPage","setToUnassign","isModalUnassignVisible","harvest","alert","device","w","error","console","log","register","apiary","hive","parseFloat","postData","user","weight_reported","post","http"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Productionhive.vue"],"sourcesContent":["<template>\r\n\t<section class=\"container my-body\">\r\n\t\t<h2 class=\"my-text-color\">{{ translate(\"productionHiveTitle\") }}</h2>\r\n\t\t<section class=\"line-1\"></section>\r\n\t\t<section>\r\n\t\t\t<button @click=\"back\" type=\"button\" class=\"btn mt-4 me-3 my-button\">\r\n\t\t\t\t<section v-if=\"!isShow\">\r\n\t\t\t\t\t<i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t{{ translate(\"btnBack\") }}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tv-else\r\n\t\t\t\t\tclass=\"spinner-border spinner-border-sm\"\r\n\t\t\t\t\trole=\"status\"\r\n\t\t\t\t></section>\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"modalHarvest\" type=\"button\" class=\"btn mt-4 my-button\">\r\n\t\t\t\t<section v-if=\"!isShow\">\r\n\t\t\t\t\t<i class=\"fas fa-plus me-1 act-btn\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t{{ translate(\"dashHarvestTitle\") }}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tv-else\r\n\t\t\t\t\tclass=\"spinner-border spinner-border-sm\"\r\n\t\t\t\t\trole=\"status\"\r\n\t\t\t\t></section>\r\n\t\t\t</button>\r\n\t\t\t<section v-if=\"hasData\" class=\"mt-3\">\r\n\t\t\t\t<h5>{{ translate(\"totalHiveProduction\") }} {{ total }} kg</h5>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\r\n\t\t<section class=\"card p-2 mt-3\" v-if=\"hasData\" style=\"border-radius: 10px\">\r\n\t\t\t<section class=\"h5 text-center\" id=\"title\" v-html=\"title\"></section>\r\n\t\t\t<!--<Line v-if=\"loaded\" :data=\"data\" :options=\"options\" />-->\r\n\t\t\t<line-chart\r\n\t\t\t\tv-if=\"loaded\"\r\n\t\t\t\t:data=\"hiveProduction\"\r\n\t\t\t\t:min=\"0\"\r\n\t\t\t\t:max=\"max\"\r\n\t\t\t\t:download=\"true\"\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tclass=\"ch\"\r\n\t\t\t\t:colors=\"['#a17f05']\"\r\n\t\t\t\t:dataset=\"{ borderWidth: 2 }\"\r\n\t\t\t\tloading=\"Loading...\"\r\n\t\t\t\txtitle=\"Date\"\r\n\t\t\t\t:ytitle=\"ytitle\"\r\n\t\t\t></line-chart>\r\n\t\t</section>\r\n\t\t<pie-chart\r\n\t\t\t:data=\"[\r\n\t\t\t\t['Blueberry', 44],\r\n\t\t\t\t['Strawberry', 23],\r\n\t\t\t]\"\r\n\t\t></pie-chart>\r\n\t\t<ModalHarvest\r\n\t\t\tv-show=\"isModalHarvestVisible\"\r\n\t\t\t:value=\"value\"\r\n\t\t\t@close=\"closeModalHarvest\"\r\n\t\t\t@register=\"register\"\r\n\t\t/>\r\n\t</section>\r\n</template>\r\n  \r\n  <style scoped>\r\n.bn_card {\r\n\tbackground-color: #ebc002;\r\n\tborder-radius: 10px;\r\n\twidth: 100px;\r\n}\r\n\r\n.bn_card:hover {\r\n\tbackground-color: #947902;\r\n}\r\n.spacer {\r\n\theight: 200px;\r\n}\r\n</style>\r\n  \r\n  <script>\r\n\timport en from \"../assets/en.js\";\r\n\timport pt from \"../assets/pt.js\";\r\n\timport axios from \"axios\";\r\n\timport ModalDetails from \"../components/ModalApiaryDetails.vue\";\r\n\timport ModalUnassign from \"../components/ModalUnassign.vue\";\r\n\timport ModalHarvest from \"../components/ModalHarvest.vue\";\r\n\timport { notify } from \"@kyvg/vue3-notification\";\r\n\timport { mapGetters } from \"vuex\";\r\n\timport {\r\n\t\tGET_USER_TOKEN_GETTER,\r\n\t\tGET_USER_LEVEL_GETTER,\r\n\t\tGET_USER_ID_GETTER,\r\n\t} from \"../store/storeconstants\";\r\n\timport { has } from \"lodash\";\r\n\texport default {\r\n\t\tname: \"Apiaries\",\r\n\t\tmixins: [en, pt],\r\n\t\tcomponents: {\r\n\t\t\tModalDetails,\r\n\t\t\tModalUnassign,\r\n\t\t\tModalHarvest,\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\tconst lang = localStorage.getItem(\"lang\") || \"pt\";\r\n\t\t\treturn {\r\n\t\t\t\tgreen: require(\"../assets/green.png\"),\r\n\t\t\t\tred: require(\"../assets/red.png\"),\r\n\t\t\t\tdevices: [],\r\n\t\t\t\thiveProduction: [],\r\n\t\t\t\timg: require(\"../assets/IMG1220.png\"),\r\n\t\t\t\tlang: lang,\r\n\t\t\t\tmessage: {\r\n\t\t\t\t\ttype: \"\",\r\n\t\t\t\t\tmsg: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taddress: \"\",\r\n\t\t\t\tobservations: \"\",\r\n\t\t\t\tregdate: \"\",\r\n\t\t\t\tisShow: true,\r\n\t\t\t\tisModalHarvestVisible: false,\r\n\t\t\t\tshowsection: false,\r\n\t\t\t\ttoDeleteID: \"\",\r\n\t\t\t\ttoEditID: \"\",\r\n\t\t\t\ttoInterventionsID: \"\",\r\n\t\t\t\thasData: false,\r\n\t\t\t\tytitle: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapGetters(\"auth\", {\r\n\t\t\t\ttoken: GET_USER_TOKEN_GETTER,\r\n\t\t\t\tlevel: GET_USER_LEVEL_GETTER,\r\n\t\t\t\t_id: GET_USER_ID_GETTER,\r\n\t\t\t\tel: \"#app\",\r\n\t\t\t}),\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.hasData = false;\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.getHiveProduction();\r\n\t\t\tthis.getLatestWeight();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tasync getHiveProduction() {\r\n\t\t\t\tthis.ytitle = \"WEIGHT\";\r\n\t\t\t\tthis.title = this.translate(\"charHarvestHiveTitle\") + \" (kg)\";\r\n\t\t\t\tthis.max = 100;\r\n\t\t\t\tthis.loaded = false;\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tthis.hiveProduction = [];\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\r\n\t\t\t\t\t\t\"https://bhsapi.duartecota.com/harvest/hive/\" +\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"hiveIDtoget\"),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tlet d = response.data.body;\r\n\t\t\t\t\t\tif (d.length == 0) {\r\n\t\t\t\t\t\t\tthis.hasData = false;\r\n\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\ttitle: this.translate(\"notifWarningTitle\"),\r\n\t\t\t\t\t\t\t\ttext: this.translate(\"noDataForHive\"),\r\n\t\t\t\t\t\t\t\ttype: \"warn\",\r\n\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasData = true;\r\n\t\t\t\t\t\t\tfor (let i = 0; i < d.length; i++) {\r\n\t\t\t\t\t\t\t\tlet lastDate = new Date(\r\n\t\t\t\t\t\t\t\t\td[i].registration_date.toLocaleString(\"sv-SE\", {\r\n\t\t\t\t\t\t\t\t\t\ttimeZone: \"Atlantic/Azores\",\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tlet tempArray = [];\r\n\t\t\t\t\t\t\t\tlet year = lastDate.getFullYear();\r\n\t\t\t\t\t\t\t\tlet month = lastDate.getMonth() + 1;\r\n\t\t\t\t\t\t\t\tlet day = lastDate.getDate();\r\n\t\t\t\t\t\t\t\tlet x = year + \"-\" + month + \"-\" + day;\r\n\t\t\t\t\t\t\t\ttempArray.push(x);\r\n\t\t\t\t\t\t\t\tlet y = d[i].weight_registered;\r\n\t\t\t\t\t\t\t\ttempArray.push(y);\r\n\t\t\t\t\t\t\t\tthis.hiveProduction.push(tempArray);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.loaded = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tthis.hiveProduction.forEach((element) => {\r\n\t\t\t\t\t\t\tthis.total = this.total + element[1];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t},\r\n\t\t\ttranslate(prop) {\r\n\t\t\t\treturn this[this.lang][prop];\r\n\t\t\t},\r\n\t\t\tmodalHarvest() {\r\n\t\t\t\tthis.isModalHarvestVisible = true;\r\n\t\t\t},\r\n\t\t\tcloseModalHarvest() {\r\n\t\t\t\tthis.isModalHarvestVisible = false;\r\n\t\t\t},\r\n\t\t\tasync deleteModal(id) {\r\n\t\t\t\tthis.toDeleteID = id;\r\n\t\t\t\tthis.isModalDeleteVisible = true;\r\n\t\t\t},\r\n\t\t\tinterventions(id) {\r\n\t\t\t\tlocalStorage.setItem(\"idtointerventions\", id);\r\n\t\t\t\tthis.$router.push(\"interventions\");\r\n\t\t\t},\r\n\t\t\tback() {\r\n\t\t\t\tthis.$router.push(\"productionapiary\");\r\n\t\t\t},\r\n\t\t\tloadDetails(id) {\r\n\t\t\t\tlocalStorage.setItem(\"lastroute\", this.$route.path);\r\n\t\t\t\tlocalStorage.setItem(\"hiveIDtoget\", id);\r\n\t\t\t\tthis.$router.push(\"/hivedetails\");\r\n\t\t\t},\r\n\t\t\tloadEditPage(id) {\r\n\t\t\t\tlocalStorage.setItem(\"hiveidtoedit\", id);\r\n\t\t\t\tthis.$router.push(\"/editdevice\");\r\n\t\t\t},\r\n\t\t\tsetToUnassign(id) {\r\n\t\t\t\tlocalStorage.setItem(\"idtounassign\", id);\r\n\t\t\t\tthis.isModalUnassignVisible = true;\r\n\t\t\t},\r\n\t\t\tharvest() {\r\n\t\t\t\talert(\"clique\");\r\n\t\t\t},\r\n\t\t\tasync getLatestWeight() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\t//this.devices = [];\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\r\n\t\t\t\t\t\t\"https://bhsapi.duartecota.com/device/latest/\" +\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"hiveIDtoget\") +\r\n\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"apiaryIDtoget\"),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tlet device = response.data.body.data;\r\n\t\t\t\t\t\tif (!device) {\r\n\t\t\t\t\t\t\tthis.hasData = false;\r\n\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.value = device.w;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tthis.showsection = true;\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tasync register() {\r\n\t\t\t\tthis.isModalHarvestVisible = false;\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tlet apiary = localStorage.getItem(\"apiaryIDtoget\");\r\n\t\t\t\tlet hive = localStorage.getItem(\"hiveIDtoget\");\r\n\t\t\t\tlet weight_registered = parseFloat(localStorage.getItem(\"harvestValue\"));\r\n\t\t\t\tconsole.log(apiary);\r\n\t\t\t\tconsole.log(hive);\r\n\t\t\t\tconsole.log(this.value);\r\n\t\t\t\tconsole.log(weight_registered);\r\n\t\t\t\tthis.isShow = false;\r\n\t\t\t\tlet postData = {\r\n\t\t\t\t\tuser: this._id,\r\n\t\t\t\t\tapiary: apiary,\r\n\t\t\t\t\tdevice: hive,\r\n\t\t\t\t\tweight_reported: this.value,\r\n\t\t\t\t\tweight_registered: parseFloat(localStorage.getItem(\"harvestValue\")),\r\n\t\t\t\t};\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.post(\"https://bhsapi.duartecota.com/harvest\", postData, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.http == 201) {\r\n\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\ttitle: this.translate(\"notifSuccessTitle\"),\r\n\t\t\t\t\t\t\t\ttext: this.translate(\"mesNewHarvest\"),\r\n\t\t\t\t\t\t\t\ttype: \"success\",\r\n\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}