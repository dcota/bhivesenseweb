{"ast":null,"code":"/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of routes and related constrains\r\n*/\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Login from '../views/Login.vue';\nimport Enrollment from '../views/Enrollment.vue';\nimport Admin from '../views/Admin.vue';\nimport Notif from '../views/Notif.vue';\nimport store from '../store/store';\nimport News from '../views/News.vue';\nimport Conta from '../views/Account.vue';\nimport Dashboard from '../views/Dashboard';\nimport { IS_USER_AUTHENTICATED_GETTER } from '../store/storeconstants';\nconst routes = [{\n  path: '',\n  component: Dashboard,\n  children: [{\n    path: '',\n    component: () => import('../views/Home.vue'),\n    meta: {\n      auth: false\n    }\n  }, {\n    path: 'login',\n    component: () => import('../views/Login.vue'),\n    meta: {\n      auth: false\n    }\n  }, {\n    path: 'newaccount',\n    component: () => import('../views/Enrollment.vue'),\n    meta: {\n      auth: false\n    }\n  }, {\n    path: 'account',\n    component: () => import('../views/Account.vue'),\n    meta: {\n      auth: true\n    }\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  console.log(store.getters[`auth/${IS_USER_AUTHENTICATED_GETTER}`]);\n  console.log(to.meta.auth);\n  if (to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATED_GETTER}`]) {\n    //tirei getter tipo student\n    next('/Login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Enrollment","Admin","Notif","store","News","Conta","Dashboard","IS_USER_AUTHENTICATED_GETTER","routes","path","component","children","meta","auth","router","history","process","env","BASE_URL","beforeEach","to","from","next","console","log","getters"],"sources":["C:/Users/duart/OneDrive - PGA/Ambiente de Trabalho/bhivesenseweb/bhivesenseweb/src/router/index.js"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of routes and related constrains\r\n*/\r\n\r\nimport { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Enrollment from '../views/Enrollment.vue'\r\nimport Admin from '../views/Admin.vue'\r\nimport Notif from '../views/Notif.vue'\r\nimport store from '../store/store'\r\nimport News from '../views/News.vue'\r\nimport Conta from '../views/Account.vue'\r\nimport Dashboard from '../views/Dashboard'\r\nimport { IS_USER_AUTHENTICATED_GETTER } from '../store/storeconstants'\r\n\r\nconst routes = [{\r\n    path: '',\r\n    component: Dashboard,\r\n    children: [{\r\n            path: '',\r\n            component: () =>\r\n                import ('../views/Home.vue'),\r\n            meta: { auth: false }\r\n        },\r\n        {\r\n            path: 'login',\r\n            component: () =>\r\n                import ('../views/Login.vue'),\r\n            meta: { auth: false }\r\n        },\r\n        {\r\n            path: 'newaccount',\r\n            component: () =>\r\n                import ('../views/Enrollment.vue'),\r\n            meta: { auth: false }\r\n        },\r\n        {\r\n            path: 'account',\r\n            component: () =>\r\n                import ('../views/Account.vue'),\r\n            meta: { auth: true }\r\n        },\r\n    ]\r\n}]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(process.env.BASE_URL),\r\n    routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    console.log(store.getters[`auth/${IS_USER_AUTHENTICATED_GETTER}`])\r\n    console.log(to.meta.auth)\r\n    if (to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATED_GETTER}`]) { //tirei getter tipo student\r\n        next('/Login')\r\n    } else {\r\n        next()\r\n    }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,4BAA4B,QAAQ,yBAAyB;AAEtE,MAAMC,MAAM,GAAG,CAAC;EACZC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEJ,SAAS;EACpBK,QAAQ,EAAE,CAAC;IACHF,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,MACP,MAAM,CAAE,mBAAmB,CAAC;IAChCE,IAAI,EAAE;MAAEC,IAAI,EAAE;IAAM;EACxB,CAAC,EACD;IACIJ,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,MACP,MAAM,CAAE,oBAAoB,CAAC;IACjCE,IAAI,EAAE;MAAEC,IAAI,EAAE;IAAM;EACxB,CAAC,EACD;IACIJ,IAAI,EAAE,YAAY;IAClBC,SAAS,EAAE,MACP,MAAM,CAAE,yBAAyB,CAAC;IACtCE,IAAI,EAAE;MAAEC,IAAI,EAAE;IAAM;EACxB,CAAC,EACD;IACIJ,IAAI,EAAE,SAAS;IACfC,SAAS,EAAE,MACP,MAAM,CAAE,sBAAsB,CAAC;IACnCE,IAAI,EAAE;MAAEC,IAAI,EAAE;IAAK;EACvB,CAAC;AAET,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGlB,YAAY,CAAC;EACxBmB,OAAO,EAAElB,gBAAgB,CAACmB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACJ,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClCC,OAAO,CAACC,GAAG,CAACrB,KAAK,CAACsB,OAAO,CAAE,QAAOlB,4BAA6B,EAAC,CAAC,CAAC;EAClEgB,OAAO,CAACC,GAAG,CAACJ,EAAE,CAACR,IAAI,CAACC,IAAI,CAAC;EACzB,IAAIO,EAAE,CAACR,IAAI,CAACC,IAAI,IAAI,CAACV,KAAK,CAACsB,OAAO,CAAE,QAAOlB,4BAA6B,EAAC,CAAC,EAAE;IAAE;IAC1Ee,IAAI,CAAC,QAAQ,CAAC;EAClB,CAAC,MAAM;IACHA,IAAI,EAAE;EACV;AACJ,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}