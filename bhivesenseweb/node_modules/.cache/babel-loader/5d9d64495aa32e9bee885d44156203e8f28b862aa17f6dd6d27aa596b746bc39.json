{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0556aded\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"scrolling-component\",\n  ref: \"scrollcomponent\",\n  name: \"lang\"\n};\nconst _hoisted_3 = {\n  class: \"container my-body\"\n};\nconst _hoisted_4 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"line-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"mt-4\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"spinner-border spinner-border-sm\",\n  role: \"status\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"spinner-border spinner-border-sm\",\n  role: \"status\"\n};\nconst _hoisted_11 = {\n  class: \"container\",\n  style: {\n    \"max-width\": \"70%\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"row\"\n};\nconst _hoisted_13 = {\n  class: \"col-md-12 g-4 flex\"\n};\nconst _hoisted_14 = {\n  for: \"location\",\n  class: \"form-label\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"h1\", _hoisted_4, _toDisplayString($options.translate(\"formNewDeviceTitle\")), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"section\", _hoisted_6, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn me-4 my-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.register && $options.register(...args))\n  }, [!$data.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_7, _toDisplayString($options.translate(\"btnSubmit\")), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"section\", _hoisted_8))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.back && $options.back(...args)),\n    type: \"button\",\n    class: \"btn my-button\"\n  }, [!$data.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_9, _toDisplayString($options.translate(\"btnBack\")), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"section\", _hoisted_10))])]), _createElementVNode(\"section\", _hoisted_11, [_createElementVNode(\"form\", {\n    class: \"form-signin\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.submit && _ctx.submit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"section\", _hoisted_12, [_createElementVNode(\"section\", _hoisted_13, [_createElementVNode(\"label\", _hoisted_14, _toDisplayString($options.translate(\"formAddDeviceID\")), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.id = $event),\n    class: \"form-control\",\n    id: \"id\",\n    style: {\n      \"font-size\": \"medium\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.id]])])])], 32 /* HYDRATE_EVENTS */), _hoisted_15])])], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";;;EAOWA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC,qBAAqB;EAACC,GAAG,EAAC,iBAAiB;EAACC,IAAI,EAAC;;;EACrDF,KAAK,EAAC;AAAmB;;EAC5BA,KAAK,EAAC;AAAe;gEACzBG,oBAAkC;EAAzBH,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAM;;;;;;EAOfA,KAAK,EAAC,kCAAkC;EACxCI,IAAI,EAAC;;;;;;;EASLJ,KAAK,EAAC,kCAAkC;EACxCI,IAAI,EAAC;;;EAIFJ,KAAK,EAAC,WAAW;EAACK,KAAsB,EAAtB;IAAA;EAAA;;;EAEdL,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAoB;;EAC1BM,GAAG,EAAC,UAAU;EAACN,KAAK,EAAC;;iEAalCG,oBAAkC;EAAzBH,KAAK,EAAC;AAAQ;;;uBA5C/BO,oBAgDU,WAhDVC,UAgDU,GA/CRL,oBA8CU,WA9CVM,UA8CU,GA7CRN,oBA4CU,WA5CVO,UA4CU,GA3CRP,oBAAoE,MAApEQ,UAAoE,mBAAvCC,kBAAS,wCACtCC,UAAkC,EAClCV,oBAqBU,WArBVW,UAqBU,GApBRX,oBASS;IATDY,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC,oBAAoB;IAAEgB,OAAK,yCAAEJ,+CAAQ;OAC/CK,YAAM,kBAAtBV,oBAEU,wCADLK,kBAAS,gDAEdL,oBAIW,WAJXW,UAIW,MAEbf,oBASS;IATAa,OAAK,yCAAEJ,uCAAI;IAAEG,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC;OACxBiB,YAAM,kBAAtBV,oBAEU,wCADLK,kBAAS,8CAEdL,oBAIW,WAJXY,WAIW,QAGfhB,oBAkBU,WAlBViB,WAkBU,GAjBRjB,oBAeO;IAfDH,KAAK,EAAC,aAAa;IAAEqB,QAAM,wDAAUC,mCAAM;MAC/CnB,oBAaU,WAbVoB,WAaU,GAZRpB,oBAWU,WAXVqB,WAWU,GAVRrB,oBAEU,SAFVsB,WAEU,mBADRb,kBAAS,qDAEXT,oBAME;IALAY,IAAI,EAAC,MAAM;+DACFE,UAAI,CAACS,EAAE;IAChB1B,KAAK,EAAC,cAAc;IACpB0B,EAAE,EAAC,IAAI;IACPrB,KAAyB,EAAzB;MAAA;IAAA;iDAHSY,UAAI,CAACS,EAAE,oCAQxBC,WAAkC","names":["class","ref","name","_createElementVNode","role","style","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$options","_hoisted_5","_hoisted_6","type","onClick","$data","_hoisted_8","_hoisted_10","_hoisted_11","onSubmit","_ctx","_hoisted_12","_hoisted_13","_hoisted_14","id","_hoisted_15"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Adddevice.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"container\">\r\n    <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n      <section class=\"container my-body\">\r\n        <h1 class=\"my-text-color\">{{ translate(\"formNewDeviceTitle\") }}</h1>\r\n        <section class=\"line-1\"></section>\r\n        <section class=\"mt-4\">\r\n          <button type=\"submit\" class=\"btn me-4 my-button\" @click=\"register\">\r\n            <section v-if=\"!isShow\">\r\n              {{ translate(\"btnSubmit\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n          <button @click=\"back\" type=\"button\" class=\"btn my-button\">\r\n            <section v-if=\"!isShow\">\r\n              {{ translate(\"btnBack\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n        </section>\r\n        <section class=\"container\" style=\"max-width: 70%\">\r\n          <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n            <section class=\"row\">\r\n              <section class=\"col-md-12 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"formAddDeviceID\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.id\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n            </section>\r\n          </form>\r\n          <section class=\"spacer\"></section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new Apiary\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          id: \"\",\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      async register() {\r\n        if (this.checkForm()) {\r\n          this.isShow = true;\r\n          let postData = {\r\n            user: this._id,\r\n          };\r\n          await axios\r\n            .post(\r\n              \"https://bhsapi.duartecota.com/device/register/\" + this.form.id,\r\n              postData,\r\n              {\r\n                headers: {\r\n                  Authorization: this.token,\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if (response.data.http == 200) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"mesRegisterDeviceSuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              } else {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifErrorTitle\"),\r\n                  text: this.translate(\"mesRegisterDeviceError\"),\r\n                  type: \"error\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblems\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesEmptyID\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      checkForm() {\r\n        this.isShow = false;\r\n        if (this.form.id == \"\") {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}