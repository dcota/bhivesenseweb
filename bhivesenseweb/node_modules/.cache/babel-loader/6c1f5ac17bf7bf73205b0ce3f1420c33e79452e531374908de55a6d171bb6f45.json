{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new intervention\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      activeClass: \"noerror\",\n      errorClass: \"error\",\n      form: {\n        description: \"\",\n        date: \"\",\n        observations: \"\",\n        notifications: true\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  methods: {\n    async send() {\n      let postData = {\n        apiary: localStorage.getItem(\"idtointerventions\"),\n        description: this.form.description,\n        date: this.form.date,\n        observations: this.form.observations,\n        notifications: this.form.notifications\n      };\n      //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\n      if (this.checkForm() == true) {\n        this.isShow = true;\n        await axios.post(\"https://bhsapi.duartecota.com/intervention\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            this.message.type = \"success\";\n            this.message.msg = this.translate(\"mesNewApiarySuccess\");\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"mesNewInterventionSuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n            this.$router.replace(\"apiaries\");\n          } else {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifErrorTitle\"),\n              text: this.translate(\"mesProblem\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n          }\n        }).catch(error => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFieldsIntervention\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n    },\n    cleanForm() {\n      this.form.description = \"\", this.form.date = \"\", this.form.observations = \"\", this.form.notifications = true;\n      this.isShow = false;\n    },\n    back() {\n      this.$router.replace(\"interventions\");\n    },\n    checkForm() {\n      if (this.form.description == \"\" || this.form.date == \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","activeClass","errorClass","form","description","date","observations","notifications","message","type","msg","isShow","computed","token","level","_id","methods","send","postData","apiary","checkForm","post","headers","Authorization","then","response","http","translate","title","text","duration","speed","$router","replace","catch","error","cleanForm","back","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newinterventionalt.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n    <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n        <section class=\"container my-body\">\r\n            <hr />\r\n            <h1 class=\"text-center\">\r\n                {{ translate(\"formNewInterventionTitle\") }}\r\n            </h1>\r\n            <hr />\r\n            <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n                <v-date-picker v-model=\"range\" is-range mode=\"datetime\" />\r\n                <section class=\"row\">\r\n                    <section class=\"col-md-6 g-4\">\r\n                        <label for=\"observations\" class=\"form-label\">{{\r\n                            translate(\"formNewInterventionDescription\")\r\n                        }}</label>\r\n                        <textarea rows=\"5\" v-model=\"form.description\" class=\"form-control\" id=\"username\"\r\n                            style=\"font-size: small\" />\r\n                    </section>\r\n                    <section class=\"col-md-6 g-4\">\r\n                        <label for=\"bdate\" class=\"form-label\">{{\r\n                            translate(\"formNewInterventionDate\")\r\n                        }}</label>\r\n                        <input class=\"form-control textbox-n\" type=\"text\" v-model=\"form.date\"\r\n                            onfocus=\"(this.type = 'date')\" id=\"bdate\" style=\"font-size: small\" />\r\n                    </section>\r\n                </section>\r\n                <section class=\"row\">\r\n                    <section class=\"col-md-12 g-4\">\r\n                        <label for=\"observations\" class=\"form-label\">{{\r\n                            translate(\"formNewApiaryObservations\")\r\n                        }}</label>\r\n                        <textarea rows=\"5\" v-model=\"form.observations\" class=\"form-control\" id=\"username\"\r\n                            style=\"font-size: small\" />\r\n                    </section>\r\n                </section>\r\n                <section class=\"row mt-4\">\r\n                    <section>\r\n                        <section class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"form.notifications\" value=\"\"\r\n                                id=\"subscribenews\" checked style=\"text-align: left: important;\" />\r\n                            <label class=\"form-check-label\" for=\"subscribenews\">\r\n                                {{ translate(\"formNewInterventionNotifications\") }}</label>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n                <section class=\"text-center\">\r\n                    <button @click=\"send\" type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n                        {{ translate(\"btnSubmit\") }}\r\n                    </button>\r\n                    <button @click=\"cleanForm()\" type=\"button\" class=\"btn mt-4 me-4 my-button\">\r\n                        {{ translate(\"btnClean\") }}\r\n                    </button>\r\n                    <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n                        {{ translate(\"btnBack\") }}\r\n                    </button>\r\n                </section>\r\n            </form>\r\n            <section class=\"text-center\">\r\n                <section v-if=\"isShow\" class=\"text-center\">\r\n                    <section class=\"spinner-border mt-4\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                    </section>\r\n                    <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n                </section>\r\n            </section>\r\n            <section class=\"spacer\"></section>\r\n        </section>\r\n    </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-button {\r\n    width: 120px;\r\n    background-color: black;\r\n    color: white;\r\n}\r\n\r\n.my-button:hover {\r\n    background-color: white;\r\n    color: black;\r\n}\r\n\r\nselect option[disabled]:first-child {\r\n    display: none;\r\n}\r\n\r\n.my-body {\r\n    margin-top: 100px;\r\n}\r\n\r\n.spacer {\r\n    height: 200px;\r\n}\r\n\r\n.top-btn {\r\n    font-weight: bold;\r\n    width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport en from \"../assets/en.js\";\r\nimport pt from \"../assets/pt.js\";\r\nimport axios from \"axios\";\r\nimport { notify } from \"@kyvg/vue3-notification\";\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n} from \"../store/storeconstants\";\r\nexport default {\r\n    name: \"new intervention\",\r\n    mixins: [en, pt],\r\n    data() {\r\n        const lang = localStorage.getItem(\"lang\") || \"en\";\r\n        return {\r\n            activeClass: \"noerror\",\r\n            errorClass: \"error\",\r\n            form: {\r\n                description: \"\",\r\n                date: \"\",\r\n                observations: \"\",\r\n                notifications: true,\r\n            },\r\n            message: {\r\n                type: \"\",\r\n                msg: \"\",\r\n            },\r\n            isShow: false,\r\n            lang: lang,\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(\"auth\", {\r\n            token: GET_USER_TOKEN_GETTER,\r\n            level: GET_USER_LEVEL_GETTER,\r\n            _id: GET_USER_ID_GETTER,\r\n        }),\r\n    },\r\n    methods: {\r\n        async send() {\r\n            let postData = {\r\n                apiary: localStorage.getItem(\"idtointerventions\"),\r\n                description: this.form.description,\r\n                date: this.form.date,\r\n                observations: this.form.observations,\r\n                notifications: this.form.notifications,\r\n            };\r\n            //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\r\n            if (this.checkForm() == true) {\r\n                this.isShow = true;\r\n                await axios\r\n                    .post(\"https://bhsapi.duartecota.com/intervention\", postData, {\r\n                        headers: {\r\n                            Authorization: this.token,\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n                        if (response.data.http == 201) {\r\n                            this.isShow = false;\r\n                            this.message.type = \"success\";\r\n                            this.message.msg = this.translate(\"mesNewApiarySuccess\");\r\n                            notify({\r\n                                title: this.translate(\"notifSuccessTitle\"),\r\n                                text: this.translate(\"mesNewInterventionSuccess\"),\r\n                                type: \"success\",\r\n                                duration: 3000,\r\n                                speed: 500,\r\n                            });\r\n                            this.$router.replace(\"apiaries\");\r\n                        } else {\r\n                            this.isShow = false;\r\n                            notify({\r\n                                title: this.translate(\"notifErrorTitle\"),\r\n                                text: this.translate(\"mesProblem\"),\r\n                                type: \"success\",\r\n                                duration: 3000,\r\n                                speed: 500,\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        this.isShow = false;\r\n                        notify({\r\n                            title: this.translate(\"notifErrorTitle\"),\r\n                            text: this.translate(\"mesProblem\"),\r\n                            type: \"error\",\r\n                            duration: 3000,\r\n                            speed: 500,\r\n                        });\r\n                    });\r\n            } else {\r\n                this.isShow = false;\r\n                notify({\r\n                    title: this.translate(\"notifErrorTitle\"),\r\n                    text: this.translate(\"mesFieldsIntervention\"),\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                    speed: 500,\r\n                });\r\n            }\r\n        },\r\n        cleanForm() {\r\n            (this.form.description = \"\"),\r\n                (this.form.date = \"\"),\r\n                (this.form.observations = \"\"),\r\n                (this.form.notifications = true);\r\n            this.isShow = false;\r\n        },\r\n        back() {\r\n            this.$router.replace(\"interventions\");\r\n        },\r\n        checkForm() {\r\n            if (this.form.description == \"\" || this.form.date == \"\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        translate(prop) {\r\n            return this[this.lang][prop];\r\n        },\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}