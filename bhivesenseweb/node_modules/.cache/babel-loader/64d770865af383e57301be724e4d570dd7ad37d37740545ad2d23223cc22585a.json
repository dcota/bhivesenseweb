{"ast":null,"code":"/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: component that implements all the actions concerning login and logout\r\n*/\n\nexport const IS_USER_AUTHENTICATED_GETTER = '[getters] is user autenticated';\nimport { LOGIN_ACTION, AUTH_ACTION, LOGOUT_ACTION, SET_USER_TOKEN_DATA_MUTATION, AUTO_LOGIN_ACTION, AUTO_LOGOUT_ACTION, SET_AUTO_LOGOUT_MUTATION } from '../../storeconstants';\nimport axios from 'axios';\nlet timer = '';\nexport default {\n  [LOGOUT_ACTION](context) {\n    context.commit(SET_USER_TOKEN_DATA_MUTATION, {\n      _id: null,\n      firstname: null,\n      lastname: null,\n      level: null,\n      token: null,\n      expiresIn: null\n    });\n    localStorage.removeItem('userData');\n    if (timer) {\n      clearTimeout(timer);\n    }\n  },\n  [AUTO_LOGIN_ACTION](context) {\n    let userDataString = localStorage.getItem('userData');\n    console.log(userDataString);\n    if (userDataString) {\n      let userData = JSON.parse(userDataString);\n      let expirationTime = userData.expiresIn - new Date().getTime();\n      if (expirationTime < 10000) {\n        context.dispatch(AUTO_LOGOUT_ACTION);\n      } else {\n        timer = setTimeout(() => {\n          context.dispatch(AUTO_LOGOUT_ACTION);\n        }, expirationTime);\n      }\n      context.commit(SET_USER_TOKEN_DATA_MUTATION, userData);\n    }\n  },\n  [AUTO_LOGOUT_ACTION](context) {\n    context.dispatch(LOGOUT_ACTION);\n    context.commit(SET_AUTO_LOGOUT_MUTATION);\n  },\n  async [AUTH_ACTION](context, payload) {\n    let postData = {\n      username: payload.username,\n      password: payload.password,\n      device: payload.device\n    };\n    let response = await axios.post(payload.url, postData);\n    if (response.data.http === 200) {\n      let expirationTime = +response.data.body.expiresIn * 1000;\n      //let expirationTime = 5000\n      timer = setTimeout(() => {\n        context.dispatch(AUTO_LOGOUT_ACTION);\n      }, expirationTime);\n      let tokenData = {\n        _id: response.data.body._id,\n        firstname: response.data.body.firstname,\n        lastname: response.data.body.lastname,\n        level: response.data.body.level,\n        img: response.data.body.img,\n        expiresIn: expirationTime,\n        token: response.headers.authorization\n      };\n      localStorage.setItem('userData', JSON.stringify(tokenData));\n      console.log(localStorage.getItem('userData'));\n      context.commit(SET_USER_TOKEN_DATA_MUTATION, tokenData);\n      return true;\n    } else return false;\n  },\n  async [LOGIN_ACTION](context, payload) {\n    return context.dispatch(AUTH_ACTION, {\n      ...payload,\n      url: 'http://localhost:3000/auth'\n      //url: 'https://bhsapi.duartecota.com/auth'\n    });\n  }\n};","map":{"version":3,"names":["IS_USER_AUTHENTICATED_GETTER","LOGIN_ACTION","AUTH_ACTION","LOGOUT_ACTION","SET_USER_TOKEN_DATA_MUTATION","AUTO_LOGIN_ACTION","AUTO_LOGOUT_ACTION","SET_AUTO_LOGOUT_MUTATION","axios","timer","context","commit","_id","firstname","lastname","level","token","expiresIn","localStorage","removeItem","clearTimeout","userDataString","getItem","console","log","userData","JSON","parse","expirationTime","Date","getTime","dispatch","setTimeout","payload","postData","username","password","device","response","post","url","data","http","body","tokenData","img","headers","authorization","setItem","stringify"],"sources":["C:/Users/duart/OneDrive - PGA/Ambiente de Trabalho/bhivesenseweb/bhivesenseweb/src/store/modules/auth/actions.js"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: component that implements all the actions concerning login and logout\r\n*/\r\n\r\nexport const IS_USER_AUTHENTICATED_GETTER = '[getters] is user autenticated'\r\n\r\nimport {\r\n    LOGIN_ACTION,\r\n    AUTH_ACTION,\r\n    LOGOUT_ACTION,\r\n    SET_USER_TOKEN_DATA_MUTATION,\r\n    AUTO_LOGIN_ACTION,\r\n    AUTO_LOGOUT_ACTION,\r\n    SET_AUTO_LOGOUT_MUTATION\r\n} from '../../storeconstants'\r\n\r\nimport axios from 'axios'\r\n\r\nlet timer = '';\r\n\r\nexport default {\r\n    [LOGOUT_ACTION](context) {\r\n        context.commit(SET_USER_TOKEN_DATA_MUTATION, {\r\n            _id: null,\r\n            firstname: null,\r\n            lastname: null,\r\n            level: null,\r\n            token: null,\r\n            expiresIn: null\r\n        })\r\n        localStorage.removeItem('userData')\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n        }\r\n    },\r\n\r\n    [AUTO_LOGIN_ACTION](context) {\r\n        let userDataString = localStorage.getItem('userData')\r\n        console.log(userDataString)\r\n        if (userDataString) {\r\n            let userData = JSON.parse(userDataString)\r\n            let expirationTime = userData.expiresIn - new Date().getTime()\r\n            if (expirationTime < 10000) {\r\n                context.dispatch(AUTO_LOGOUT_ACTION)\r\n            } else {\r\n                timer = setTimeout(() => {\r\n                    context.dispatch(AUTO_LOGOUT_ACTION)\r\n                }, expirationTime)\r\n            }\r\n            context.commit(SET_USER_TOKEN_DATA_MUTATION, userData)\r\n        }\r\n    },\r\n\r\n    [AUTO_LOGOUT_ACTION](context) {\r\n        context.dispatch(LOGOUT_ACTION)\r\n        context.commit(SET_AUTO_LOGOUT_MUTATION)\r\n    },\r\n\r\n    async [AUTH_ACTION](context, payload) {\r\n\r\n        let postData = {\r\n            username: payload.username,\r\n            password: payload.password,\r\n            device: payload.device\r\n        }\r\n        let response = await axios.post(payload.url, postData)\r\n        if (response.data.http === 200) {\r\n            let expirationTime = +response.data.body.expiresIn * 1000\r\n                //let expirationTime = 5000\r\n            timer = setTimeout(() => {\r\n                context.dispatch(AUTO_LOGOUT_ACTION)\r\n            }, expirationTime)\r\n            let tokenData = {\r\n                _id: response.data.body._id,\r\n                firstname: response.data.body.firstname,\r\n                lastname: response.data.body.lastname,\r\n                level: response.data.body.level,\r\n                img: response.data.body.img,\r\n                expiresIn: expirationTime,\r\n                token: response.headers.authorization\r\n            }\r\n            localStorage.setItem('userData', JSON.stringify(tokenData))\r\n            console.log(localStorage.getItem('userData'))\r\n            context.commit(SET_USER_TOKEN_DATA_MUTATION, tokenData)\r\n            return true\r\n        } else return false\r\n    },\r\n\r\n    async [LOGIN_ACTION](context, payload) {\r\n        return context.dispatch(AUTH_ACTION, {\r\n            ...payload,\r\n            url: 'http://localhost:3000/auth'\r\n                //url: 'https://bhsapi.duartecota.com/auth'\r\n        })\r\n    },\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,4BAA4B,GAAG,gCAAgC;AAE5E,SACIC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,4BAA4B,EAC5BC,iBAAiB,EACjBC,kBAAkB,EAClBC,wBAAwB,QACrB,sBAAsB;AAE7B,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAIC,KAAK,GAAG,EAAE;AAEd,eAAe;EACX,CAACN,aAAa,EAAEO,OAAO,EAAE;IACrBA,OAAO,CAACC,MAAM,CAACP,4BAA4B,EAAE;MACzCQ,GAAG,EAAE,IAAI;MACTC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE;IACf,CAAC,CAAC;IACFC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;IACnC,IAAIV,KAAK,EAAE;MACPW,YAAY,CAACX,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,CAACJ,iBAAiB,EAAEK,OAAO,EAAE;IACzB,IAAIW,cAAc,GAAGH,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;IAC3B,IAAIA,cAAc,EAAE;MAChB,IAAII,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC;MACzC,IAAIO,cAAc,GAAGH,QAAQ,CAACR,SAAS,GAAG,IAAIY,IAAI,EAAE,CAACC,OAAO,EAAE;MAC9D,IAAIF,cAAc,GAAG,KAAK,EAAE;QACxBlB,OAAO,CAACqB,QAAQ,CAACzB,kBAAkB,CAAC;MACxC,CAAC,MAAM;QACHG,KAAK,GAAGuB,UAAU,CAAC,MAAM;UACrBtB,OAAO,CAACqB,QAAQ,CAACzB,kBAAkB,CAAC;QACxC,CAAC,EAAEsB,cAAc,CAAC;MACtB;MACAlB,OAAO,CAACC,MAAM,CAACP,4BAA4B,EAAEqB,QAAQ,CAAC;IAC1D;EACJ,CAAC;EAED,CAACnB,kBAAkB,EAAEI,OAAO,EAAE;IAC1BA,OAAO,CAACqB,QAAQ,CAAC5B,aAAa,CAAC;IAC/BO,OAAO,CAACC,MAAM,CAACJ,wBAAwB,CAAC;EAC5C,CAAC;EAED,OAAOL,WAAW,EAAEQ,OAAO,EAAEuB,OAAO,EAAE;IAElC,IAAIC,QAAQ,GAAG;MACXC,QAAQ,EAAEF,OAAO,CAACE,QAAQ;MAC1BC,QAAQ,EAAEH,OAAO,CAACG,QAAQ;MAC1BC,MAAM,EAAEJ,OAAO,CAACI;IACpB,CAAC;IACD,IAAIC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAACN,OAAO,CAACO,GAAG,EAAEN,QAAQ,CAAC;IACtD,IAAII,QAAQ,CAACG,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;MAC5B,IAAId,cAAc,GAAG,CAACU,QAAQ,CAACG,IAAI,CAACE,IAAI,CAAC1B,SAAS,GAAG,IAAI;MACrD;MACJR,KAAK,GAAGuB,UAAU,CAAC,MAAM;QACrBtB,OAAO,CAACqB,QAAQ,CAACzB,kBAAkB,CAAC;MACxC,CAAC,EAAEsB,cAAc,CAAC;MAClB,IAAIgB,SAAS,GAAG;QACZhC,GAAG,EAAE0B,QAAQ,CAACG,IAAI,CAACE,IAAI,CAAC/B,GAAG;QAC3BC,SAAS,EAAEyB,QAAQ,CAACG,IAAI,CAACE,IAAI,CAAC9B,SAAS;QACvCC,QAAQ,EAAEwB,QAAQ,CAACG,IAAI,CAACE,IAAI,CAAC7B,QAAQ;QACrCC,KAAK,EAAEuB,QAAQ,CAACG,IAAI,CAACE,IAAI,CAAC5B,KAAK;QAC/B8B,GAAG,EAAEP,QAAQ,CAACG,IAAI,CAACE,IAAI,CAACE,GAAG;QAC3B5B,SAAS,EAAEW,cAAc;QACzBZ,KAAK,EAAEsB,QAAQ,CAACQ,OAAO,CAACC;MAC5B,CAAC;MACD7B,YAAY,CAAC8B,OAAO,CAAC,UAAU,EAAEtB,IAAI,CAACuB,SAAS,CAACL,SAAS,CAAC,CAAC;MAC3DrB,OAAO,CAACC,GAAG,CAACN,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7CZ,OAAO,CAACC,MAAM,CAACP,4BAA4B,EAAEwC,SAAS,CAAC;MACvD,OAAO,IAAI;IACf,CAAC,MAAM,OAAO,KAAK;EACvB,CAAC;EAED,OAAO3C,YAAY,EAAES,OAAO,EAAEuB,OAAO,EAAE;IACnC,OAAOvB,OAAO,CAACqB,QAAQ,CAAC7B,WAAW,EAAE;MACjC,GAAG+B,OAAO;MACVO,GAAG,EAAE;MACD;IACR,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}