{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { defineComponent } from \"vue\";\nimport { GoogleMap, Marker, InfoWindow } from \"vue3-google-map\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default defineComponent({\n  mixins: [en, pt],\n  components: {\n    GoogleMap,\n    Marker\n  },\n  setup() {\n    const center = {\n      lat: 37.7458399,\n      lng: -25.6651378\n    };\n    const markerOptions = {\n      position: center,\n      label: \"H\",\n      title: \"LADY LIBERTY\"\n    };\n    return {\n      center,\n      markerOptions\n    };\n  },\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      apiaries: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      address: \"\",\n      observations: \"\",\n      regdate: \"\",\n      isShow: true,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      toDeleteID: \"\",\n      toEditID: \"\",\n      toInterventionsID: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER,\n      el: \"#app\"\n    })\n  },\n  created() {\n    this.isShow = false;\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    back() {\n      this.$router.push(\"devices\");\n    },\n    teste() {\n      alert('teste');\n    }\n  }\n});","map":{"version":3,"mappings":";AA6DE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,eAAc,QAAS,KAAK;AACrC,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAS,QAAS,iBAAiB;AAC/D,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,SACEC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,yBAAyB;AAEhC,eAAeR,eAAe,CAAC;EAC7BS,MAAM,EAAE,CAACZ,EAAE,EAAEC,EAAE,CAAC;EAChBY,UAAU,EAAE;IAAET,SAAS;IAAEC;EAAO,CAAC;EACjCS,KAAK,GAAG;IACN,MAAMC,MAAK,GAAI;MAAEC,GAAG,EAAE,UAAU;MAAEC,GAAG,EAAE,CAAC;IAAW,CAAC;IACpD,MAAMC,aAAY,GAAI;MAAEC,QAAQ,EAAEJ,MAAM;MAAEK,KAAK,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAe,CAAC;IAC7E,OAAO;MAAEN,MAAM;MAAEG;IAAc,CAAC;EAClC,CAAC;EACDI,IAAI,EAAE,YAAY;IAChB,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAEC,OAAO,CAAC,uBAAuB,CAAC;MACrCL,IAAI,EAAEA,IAAI;MACVM,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE;MACP,CAAC;MACDC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,IAAI;MACZC,qBAAqB,EAAE,KAAK;MAC5BC,oBAAoB,EAAE,KAAK;MAC3BC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGlC,UAAU,CAAC,MAAM,EAAE;MACpBmC,KAAK,EAAEjC,qBAAqB;MAC5BkC,KAAK,EAAEjC,qBAAqB;MAC5BkC,GAAG,EAAEjC,kBAAkB;MACvBkC,EAAE,EAAE;IACN,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACX,MAAK,GAAI,KAAK;EACrB,CAAC;EACDY,OAAO,EAAE;IACPC,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAAC1B,IAAI,CAAC,CAAC0B,IAAI,CAAC;IAC9B,CAAC;IACDC,IAAI,GAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B,CAAC;IACDC,KAAK,GAAG;MACNC,KAAK,CAAC,OAAO;IACf;EACF;AACF,CAAC,CAAC","names":["en","pt","axios","defineComponent","GoogleMap","Marker","InfoWindow","mapGetters","mapActions","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","setup","center","lat","lng","markerOptions","position","label","title","data","lang","localStorage","getItem","apiaries","img","require","message","type","msg","address","observations","regdate","isShow","isModalDetailsVisible","isModalDeleteVisible","toDeleteID","toEditID","toInterventionsID","computed","token","level","_id","el","created","methods","translate","prop","back","$router","push","teste","alert"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Map.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">{{ translate(\"devicesAllTitle\") }}</h1>\r\n    <hr />\r\n\r\n    <GoogleMap\r\n      api-key=\"AIzaSyBS5cccM97lkMCpieTfkCKC4oiyY-r5vOI\"\r\n      style=\"width: 100%; height: 600px\"\r\n      :center=\"center\"\r\n      :zoom=\"19\">\r\n      <Marker :options=\"markerOptions\" @click=\"teste\" />\r\n      <InfoWindow :options=\"{ position: center, content: 'Hello World!' }\" />\r\n    </GoogleMap>\r\n\r\n    <section class=\"text-center\">\r\n      <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        {{ translate(\"btnBack\") }}\r\n      </button>\r\n    </section>\r\n\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n\r\n  </section>\r\n</template>\r\n    \r\n<style scoped>\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n.my-body {\r\n  margin-top: 100px;\r\n}\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { defineComponent } from \"vue\";\r\n  import { GoogleMap, Marker, InfoWindow } from \"vue3-google-map\";\r\n  import { mapGetters, mapActions } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n\r\n  export default defineComponent({\r\n    mixins: [en, pt],\r\n    components: { GoogleMap, Marker },\r\n    setup() {\r\n      const center = { lat: 37.7458399, lng: -25.6651378 };\r\n      const markerOptions = { position: center, label: \"H\", title: \"LADY LIBERTY\" };\r\n      return { center, markerOptions };\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        apiaries: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        address: \"\",\r\n        observations: \"\",\r\n        regdate: \"\",\r\n        isShow: true,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        toDeleteID: \"\",\r\n        toEditID: \"\",\r\n        toInterventionsID: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        el: \"#app\",\r\n      }),\r\n    },\r\n    created() {\r\n      this.isShow = false;\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      back() {\r\n        this.$router.push(\"devices\");\r\n      },\r\n      teste() {\r\n        alert('teste')\r\n      }\r\n    },\r\n  });\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}