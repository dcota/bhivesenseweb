{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<section>\\n  <Header />\\n  <Nav />\\n  <Sidebar />\\n  <Loader v-if=\\\"showLoader\\\"></Loader>\\n  <section id=\\\"content\\\"><router-view></router-view></section>\\n  </section>\"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAQOA,EAAE,EAAC;AAAK;;;6DAPbC,gMAMa,EACbC,oBAA+C,OAA/CC,UAA+C,GAAjCC,aAA2BC","names":["id","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\App.vue"],"sourcesContent":["<template>\n  <!--<section>\n  <Header />\n  <Nav />\n  <Sidebar />\n  <Loader v-if=\"showLoader\"></Loader>\n  <section id=\"content\"><router-view></router-view></section>\n  </section>-->\n  <div id=\"app\"><router-view></router-view></div>\n  \n</template>\n\n<script>\nimport Nav from \"./components/Nav.vue\";\nimport Sidebar from \"./components/Sidebar.vue\"\n//import Header from \"./components/Header.vue\";\nimport Footer from \"./components/Footer.vue\";\nimport Loader from \"./components/Loader.vue\";\nimport { mapState } from \"vuex\";\nimport { AUTO_LOGIN_ACTION } from \"./store/storeconstants\";\nexport default {\n  name: \"App\",\n  computed: {\n    ...mapState({\n      showLoader: (state) => state.showLoader,\n      autoLogout: (state) => state.auth.autoLogout,\n    }),\n  }, \n  watch: {\n    autoLogout(curValue, oldValue) {\n      if (curValue && curValue != oldValue) {\n        this.$router.replace(\"/Login\");\n      }\n    },\n  },\n  components: {\n    //Header,\n    Sidebar,\n    Nav,\n    Loader,\n    Footer,\n  },\n  created() {\n    this.$store.dispatch(`auth/${AUTO_LOGIN_ACTION}`);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}