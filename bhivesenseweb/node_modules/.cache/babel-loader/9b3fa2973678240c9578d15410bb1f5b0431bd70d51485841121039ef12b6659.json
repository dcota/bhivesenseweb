{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport Modal from \"../components/ModalNewDevice\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new Apiary\",\n  mixins: [en, pt],\n  components: {\n    Modal\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        id: \"\"\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: false,\n      isModalVisible: false,\n      showsection: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  methods: {\n    async getID() {\n      //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\n      this.isShow = true;\n      await axios.post(\"https://bhsapi.duartecota.com/device\", {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 201) {\n          this.form.id = response.data.body;\n          this.isShow = false;\n          this.showsection = true;\n          this.message.type = \"success\";\n          this.message.msg = this.translate(\"mesNewDeviceSuccess\");\n          setTimeout(() => this.showsection = false, 3000);\n        } else {\n          this.isShow = false;\n          this.showsection = true;\n          this.message.type = \"danger\";\n          this.message.msg = this.translate(\"mesProblem\");\n        }\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    back() {\n      this.$router.replace(\"/\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async copyText(id) {\n      if (this.form.id == \"\") {\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"newDeviceNoID\");\n        setTimeout(() => this.showsection = false, 3000);\n      } else {\n        await navigator.clipboard.writeText(id);\n        this.showsection = true;\n        this.message.type = \"success\";\n        this.message.msg = this.translate(\"newDeviceCopyAlert\");\n        setTimeout(() => this.showsection = false, 3000);\n      }\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    generate() {\n      this.isModalVisible = false;\n      this.getID();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","Modal","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","components","data","lang","localStorage","getItem","form","id","message","type","msg","isShow","isModalVisible","showsection","computed","token","level","_id","methods","getID","post","headers","Authorization","then","response","http","body","translate","setTimeout","catch","error","console","log","back","$router","replace","prop","copyText","navigator","clipboard","writeText","showModal","closeModal","generate"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newdevice.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"container\">\r\n    <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n      <section class=\"container my-body\" style=\"width: 70%\">\r\n        <h1 class=\"text-center mt-5\">{{ translate(\"formNewDeviceTitle\") }}</h1>\r\n        <section\r\n          v-if=\"showsection\"\r\n          class=\"alert mt-3 alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          v-bind:class=\"'alert-' + message.type\"\r\n        >\r\n          {{ message.msg }}\r\n        </section>\r\n        <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n          <section class=\"row\">\r\n            <section class=\"col-md-12 g-4 flex\">\r\n              <label for=\"location\" class=\"form-label\">{{\r\n                translate(\"formNewDeviceID\")\r\n              }}</label>\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"form.id\"\r\n                class=\"form-control\"\r\n                id=\"id\"\r\n                style=\"font-size: medium\"\r\n              />\r\n              <button\r\n                class=\"btn me-4 btn_copy mt-1\"\r\n                @click=\"copyText(this.form.id)\"\r\n              >\r\n                {{ translate(\"newDeviceCopyBtn\") }}\r\n              </button>\r\n            </section>\r\n          </section>\r\n\r\n          <section class=\"text-center\">\r\n            <button\r\n              @click=\"showModal()\"\r\n              type=\"submit\"\r\n              class=\"btn mt-5 me-4 my-button\"\r\n            >\r\n              {{ translate(\"formNewDeviceBtnGenerate\") }}\r\n            </button>\r\n            <button @click=\"back\" type=\"button\" class=\"btn mt-5 my-button\">\r\n              {{ translate(\"btnBack\") }}\r\n            </button>\r\n          </section>\r\n        </form>\r\n        <section class=\"text-center\">\r\n          <section v-if=\"isShow\" class=\"text-center\">\r\n            <section class=\"spinner-border mt-4\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </section>\r\n            <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n          </section>\r\n        </section>\r\n        <Modal\r\n          v-show=\"isModalVisible\"\r\n          @close=\"closeModal\"\r\n          @generate=\"generate\"\r\n        />\r\n        <section class=\"spacer\"></section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n.btn_copy {\r\n  width: 75px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n.btn_copy:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n.my-body {\r\n  margin-top: 0px;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import Modal from \"../components/ModalNewDevice\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new Apiary\",\r\n    mixins: [en, pt],\r\n    components: {\r\n      Modal,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          id: \"\",\r\n        },\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        isShow: false,\r\n        isModalVisible: false,\r\n        showsection: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      async getID() {\r\n        //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\r\n        this.isShow = true;\r\n        await axios\r\n          .post(\"https://bhsapi.duartecota.com/device\", {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 201) {\r\n              this.form.id = response.data.body;\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"success\";\r\n              this.message.msg = this.translate(\"mesNewDeviceSuccess\");\r\n              setTimeout(() => (this.showsection = false), 3000);\r\n            } else {\r\n              this.isShow = false;\r\n              this.showsection = true;\r\n              this.message.type = \"danger\";\r\n              this.message.msg = this.translate(\"mesProblem\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async copyText(id) {\r\n        if (this.form.id == \"\") {\r\n          this.showsection = true;\r\n          this.message.type = \"danger\";\r\n          this.message.msg = this.translate(\"newDeviceNoID\");\r\n          setTimeout(() => (this.showsection = false), 3000);\r\n        } else {\r\n          await navigator.clipboard.writeText(id);\r\n          this.showsection = true;\r\n          this.message.type = \"success\";\r\n          this.message.msg = this.translate(\"newDeviceCopyAlert\");\r\n          setTimeout(() => (this.showsection = false), 3000);\r\n        }\r\n      },\r\n      showModal() {\r\n        this.isModalVisible = true;\r\n      },\r\n      closeModal() {\r\n        this.isModalVisible = false;\r\n      },\r\n      generate() {\r\n        this.isModalVisible = false;\r\n        this.getID();\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}