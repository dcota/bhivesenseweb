{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-73f8308c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"scrolling-component\",\n  ref: \"scrollcomponent\",\n  name: \"lang\"\n};\nconst _hoisted_2 = {\n  class: \"container my-body\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"text-center\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"col-md-6 g-4\"\n};\nconst _hoisted_8 = {\n  for: \"bdate\",\n  class: \"form-label\"\n};\nconst _hoisted_9 = {\n  class: \"col-md-6 g-4\"\n};\nconst _hoisted_10 = {\n  for: \"observations\",\n  class: \"form-label\"\n};\nconst _hoisted_11 = {\n  for: \"observations\",\n  class: \"form-label\"\n};\nconst _hoisted_12 = {\n  for: \"type\",\n  class: \"form-label\"\n};\nconst _hoisted_13 = [\"color\"];\nconst _hoisted_14 = {\n  value: 2,\n  style: {\n    \"color\": \"green\"\n  }\n};\nconst _hoisted_15 = {\n  value: 3,\n  style: {\n    \"color\": \"orange\"\n  }\n};\nconst _hoisted_16 = {\n  class: \"form-check mt-3\"\n};\nconst _hoisted_17 = {\n  class: \"form-check-label\",\n  for: \"subscribenews\"\n};\nconst _hoisted_18 = {\n  class: \"text-center\"\n};\nconst _hoisted_19 = {\n  type: \"submit\",\n  class: \"btn mt-4 me-4 my-button\"\n};\nconst _hoisted_20 = {\n  class: \"text-center\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spinner-border mt-4\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")], -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"mb-2\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_date_picker = _resolveComponent(\"v-date-picker\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_hoisted_3, _createElementVNode(\"h1\", _hoisted_4, _toDisplayString($options.translate(\"formNewInterventionTitle\")), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"form\", {\n    class: \"form-signin\",\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.send && $options.send(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"section\", _hoisted_6, [_createElementVNode(\"section\", _hoisted_7, [_createElementVNode(\"label\", _hoisted_8, _toDisplayString($options.translate(\"formNewInterventionDate\")), 1 /* TEXT */), _createVNode(_component_v_date_picker, {\n    locale: $data.lang,\n    \"is-expanded\": \"\",\n    modelValue: $data.range,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.range = $event),\n    \"is-range\": \"\",\n    is24hr: \"\",\n    mode: \"datetime\"\n  }, null, 8 /* PROPS */, [\"locale\", \"modelValue\"])]), _createElementVNode(\"section\", _hoisted_9, [_createElementVNode(\"label\", _hoisted_10, _toDisplayString($options.translate(\"formNewInterventionDescription\")), 1 /* TEXT */), _withDirectives(_createElementVNode(\"textarea\", {\n    rows: \"5\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.description = $event),\n    class: \"form-control\",\n    id: \"username\",\n    style: {\n      \"font-size\": \"small\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.description]]), _createElementVNode(\"label\", _hoisted_11, _toDisplayString($options.translate(\"formNewApiaryObservations\")), 1 /* TEXT */), _withDirectives(_createElementVNode(\"textarea\", {\n    rows: \"5\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.observations = $event),\n    class: \"form-control\",\n    id: \"username\",\n    style: {\n      \"font-size\": \"small\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.observations]]), _createElementVNode(\"label\", _hoisted_12, _toDisplayString($options.translate(\"selectLbl\")), 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.type = $event),\n    style: {\n      \"font-size\": \"large\",\n      \"color\": \"color\"\n    }\n  }, [_createElementVNode(\"option\", {\n    value: 1,\n    color: _ctx.red\n  }, [_createElementVNode(\"strong\", null, _toDisplayString($options.translate(\"fromNewInterventionType1\")), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_13), _createElementVNode(\"option\", _hoisted_14, _toDisplayString($options.translate(\"fromNewInterventionType2\")), 1 /* TEXT */), _createElementVNode(\"option\", _hoisted_15, _toDisplayString($options.translate(\"fromNewInterventionType3\")), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vModelSelect, $data.form.type]]), _createElementVNode(\"section\", _hoisted_16, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.notifications = $event),\n    value: \"\",\n    id: \"subscribenews\",\n    checked: \"\",\n    style: {\n      \"text-align\": \"left: important\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.form.notifications]]), _createElementVNode(\"label\", _hoisted_17, _toDisplayString($options.translate(\"formNewInterventionNotifications\")), 1 /* TEXT */)])])]), _createElementVNode(\"section\", _hoisted_18, [_createElementVNode(\"button\", _hoisted_19, _toDisplayString($options.translate(\"btnSubmit\")), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.cleanForm && $options.cleanForm(...args)),\n    type: \"button\",\n    class: \"btn mt-4 me-4 my-button\"\n  }, _toDisplayString($options.translate(\"btnClean\")), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.back && $options.back(...args)),\n    type: \"button\",\n    class: \"btn mt-4 my-button\"\n  }, _toDisplayString($options.translate(\"btnBack\")), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"section\", _hoisted_20, [$data.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_21, [_hoisted_22, _createElementVNode(\"section\", _hoisted_23, _toDisplayString($options.translate(\"spinnerTxt\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _hoisted_24])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":"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","names":["class","ref","name","_createElementVNode","for","value","style","type","role","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$options","_hoisted_5","onSubmit","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_v_date_picker","locale","$data","is24hr","mode","_hoisted_9","_hoisted_10","rows","description","id","_hoisted_11","observations","_hoisted_12","color","_ctx","_hoisted_14","_hoisted_15","_hoisted_16","notifications","checked","_hoisted_17","_hoisted_18","_hoisted_19","onClick","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newinterventionalt.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n    <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">\r\n    {{ translate(\"formNewInterventionTitle\") }}\r\n    </h1> \r\n    <hr />\r\n    <form class=\"form-signin\" v-on:submit.prevent=\"send\">\r\n    <section class=\"row\">\r\n    <section class=\"col-md-6 g-4\">\r\n    <label for=\"bdate\" class=\"form-label\">{{\r\n    translate(\"formNewInterventionDate\")\r\n    }}</label>\r\n    <v-date-picker :locale=\"lang\" is-expanded v-model=\"range\" is-range is24hr mode=\"datetime\" />\r\n    </section>\r\n    <section class=\"col-md-6 g-4\">\r\n    <label for=\"observations\" class=\"form-label\">{{\r\n    translate(\"formNewInterventionDescription\")\r\n    }}</label>\r\n    <textarea rows=\"5\" v-model=\"form.description\" class=\"form-control\" id=\"username\"\r\n    style=\"font-size: small\" />\r\n    <label for=\"observations\" class=\"form-label\">{{\r\n    translate(\"formNewApiaryObservations\")\r\n    }}</label>\r\n    <textarea rows=\"5\" v-model=\"form.observations\" class=\"form-control\" id=\"username\"\r\n    style=\"font-size: small\" />\r\n    <label for=\"type\" class=\"form-label\">{{\r\n    translate(\"selectLbl\")\r\n    }}</label>\r\n    <select class=\"form-select\" v-model=\"form.type\" style=\"font-size: large; color: color\">\r\n    <option v-bind:value=\"1\" v-bind:color=\"red\">\r\n    <strong>{{ translate(\"fromNewInterventionType1\") }}</strong>\r\n    </option>\r\n    <option v-bind:value=\"2\" style=\"color:green;\">\r\n    {{ translate(\"fromNewInterventionType2\") }}\r\n    </option>\r\n    <option v-bind:value=\"3\" style=\"color:orange;\">\r\n    {{ translate(\"fromNewInterventionType3\") }}\r\n    </option>\r\n    </select>\r\n    <section class=\"form-check mt-3\">\r\n    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"form.notifications\" value=\"\"\r\n    id=\"subscribenews\" checked style=\"text-align: left: important;\" />\r\n    <label class=\"form-check-label\" for=\"subscribenews\">\r\n    {{ translate(\"formNewInterventionNotifications\") }}</label>\r\n    </section>\r\n\r\n    </section>\r\n\r\n    </section>\r\n\r\n\r\n    <section class=\"text-center\">\r\n        <button type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n        {{ translate(\"btnSubmit\") }}\r\n        </button>\r\n        <button @click=\"cleanForm\" type=\"button\" class=\"btn mt-4 me-4 my-button\">\r\n        {{ translate(\"btnClean\") }}\r\n        </button>\r\n        <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        {{ translate(\"btnBack\") }}\r\n        </button>\r\n    </section>\r\n    </form>\r\n\r\n    <section class=\"text-center\">\r\n    <section v-if=\"isShow\" class=\"text-center\">\r\n    <section class=\"spinner-border mt-4\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n    </section>\r\n    <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n    </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.c1 {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n.c2 {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\n.c3 {\r\n  color: orange;\r\n  font-weight: bold;\r\n}\r\n.my-button {\r\n    width: 120px;\r\n    background-color: black;\r\n    color: white;\r\n}\r\n\r\n.my-button:hover {\r\n    background-color: white;\r\n    color: black;\r\n}\r\n\r\nselect option[disabled]:first-child {\r\n    display: none;\r\n}\r\n\r\n.my-body {\r\n    margin-top: 100px;\r\n}\r\n\r\n.spacer {\r\n    height: 200px;\r\n}\r\n\r\n.top-btn {\r\n    font-weight: bold;\r\n    width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport en from \"../assets/en.js\";\r\nimport pt from \"../assets/pt.js\";\r\nimport axios from \"axios\";\r\nimport { notify } from \"@kyvg/vue3-notification\";\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n} from \"../store/storeconstants\";\r\nexport default {\r\n    name: \"new intervention\",\r\n    mixins: [en, pt],\r\n    data() {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const day = date.getDay();\r\n        const lang = localStorage.getItem(\"lang\") || \"en\";\r\n        return {\r\n            range: {\r\n                    start: new Date(),\r\n                    end: new Date(),\r\n                },\r\n            form: {\r\n                description: \"\",\r\n                observations: \"\",\r\n                type: \"\",\r\n                notifications: true,\r\n                \r\n            },\r\n            isShow: false,\r\n            lang: lang,\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(\"auth\", {\r\n            token: GET_USER_TOKEN_GETTER,\r\n            level: GET_USER_LEVEL_GETTER,\r\n            _id: GET_USER_ID_GETTER,\r\n        }),\r\n    },\r\n    methods: {\r\n        async send() {\r\n            this.isShow=true;\r\n            if(this.checkForm()==true) {\r\n                this.isShow = false;\r\n                console.log(this.range.start.getFullYear())\r\n                console.log(this.form.type)\r\n            }\r\n            else {\r\n                this.isShow = false;\r\n                notify({\r\n                    title: this.translate(\"notifErrorTitle\"),\r\n                    text: this.translate(\"mesFieldsIntervention\"),\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                    speed: 500,\r\n                });\r\n            }\r\n\r\n            /*let postData = {\r\n                apiary: localStorage.getItem(\"idtointerventions\"),\r\n                description: this.form.description,\r\n                date: this.form.date,\r\n                observations: this.form.observations,\r\n                notifications: this.form.notifications,\r\n            };\r\n            //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\r\n            if (this.checkForm() == true) {\r\n                this.isShow = true;\r\n                await axios\r\n                    .post(\"https://bhsapi.duartecota.com/intervention\", postData, {\r\n                        headers: {\r\n                            Authorization: this.token,\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n                        if (response.data.http == 201) {\r\n                            this.isShow = false;\r\n                            this.message.type = \"success\";\r\n                            this.message.msg = this.translate(\"mesNewApiarySuccess\");\r\n                            notify({\r\n                                title: this.translate(\"notifSuccessTitle\"),\r\n                                text: this.translate(\"mesNewInterventionSuccess\"),\r\n                                type: \"success\",\r\n                                duration: 3000,\r\n                                speed: 500,\r\n                            });\r\n                            this.$router.replace(\"apiaries\");\r\n                        } else {\r\n                            this.isShow = false;\r\n                            notify({\r\n                                title: this.translate(\"notifErrorTitle\"),\r\n                                text: this.translate(\"mesProblem\"),\r\n                                type: \"success\",\r\n                                duration: 3000,\r\n                                speed: 500,\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        this.isShow = false;\r\n                        notify({\r\n                            title: this.translate(\"notifErrorTitle\"),\r\n                            text: this.translate(\"mesProblem\"),\r\n                            type: \"error\",\r\n                            duration: 3000,\r\n                            speed: 500,\r\n                        });\r\n                    });\r\n            } else {\r\n                this.isShow = false;\r\n                notify({\r\n                    title: this.translate(\"notifErrorTitle\"),\r\n                    text: this.translate(\"mesFieldsIntervention\"),\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                    speed: 500,\r\n                });\r\n            }*/\r\n        },\r\n        cleanForm() {\r\n            this.form.description = \"\",\r\n                this.form.observations = \"\",\r\n                this.form.type=\"\"\r\n                this.form.notifications = true,\r\n                this.range.start=new Date(),\r\n                this.range.end=new Date(),\r\n                this.isShow = false;\r\n        },\r\n        back() {\r\n            this.$router.replace(\"interventions\");\r\n        },\r\n        checkForm() {\r\n            if (this.form.description == \"\" || this.form.type==\"\") {\r\n                this.isShow = false;\r\n                notify({\r\n                    title: this.translate(\"notifErrorTitle\"),\r\n                    text: this.translate(\"mesFieldsIntervention\"),\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                    speed: 500,\r\n                });\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        translate(prop) {\r\n            return this[this.lang][prop];\r\n        },\r\n        dayClicked(day) {\r\n            alert(this.range.start + ';' + this.range.end);\r\n        },\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}