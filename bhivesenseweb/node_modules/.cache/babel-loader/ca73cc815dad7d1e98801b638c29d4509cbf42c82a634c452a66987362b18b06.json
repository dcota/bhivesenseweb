{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport ModalDelete from \"../components/ModalUnregisterDevice.vue\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\n//import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  components: {\n    ModalDelete\n  },\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      searchID: \"\",\n      data: localStorage.token,\n      devices: [],\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      id: \"\",\n      state: \"\",\n      name: \"\",\n      showsection: false,\n      isShow: false,\n      lang: lang,\n      isModalDeleteVisible: false,\n      hivetounregister: \"\",\n      hasEvents: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    this.getEvents();\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async getEvents() {\n      this.hiveEvents = [];\n      this.interventionEvents = [];\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (events.length == 0) {\n          this.hasEvents = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noNotifications\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasEvents = true;\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].cat == \"hive\") {\n              this.hiveEvents.push({\n                _id: events[i]._id,\n                text: events[i].type == \"LIDOPEN\" ? this.translate(\"hiveText\") : \"\"\n              });\n            } else {\n              this.interventionEvents.push({\n                id: events[i]._id,\n                text: events[i].type == \"INTER\" ? this.translate(\"interTExt\") : \"\"\n              });\n            }\n          }\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async unregister(id) {\n      await axios.put(\"https://bhsapi.duartecota.com/device/unregister/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"unregisterMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getDevices();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async assign(id) {\n      alert(id);\n      alert(localStorage.getItem(\"apiaryIDtoget\"));\n      await axios.patch(\"https://bhsapi.duartecota.com/device/\" + id + \"/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"assignMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getDevices();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async deleteModal(id) {\n      this.hivetounregister = id;\n      this.isModalDeleteVisible = true;\n    },\n    closeModalDelete() {\n      this.isModalDeleteVisible = false;\n    },\n    async toUnregister() {\n      await this.unregister(this.hivetounregister);\n      alert(this.hivetounregister);\n      this.isModalDeleteVisible = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","ModalDelete","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","data","lang","localStorage","getItem","searchID","token","devices","message","type","msg","id","state","name","showsection","isShow","isModalDeleteVisible","hivetounregister","hasEvents","computed","level","_id","mounted","getEvents","methods","translate","prop","hiveEvents","interventionEvents","get","headers","Authorization","then","response","events","body","length","title","text","duration","speed","i","cat","push","catch","error","console","log","unregister","put","http","getDevices","assign","alert","patch","deleteModal","closeModalDelete","toUnregister"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Notifications.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Gestão de Alunos (Admin)\r\n*/\r\n\r\n<template id=\"example-modal\">\r\n  <section class=\"container my-body\">\r\n    <h1 class=\"my-text-color\">{{ translate(\"notificationsTitle\") }}</h1>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button\r\n        @click=\"$router.push('/')\"\r\n        type=\"button\"\r\n        class=\"btn mt-4 my-button\"\r\n      >\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n    </section>\r\n    <section class=\"row mt-3\" v-if=\"hasEvents\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"eventsLabel\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\" v-if=\"hasEvents\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2 table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdEvent\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdHive\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"lblBtnIgnore\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n              <td>{{ event.text }}</td>\r\n              <td class=\"text-center\">{{ event._id }}</td>\r\n              <td class=\"text-center\">\r\n                <div\r\n                  class=\"form-check form-switch d-flex justify-content-center\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    id=\"flexSwitchCheckDefault\"\r\n                  />\r\n                </div>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblAssign')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"assign(device.id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fa-solid fa-right-to-bracket\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <section class=\"row mt-3\" v-if=\"hasEvents\">\r\n      <h4 class=\"my-text-color\">{{ translate(\"interventionLabel\") }}</h4>\r\n    </section>\r\n    <section class=\"card mt-2\" v-if=\"hasEvents\">\r\n      <section\r\n        class=\"card-body\"\r\n        style=\"\r\n          border-radius: 3px;\r\n          box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n            rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n        \"\r\n      >\r\n        <table class=\"table mt-2 table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ translate(\"thdDevicesID\") }}</th>\r\n              <th class=\"text-center\">{{ translate(\"thdDevicesApiary\") }}</th>\r\n              <!--<th class=\"text-center\">{{ translate(\"thdUsersStatus\") }}</th>-->\r\n              <th class=\"text-center\">{{ translate(\"thdUsersActions\") }}</th>\r\n            </tr>\r\n            <tr v-for=\"device in filteredPersons\" :key=\"device.id\">\r\n              <td>{{ device.id }}</td>\r\n              <td>{{ device.assigned }}</td>\r\n              <!--<td class=\"text-center\">{{ user.lastlogin }}</td>-->\r\n              <td class=\"text-center\">\r\n                <!--<button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblUnregister')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"deleteModal(device.id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-sm me-2 ac-btn\"\r\n                  :disabled=\"device.hasapiary\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fa-solid fa-right-from-bracket\"></i>\r\n                </button>-->\r\n                <button\r\n                  data-bs-toggle=\"tooltip\"\r\n                  v-bind:title=\"translate('lblAssign')\"\r\n                  data-bs-placement=\"bottom\"\r\n                  data-bs-custom-class=\"custom-tooltip\"\r\n                  @click=\"assign(device.id)\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm me-2 ac-btn\"\r\n                  :disabled=\"device.hasapiary\"\r\n                  style=\"width: 50px\"\r\n                >\r\n                  <i class=\"fa-solid fa-right-to-bracket\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n    <ModalDelete\r\n      v-show=\"isModalDeleteVisible\"\r\n      @close=\"closeModalDelete\"\r\n      @unregister=\"toUnregister\"\r\n    />\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.ac-btn {\r\n  width: 120px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import ModalDelete from \"../components/ModalUnregisterDevice.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  //import { LOADING_SPINNER_SHOW_MUTATION } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDelete,\r\n    },\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        searchID: \"\",\r\n        data: localStorage.token,\r\n        devices: [],\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        id: \"\",\r\n        state: \"\",\r\n        name: \"\",\r\n        showsection: false,\r\n        isShow: false,\r\n        lang: lang,\r\n        isModalDeleteVisible: false,\r\n        hivetounregister: \"\",\r\n        hasEvents: false,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.getEvents();\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async getEvents() {\r\n        this.hiveEvents = [];\r\n        this.interventionEvents = [];\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.isShow = false;\r\n            let events = response.data.body;\r\n            if (events.length == 0) {\r\n              this.hasEvents = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noNotifications\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasEvents = true;\r\n              for (let i = 0; i < events.length; i++) {\r\n                if (events[i].cat == \"hive\") {\r\n                  this.hiveEvents.push({\r\n                    _id: events[i]._id,\r\n                    text:\r\n                      events[i].type == \"LIDOPEN\"\r\n                        ? this.translate(\"hiveText\")\r\n                        : \"\",\r\n                  });\r\n                } else {\r\n                  this.interventionEvents.push({\r\n                    id: events[i]._id,\r\n                    text:\r\n                      events[i].type == \"INTER\"\r\n                        ? this.translate(\"interTExt\")\r\n                        : \"\",\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      async unregister(id) {\r\n        await axios\r\n          .put(\"https://bhsapi.duartecota.com/device/unregister/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"unregisterMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async assign(id) {\r\n        alert(id);\r\n        alert(localStorage.getItem(\"apiaryIDtoget\"));\r\n        await axios\r\n          .patch(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              id +\r\n              \"/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"assignMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async deleteModal(id) {\r\n        this.hivetounregister = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      closeModalDelete() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      async toUnregister() {\r\n        await this.unregister(this.hivetounregister);\r\n        alert(this.hivetounregister);\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}