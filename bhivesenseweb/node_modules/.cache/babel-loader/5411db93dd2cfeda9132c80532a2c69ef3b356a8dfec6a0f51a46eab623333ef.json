{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { Tooltip } from \"bootstrap/dist/js/bootstrap.esm.min.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport Modal from \"../components/ModalApiaryDetails.vue\";\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"Apiaries\",\n  mixins: [en, pt],\n  components: {\n    Modal\n  },\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      apiaries: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: true,\n      isModalVisible: false,\n      showsection: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    Array.from(document.querySelectorAll('button[data-bs-toggle=\"tooltip\"]')).forEach(tooltipNode => new Tooltip(tooltipNode));\n    this.getApiaries();\n  },\n  methods: {\n    async getApiaries() {\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      this.isShow = true;\n      this.apiaries = [];\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.body.length == 0) {\n          this.showsection = true;\n          this.message.type = \"danger\";\n          this.message.msg = this.translate(\"mesNoApiaries\");\n        } else {\n          let apiaries = response.data.body;\n          for (let i = 0; i < apiaries.length; i++) {\n            this.apiaries.push({\n              _id: apiaries[i]._id,\n              num: i + 1,\n              location: apiaries[i].location\n            });\n          }\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        console.log(response);\n        this.address = response.data.body.address;\n        this.observations = response.data.body.observations;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async detailsModal(id) {\n      await this.detail(id);\n      this.isModalVisible = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Tooltip","en","pt","axios","Modal","mapGetters","mapMutations","mapActions","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","components","data","lang","localStorage","getItem","apiaries","img","require","message","type","msg","isShow","isModalVisible","showsection","computed","token","level","_id","mounted","Array","from","document","querySelectorAll","forEach","tooltipNode","getApiaries","methods","get","headers","Authorization","then","response","body","length","translate","i","push","num","location","catch","error","console","log","prop","closeModal","detail","id","address","observations","detailsModal"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Apiaries.vue"],"sourcesContent":["<template>\r\n  <section class=\"container justify-content-center\" style=\"width: 80%\">\r\n    <h1 class=\"text-center mt-5\">{{ translate(\"apiaryAllTitle\") }}</h1>\r\n    <section\r\n      v-if=\"showsection\"\r\n      class=\"alert mt-3 alert-dismissible fade show\"\r\n      role=\"alert\"\r\n      v-bind:class=\"'alert-' + message.type\"\r\n    >\r\n      {{ message.msg }}\r\n    </section>\r\n    <section class=\"row mt-5\">\r\n      <section\r\n        class=\"col-12 col-md-6 col-lg-4\"\r\n        v-for=\"apiary of this.apiaries\"\r\n        :key=\"apiary._id\"\r\n      >\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n              rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n          \"\r\n        >\r\n          <img\r\n            :src=\"img\"\r\n            class=\"card-img-top\"\r\n            alt=\"...\"\r\n            style=\"\r\n              width: 50%;\r\n              display: block;\r\n              margin-right: auto;\r\n              margin-left: auto;\r\n            \"\r\n          />\r\n          <section class=\"card-body\">\r\n            <h5 class=\"card-title text-center\">\r\n              {{ translate(\"lblCardApiary\") }} {{ apiary.num }}\r\n            </h5>\r\n            <p class=\"card-text text-center\">\r\n              <strong>{{ apiary.location }}</strong>\r\n            </p>\r\n            <hr />\r\n            <section class=\"text-center\">\r\n              <section class=\"row\">\r\n                <section class=\"col-sm-6 mt-1\">\r\n                  <button\r\n                    href=\"#\"\r\n                    class=\"btn text-center bn\"\r\n                    @click=\"detailsModal(apiary._id)\"\r\n                  >\r\n                    <i class=\"fas fa-search me-1\" aria-hidden=\"true\"></i>\r\n                    <!--<strong>{{ translate(\"lblCardApiaryBtn\") }}</strong>-->\r\n                  </button>\r\n                </section>\r\n                <section class=\"col-sm-6 mt-1\">\r\n                  <button\r\n                    href=\"#\"\r\n                    class=\"btn text-center bn\"\r\n                    @click=\"detailsModal(apiary._id)\"\r\n                  >\r\n                    <i class=\"fas fa-wrench\"></i>\r\n                    <!--<strong>{{ translate(\"lblCardInterventionsBtn\") }}</strong>-->\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n    <Modal\r\n      v-show=\"isModalVisible\"\r\n      @close=\"closeModal\"\r\n      :address=\"address\"\r\n      :observations=\"observations\"\r\n    />\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\n  import \"bootstrap/dist/css/bootstrap.min.css\";\r\n  import \"bootstrap/dist/js/bootstrap.min.js\";\r\n  import { Tooltip } from \"bootstrap/dist/js/bootstrap.esm.min.js\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import Modal from \"../components/ModalApiaryDetails.vue\";\r\n  import { mapGetters, mapMutations, mapActions } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"Apiaries\",\r\n    mixins: [en, pt],\r\n    components: {\r\n      Modal,\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        apiaries: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        isShow: true,\r\n        isModalVisible: false,\r\n        showsection: false,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      Array.from(\r\n        document.querySelectorAll('button[data-bs-toggle=\"tooltip\"]')\r\n      ).forEach((tooltipNode) => new Tooltip(tooltipNode));\r\n      this.getApiaries();\r\n    },\r\n    methods: {\r\n      async getApiaries() {\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        this.isShow = true;\r\n        this.apiaries = [];\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/\" + this._id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.body.length == 0) {\r\n              this.showsection = true;\r\n              this.message.type = \"danger\";\r\n              this.message.msg = this.translate(\"mesNoApiaries\");\r\n            } else {\r\n              let apiaries = response.data.body;\r\n              for (let i = 0; i < apiaries.length; i++) {\r\n                this.apiaries.push({\r\n                  _id: apiaries[i]._id,\r\n                  num: i + 1,\r\n                  location: apiaries[i].location,\r\n                });\r\n              }\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      closeModal() {\r\n        this.isModalVisible = false;\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        await this.detail(id);\r\n        this.isModalVisible = true;\r\n      },\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}