{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport ModalDetails from \"../components/ModalApiaryDetails.vue\";\nimport ModalUnassign from \"../components/ModalUnassign.vue\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"Apiaries\",\n  mixins: [en, pt],\n  components: {\n    ModalDetails,\n    ModalUnassign\n  },\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      green: require(\"../assets/green.png\"),\n      red: require(\"../assets/red.png\"),\n      devices: [],\n      hiveProduction: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      address: \"\",\n      observations: \"\",\n      regdate: \"\",\n      isShow: true,\n      isModalDetailsVisible: false,\n      isModalUnassignVisible: false,\n      showsection: false,\n      toDeleteID: \"\",\n      toEditID: \"\",\n      toInterventionsID: \"\",\n      hasData: \"\",\n      ytitle: \"\",\n      title: \"\",\n      total: 0\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER,\n      el: \"#app\"\n    })\n  },\n  created() {\n    this.hasData = false;\n  },\n  mounted() {\n    this.getApiaryProduction();\n    this.getDevices();\n  },\n  methods: {\n    async getApiaryProduction() {\n      this.ytitle = \"WEIGHT\";\n      this.title = this.translate(\"charHarvestApiaryTitle\") + \" (kg)\";\n      this.max = 100;\n      this.loaded = false;\n      this.isShow = true;\n      this.hiveProduction = [];\n      await axios.get(\"https://bhsapi.duartecota.com/harvest/apiary/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let d = response.data.body;\n        if (d.length == 0) {\n          this.hasData = false;\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noDataForHive\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasData = true;\n          for (let i = 0; i < d.length; i++) {\n            let lastDate = new Date(d[i].registration_date.toLocaleString(\"sv-SE\", {\n              timeZone: \"Atlantic/Azores\"\n            }));\n            let tempArray = [];\n            let year = lastDate.getFullYear();\n            let month = lastDate.getMonth() + 1;\n            let day = lastDate.getDate();\n            let x = year + \"-\" + month + \"-\" + day;\n            tempArray.push(x);\n            let y = d[i].weight_registered;\n            tempArray.push(y);\n            this.hiveProduction.push(tempArray);\n          }\n          this.loaded = true;\n        }\n        this.isShow = false;\n        if (this.hasData) {\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"warnHiveProduction\"),\n            type: \"info\",\n            duration: 3000,\n            speed: 500\n          });\n          this.hiveProduction.forEach(element => {\n            this.total = this.total + element[1];\n          });\n        }\n      }).catch(() => {});\n    },\n    async getDevices() {\n      this.isShow = true;\n      this.devices = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/forapiary/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let devices = response.data.body;\n        if (devices.length == 0) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noHivesInApiary\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          for (let i = 0; i < devices.length; i++) {\n            this.devices.push({\n              _id: devices[i]._id,\n              state: devices[i].state,\n              lat: devices[i].lat,\n              lon: devices[i].lon\n            });\n          }\n        }\n        this.isShow = false;\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async evoHive(id) {\n      localStorage.setItem(\"hiveIDtoget\", id);\n      this.$router.push(\"productionhive\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    closeDetailsModal() {\n      this.isModalDetailsVisible = false;\n    },\n    closeUnassignModal() {\n      this.isModalUnassignVisible = false;\n    },\n    edit() {\n      this.isModalDetailsVisible = false;\n      localStorage.setItem(\"idtoedit\", this.toEditID);\n      this.$router.push(\"editapiary\");\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.address = response.data.body.address;\n        this.observations = response.data.body.observations;\n        this.regdate = response.data.body.registration_date;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async _delete() {\n      this.isModalDeleteVisible = false;\n      this.isShow = true;\n      await axios.delete(\"https://bhsapi.duartecota.com/apiary/\" + this.toDeleteID, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"deleteApiarySuccess\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getApiaries();\n        } else if (response.data.http == 202) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"deleteApiaryFail\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblems\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async detailsModal(id) {\n      this.toEditID = id;\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      this.toDeleteID = id;\n      this.isModalDeleteVisible = true;\n    },\n    interventions(id) {\n      localStorage.setItem(\"idtointerventions\", id);\n      this.$router.push(\"interventions\");\n    },\n    map(lat, lon) {\n      localStorage.setItem(\"lastroute\", this.$route.path);\n      localStorage.setItem(\"lat\", lat);\n      localStorage.setItem(\"lon\", lon);\n      this.$router.push(\"map\");\n    },\n    back() {\n      this.$router.push(\"production\");\n    },\n    loadDetails(id) {\n      localStorage.setItem(\"lastroute\", this.$route.path);\n      localStorage.setItem(\"hiveIDtoget\", id);\n      this.$router.push(\"/hivedetails\");\n    },\n    loadEditPage(id) {\n      localStorage.setItem(\"hiveidtoedit\", id);\n      this.$router.push(\"/editdevice\");\n    },\n    setToUnassign(id) {\n      localStorage.setItem(\"idtounassign\", id);\n      this.isModalUnassignVisible = true;\n    },\n    async unassign() {\n      this.isShow = true;\n      this.isModalUnassignVisible = false;\n      let option = localStorage.getItem(\"option\");\n      let id = localStorage.getItem(\"idtounassign\");\n      await axios.put(\"https://bhsapi.duartecota.com/device/unassign/\" + id + \"/\" + option, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200 || response.data.http == 201) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"unassignMessage\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.isShow = false;\n          this.getDevices();\n        } else {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","ModalDetails","ModalUnassign","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","components","data","lang","localStorage","getItem","green","require","red","devices","hiveProduction","img","message","type","msg","address","observations","regdate","isShow","isModalDetailsVisible","isModalUnassignVisible","showsection","toDeleteID","toEditID","toInterventionsID","hasData","ytitle","title","total","computed","token","level","_id","el","created","mounted","getApiaryProduction","getDevices","methods","translate","max","loaded","get","headers","Authorization","then","response","d","body","length","text","duration","speed","i","lastDate","Date","registration_date","toLocaleString","timeZone","tempArray","year","getFullYear","month","getMonth","day","getDate","x","push","y","weight_registered","forEach","element","catch","state","lat","lon","evoHive","id","setItem","$router","prop","closeDetailsModal","closeUnassignModal","edit","detail","_delete","isModalDeleteVisible","delete","http","getApiaries","detailsModal","deleteModal","interventions","map","$route","path","back","loadDetails","loadEditPage","setToUnassign","unassign","option","put"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Productionapiary.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"productionApiaryTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n      <section v-if=\"hasData\" class=\"mt-3\">\r\n        <h5>{{ translate(\"totalApiaryProduction\") }} {{ total }} kg</h5>\r\n      </section>\r\n    </section>\r\n\r\n    <section class=\"card p-2 mt-3\" v-if=\"hasData\" style=\"border-radius: 10px\">\r\n      <section class=\"h5 text-center\" id=\"title\" v-html=\"title\"></section>\r\n      <!--<Line v-if=\"loaded\" :data=\"data\" :options=\"options\" />-->\r\n      <line-chart\r\n        v-if=\"loaded\"\r\n        :data=\"hiveProduction\"\r\n        :min=\"0\"\r\n        :max=\"max\"\r\n        :download=\"true\"\r\n        width=\"100%\"\r\n        class=\"ch\"\r\n        :colors=\"['#a17f05']\"\r\n        :dataset=\"{ borderWidth: 2 }\"\r\n        loading=\"Loading...\"\r\n        xtitle=\"Date\"\r\n        :ytitle=\"ytitle\"\r\n      ></line-chart>\r\n    </section>\r\n\r\n    <section class=\"row mt-4\">\r\n      <section\r\n        class=\"col-12 col-md-6 col-lg-6\"\r\n        v-for=\"device of this.devices\"\r\n        :key=\"device._id\"\r\n      >\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h5 class=\"card-title text-center\">\r\n              {{ translate(\"lblCardHive\").toUpperCase() }}\r\n            </h5>\r\n            <hr />\r\n\r\n            <p class=\"text-center\" style=\"font-size: small\">\r\n              {{ device._id }}\r\n            </p>\r\n            <section v-if=\"!device.state\">\r\n              <p class=\"text-center\">\r\n                {{ translate(\"stateOffline\") }}\r\n                <img :src=\"red\" alt=\"...\" style=\"width: 5%\" />\r\n              </p>\r\n            </section>\r\n            <section v-else>\r\n              <p class=\"text-center\">\r\n                {{ translate(\"stateOnline\") }}\r\n                <img :src=\"green\" alt=\"...\" style=\"width: 5%\" />\r\n              </p>\r\n            </section>\r\n\r\n            <section class=\"text-center\">\r\n              <section class=\"row mt-2\">\r\n                <section class=\"col-4 mt-1\">\r\n                  <button\r\n                    data-bs-toggle=\"tooltip\"\r\n                    v-bind:title=\"translate('lblCardData')\"\r\n                    data-bs-placement=\"bottom\"\r\n                    data-bs-custom-class=\"custom-tooltip\"\r\n                    class=\"btn text-center bn_card\"\r\n                    @click=\"loadDetails(device._id)\"\r\n                  >\r\n                    <i class=\"fa-solid fa-chart-line\"></i>\r\n                  </button>\r\n                </section>\r\n                <section class=\"col-4 mt-1\">\r\n                  <button\r\n                    data-bs-toggle=\"tooltip\"\r\n                    v-bind:title=\"translate('lblMap')\"\r\n                    data-bs-placement=\"bottom\"\r\n                    data-bs-custom-class=\"custom-tooltip\"\r\n                    class=\"btn text-center bn_card\"\r\n                    @click=\"map(device.lat, device.lon)\"\r\n                  >\r\n                    <i class=\"fa-solid fa-map-location-dot\"></i>\r\n                  </button>\r\n                </section>\r\n                <section class=\"col-4 mt-1\">\r\n                  <button\r\n                    data-bs-toggle=\"tooltip\"\r\n                    v-bind:title=\"translate('lblToolTipAnalytics')\"\r\n                    data-bs-placement=\"bottom\"\r\n                    data-bs-custom-class=\"custom-tooltip\"\r\n                    class=\"btn text-center bn_card\"\r\n                    @click=\"evoHive(device._id)\"\r\n                  >\r\n                    <i class=\"fa-solid fa-chart-bar\"></i>\r\n                  </button>\r\n                </section>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n\r\n    <ModalDetails\r\n      v-show=\"isModalDetailsVisible\"\r\n      @close=\"closeDetailsModal\"\r\n      @edit=\"edit\"\r\n      :address=\"address\"\r\n      :observations=\"observations\"\r\n      :regdate=\"regdate\"\r\n    />\r\n    <ModalUnassign\r\n      v-show=\"isModalUnassignVisible\"\r\n      @close=\"closeUnassignModal\"\r\n      @unassign=\"unassign\"\r\n    />\r\n  </section>\r\n</template>\r\n  \r\n  <style scoped>\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 10px;\r\n  width: 100px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n  \r\n  <script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import ModalDetails from \"../components/ModalApiaryDetails.vue\";\r\n  import ModalUnassign from \"../components/ModalUnassign.vue\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"Apiaries\",\r\n    mixins: [en, pt],\r\n    components: {\r\n      ModalDetails,\r\n      ModalUnassign,\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        green: require(\"../assets/green.png\"),\r\n        red: require(\"../assets/red.png\"),\r\n        devices: [],\r\n        hiveProduction: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        address: \"\",\r\n        observations: \"\",\r\n        regdate: \"\",\r\n        isShow: true,\r\n        isModalDetailsVisible: false,\r\n        isModalUnassignVisible: false,\r\n        showsection: false,\r\n        toDeleteID: \"\",\r\n        toEditID: \"\",\r\n        toInterventionsID: \"\",\r\n        hasData: \"\",\r\n        ytitle: \"\",\r\n        title: \"\",\r\n        total: 0,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        el: \"#app\",\r\n      }),\r\n    },\r\n    created() {\r\n      this.hasData = false;\r\n    },\r\n    mounted() {\r\n      this.getApiaryProduction();\r\n      this.getDevices();\r\n    },\r\n    methods: {\r\n      async getApiaryProduction() {\r\n        this.ytitle = \"WEIGHT\";\r\n        this.title = this.translate(\"charHarvestApiaryTitle\") + \" (kg)\";\r\n        this.max = 100;\r\n        this.loaded = false;\r\n        this.isShow = true;\r\n        this.hiveProduction = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/harvest/apiary/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let d = response.data.body;\r\n            if (d.length == 0) {\r\n              this.hasData = false;\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noDataForHive\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasData = true;\r\n              for (let i = 0; i < d.length; i++) {\r\n                let lastDate = new Date(\r\n                  d[i].registration_date.toLocaleString(\"sv-SE\", {\r\n                    timeZone: \"Atlantic/Azores\",\r\n                  })\r\n                );\r\n                let tempArray = [];\r\n                let year = lastDate.getFullYear();\r\n                let month = lastDate.getMonth() + 1;\r\n                let day = lastDate.getDate();\r\n                let x = year + \"-\" + month + \"-\" + day;\r\n                tempArray.push(x);\r\n                let y = d[i].weight_registered;\r\n                tempArray.push(y);\r\n                this.hiveProduction.push(tempArray);\r\n              }\r\n              this.loaded = true;\r\n            }\r\n            this.isShow = false;\r\n            if (this.hasData) {\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"warnHiveProduction\"),\r\n                type: \"info\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.hiveProduction.forEach((element) => {\r\n                this.total = this.total + element[1];\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {});\r\n      },\r\n      async getDevices() {\r\n        this.isShow = true;\r\n        this.devices = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/forapiary/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let devices = response.data.body;\r\n            if (devices.length == 0) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noHivesInApiary\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              for (let i = 0; i < devices.length; i++) {\r\n                this.devices.push({\r\n                  _id: devices[i]._id,\r\n                  state: devices[i].state,\r\n                  lat: devices[i].lat,\r\n                  lon: devices[i].lon,\r\n                });\r\n              }\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n\r\n      async evoHive(id) {\r\n        localStorage.setItem(\"hiveIDtoget\", id);\r\n        this.$router.push(\"productionhive\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeUnassignModal() {\r\n        this.isModalUnassignVisible = false;\r\n      },\r\n      edit() {\r\n        this.isModalDetailsVisible = false;\r\n        localStorage.setItem(\"idtoedit\", this.toEditID);\r\n        this.$router.push(\"editapiary\");\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.regdate = response.data.body.registration_date;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async _delete() {\r\n        this.isModalDeleteVisible = false;\r\n        this.isShow = true;\r\n        await axios\r\n          .delete(\"https://bhsapi.duartecota.com/apiary/\" + this.toDeleteID, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"deleteApiarySuccess\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getApiaries();\r\n            } else if (response.data.http == 202) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"deleteApiaryFail\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblems\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        this.toEditID = id;\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.toDeleteID = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      interventions(id) {\r\n        localStorage.setItem(\"idtointerventions\", id);\r\n        this.$router.push(\"interventions\");\r\n      },\r\n      map(lat, lon) {\r\n        localStorage.setItem(\"lastroute\", this.$route.path);\r\n        localStorage.setItem(\"lat\", lat);\r\n        localStorage.setItem(\"lon\", lon);\r\n        this.$router.push(\"map\");\r\n      },\r\n      back() {\r\n        this.$router.push(\"production\");\r\n      },\r\n      loadDetails(id) {\r\n        localStorage.setItem(\"lastroute\", this.$route.path);\r\n        localStorage.setItem(\"hiveIDtoget\", id);\r\n        this.$router.push(\"/hivedetails\");\r\n      },\r\n      loadEditPage(id) {\r\n        localStorage.setItem(\"hiveidtoedit\", id);\r\n        this.$router.push(\"/editdevice\");\r\n      },\r\n      setToUnassign(id) {\r\n        localStorage.setItem(\"idtounassign\", id);\r\n        this.isModalUnassignVisible = true;\r\n      },\r\n      async unassign() {\r\n        this.isShow = true;\r\n        this.isModalUnassignVisible = false;\r\n        let option = localStorage.getItem(\"option\");\r\n        let id = localStorage.getItem(\"idtounassign\");\r\n        await axios\r\n          .put(\r\n            \"https://bhsapi.duartecota.com/device/unassign/\" + id + \"/\" + option,\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.data.http == 200 || response.data.http == 201) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"unassignMessage\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.isShow = false;\r\n              this.getDevices();\r\n            } else {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n    },\r\n  };\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}