{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new intervention\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      attrs: [{\n        key: \"today\",\n        dates: new Date(),\n        highlight: {\n          color: \"indigo\",\n          fillMode: \"outline\"\n        }\n      }],\n      range: {\n        start: \"\",\n        end: \"\"\n      },\n      form: {\n        description: \"\",\n        observations: \"\",\n        type: \"\"\n      },\n      isShow: false,\n      validDates: true,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  methods: {\n    padTo2Digits(num) {\n      return String(num).padStart(2, \"0\");\n    },\n    async send() {\n      this.isShow = true;\n      if (this.checkForm() == true && this.validDates == true) {\n        let startTime = this.padTo2Digits(this.range.start.getHours()) + \":\" + this.padTo2Digits(this.range.start.getMinutes());\n        console.log(startTime);\n        //format end time\n        let endTime = this.padTo2Digits(this.range.end.getHours()) + \":\" + this.padTo2Digits(this.range.end.getMinutes());\n        console.log(endTime);\n        let postData = {\n          apiary: localStorage.getItem(\"idtointerventions\"),\n          startDate: this.range.start,\n          endDate: this.range.end,\n          startTime: startTime,\n          endTime: endTime,\n          type: this.form.type,\n          description: this.form.description,\n          observations: this.form.observations\n        };\n        await axios.post(\"https://bhsapi.duartecota.com/intervention\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"mesNewInterventionSuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n            this.$router.replace(\"interventions\");\n          } else {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifErrorTitle\"),\n              text: this.translate(\"mesProblem\"),\n              type: \"error\",\n              duration: 3000,\n              speed: 500\n            });\n          }\n        }).catch(error => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFieldsIntervention\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n      //postData.append(\"lang\", this.lang); //enviar se necess√°rio para e-mail\n    },\n\n    cleanForm() {\n      this.form.description = \"\", this.form.observations = \"\", this.form.type = \"\";\n      this.range.start = new Date(), this.range.end = new Date(), this.isShow = false;\n    },\n    back() {\n      this.$router.replace(\"interventions\");\n    },\n    checkForm() {\n      this.isShow = false;\n      if (this.form.description == \"\" || this.form.type == \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    dayClicked() {\n      let date = new Date();\n      let sd = new Date(this.range.start);\n      let ed = new Date(this.range.end);\n      let dateConv = this.padTo2Digits(date.toLocaleDateString(\"sv-SE\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n      }));\n      let sdConv = this.padTo2Digits(sd.toLocaleDateString(\"sv-SE\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n      }));\n      let edConv = this.padTo2Digits(ed.toLocaleDateString(\"sv-SE\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n      }));\n      let dateFinal = new Date(dateConv);\n      dateFinal.setHours(0, 0, 0, 0);\n      let sdFinal = new Date(sdConv);\n      sdFinal.setHours(0, 0, 0, 0);\n      let edFinal = new Date(edConv);\n      edFinal.setHours(0, 0, 0, 0);\n      console.log(sdFinal.getTime(), edFinal.getTime());\n      if (sdFinal.getTime() < dateFinal.getTime() || edFinal.getTime() < dateFinal.getTime()) {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFieldsIntervention\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n        this.range.start = \"\";\n        this.range.end = \"\";\n        this.validDates = false;\n      } else this.validDates = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","attrs","key","dates","Date","highlight","color","fillMode","range","start","end","form","description","observations","type","isShow","validDates","computed","token","level","_id","methods","padTo2Digits","num","String","padStart","send","checkForm","startTime","getHours","getMinutes","console","log","endTime","postData","apiary","startDate","endDate","post","headers","Authorization","then","response","http","title","translate","text","duration","speed","$router","replace","catch","error","cleanForm","back","prop","dayClicked","date","sd","ed","dateConv","toLocaleDateString","year","month","day","sdConv","edConv","dateFinal","setHours","sdFinal","edFinal","getTime"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newintervention.vue"],"sourcesContent":["/*\r\nMEIW - Programa√ß√£o Web Avan√ßada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscri√ß√£o\r\n*/\r\n\r\n<template>\r\n  <!--<section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">-->\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">\r\n      {{ translate(\"formNewInterventionTitle\") }}\r\n    </h2>\r\n    <section class=\"line-1\"></section>\r\n    <form class=\"form-signin\" v-on:submit.prevent=\"send\">\r\n      <section>\r\n        <button type=\"submit\" class=\"btn mt-4 me-3 my-button\">\r\n          <section v-if=\"!isShow\">\r\n            {{ translate(\"btnSubmit\") }}\r\n          </section>\r\n          <section\r\n            v-else\r\n            class=\"spinner-border spinner-border-sm\"\r\n            role=\"status\"\r\n          ></section>\r\n        </button>\r\n        <button\r\n          @click=\"cleanForm\"\r\n          type=\"button\"\r\n          class=\"btn mt-4 me-3 my-button\"\r\n        >\r\n          {{ translate(\"btnClean\") }}\r\n        </button>\r\n        <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n          {{ translate(\"btnBack\") }}\r\n        </button>\r\n      </section>\r\n      <section class=\"row mt-4\">\r\n        <section class=\"col-md-6\">\r\n          <label for=\"bdate\" class=\"form-label\">{{\r\n            translate(\"formNewInterventionDate\")\r\n          }}</label>\r\n          <v-date-picker\r\n            :attributes=\"attrs\"\r\n            :locale=\"lang\"\r\n            is-expanded\r\n            v-model=\"range\"\r\n            is-range\r\n            is24hr\r\n            mode=\"datetime\"\r\n            @dayclick=\"dayClicked\"\r\n          />\r\n        </section>\r\n        <section class=\"col-md-6\">\r\n          <label for=\"observations\" class=\"form-label\">{{\r\n            translate(\"formNewInterventionDescription\")\r\n          }}</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            v-model=\"form.description\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            style=\"font-size: small\"\r\n          />\r\n          <label for=\"observations\" class=\"form-label\">{{\r\n            translate(\"formNewApiaryObservations\")\r\n          }}</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            v-model=\"form.observations\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            style=\"font-size: small\"\r\n          />\r\n          <label for=\"type\" class=\"form-label\">{{\r\n            translate(\"selectLbl\")\r\n          }}</label>\r\n\r\n          <section class=\"my_radios\">\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"1\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault1\"\r\n                style=\"color: green\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType1\") }}</strong>\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"2\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault2\"\r\n                style=\"color: orange\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType2\") }}</strong>\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                v-model=\"form.type\"\r\n                type=\"radio\"\r\n                value=\"3\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                for=\"flexRadioDefault3\"\r\n                style=\"color: red\"\r\n              >\r\n                <strong>{{ translate(\"formNewInterventionType3\") }}</strong>\r\n              </label>\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </form>\r\n\r\n    <section class=\"spacer\"></section>\r\n  </section>\r\n  <!--</section>>-->\r\n</template>\r\n\r\n<style scoped>\r\n.my_radios {\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n}\r\n\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new intervention\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        attrs: [\r\n          {\r\n            key: \"today\",\r\n            dates: new Date(),\r\n            highlight: {\r\n              color: \"indigo\",\r\n              fillMode: \"outline\",\r\n            },\r\n          },\r\n        ],\r\n        range: {\r\n          start: \"\",\r\n          end: \"\",\r\n        },\r\n        form: {\r\n          description: \"\",\r\n          observations: \"\",\r\n          type: \"\",\r\n        },\r\n        isShow: false,\r\n        validDates: true,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      padTo2Digits(num) {\r\n        return String(num).padStart(2, \"0\");\r\n      },\r\n      async send() {\r\n        this.isShow = true;\r\n        if (this.checkForm() == true && this.validDates == true) {\r\n          let startTime =\r\n            this.padTo2Digits(this.range.start.getHours()) +\r\n            \":\" +\r\n            this.padTo2Digits(this.range.start.getMinutes());\r\n          console.log(startTime);\r\n          //format end time\r\n          let endTime =\r\n            this.padTo2Digits(this.range.end.getHours()) +\r\n            \":\" +\r\n            this.padTo2Digits(this.range.end.getMinutes());\r\n          console.log(endTime);\r\n          let postData = {\r\n            apiary: localStorage.getItem(\"idtointerventions\"),\r\n            startDate: this.range.start,\r\n            endDate: this.range.end,\r\n            startTime: startTime,\r\n            endTime: endTime,\r\n            type: this.form.type,\r\n            description: this.form.description,\r\n            observations: this.form.observations,\r\n          };\r\n          await axios\r\n            .post(\"https://bhsapi.duartecota.com/intervention\", postData, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.http == 201) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"mesNewInterventionSuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n                this.$router.replace(\"interventions\");\r\n              } else {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifErrorTitle\"),\r\n                  text: this.translate(\"mesProblem\"),\r\n                  type: \"error\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesFieldsIntervention\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n        //postData.append(\"lang\", this.lang); //enviar se necess√°rio para e-mail\r\n      },\r\n      cleanForm() {\r\n        (this.form.description = \"\"),\r\n          (this.form.observations = \"\"),\r\n          (this.form.type = \"\");\r\n        (this.range.start = new Date()),\r\n          (this.range.end = new Date()),\r\n          (this.isShow = false);\r\n      },\r\n      back() {\r\n        this.$router.replace(\"interventions\");\r\n      },\r\n      checkForm() {\r\n        this.isShow = false;\r\n        if (this.form.description == \"\" || this.form.type == \"\") {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      dayClicked() {\r\n        let date = new Date();\r\n        let sd = new Date(this.range.start);\r\n        let ed = new Date(this.range.end);\r\n        let dateConv = this.padTo2Digits(\r\n          date.toLocaleDateString(\"sv-SE\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n          })\r\n        );\r\n        let sdConv = this.padTo2Digits(\r\n          sd.toLocaleDateString(\"sv-SE\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n          })\r\n        );\r\n        let edConv = this.padTo2Digits(\r\n          ed.toLocaleDateString(\"sv-SE\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n          })\r\n        );\r\n        let dateFinal = new Date(dateConv);\r\n        dateFinal.setHours(0, 0, 0, 0);\r\n        let sdFinal = new Date(sdConv);\r\n        sdFinal.setHours(0, 0, 0, 0);\r\n        let edFinal = new Date(edConv);\r\n        edFinal.setHours(0, 0, 0, 0);\r\n        console.log(sdFinal.getTime(), edFinal.getTime());\r\n        if (\r\n          sdFinal.getTime() < dateFinal.getTime() ||\r\n          edFinal.getTime() < dateFinal.getTime()\r\n        ) {\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesFieldsIntervention\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n          this.range.start = \"\";\r\n          this.range.end = \"\";\r\n          this.validDates = false;\r\n        } else this.validDates = true;\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}