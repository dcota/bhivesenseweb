{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*import {\r\n            Chart as ChartJS,\r\n            CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Title,\r\n            Tooltip,\r\n            Legend,\r\n          } from \"chart.js\";\r\n          ChartJS.register(\r\n            CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Title,\r\n            Tooltip,\r\n            Legend\r\n          );*/\n//import { Line } from \"vue-chartjs\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"Hives\",\n  mixins: [en, pt],\n  /*components: {\r\n              Line,\r\n            },*/\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      chartData: [],\n      /*data: {\r\n                  labels: [],\r\n                  datasets: [\r\n                    {\r\n                      label: \"Temperature(deg. Celsius)\",\r\n                      backgroundColor: \"#f87979\",\r\n                      data: [],\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  legend: {\r\n                    position: \"bottom\",\r\n                  },\r\n                  plugins: {\r\n                    datalabels: {},\r\n                  },\r\n                  scales: {\r\n                    yAxes: [\r\n                      {\r\n                        ticks: {\r\n                          min: 0,\r\n                          max: 300,\r\n                          stepSize: 100,\r\n                          reverse: false,\r\n                          beginAtZero: true,\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                },*/\n      devices: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      latestData: {\n        to: \"\",\n        ti: \"\",\n        hi: \"\",\n        ho: \"\",\n        s: \"\",\n        w: \"\",\n        date: \"\",\n        hours: \"\",\n        minutes: \"\"\n      },\n      isShow: true,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      showsection: false,\n      toDeleteID: \"\",\n      toEditID: \"\",\n      toInterventionsID: \"\",\n      loaded: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n      //el: \"#app\",\n    })\n  },\n\n  async mounted() {\n    this.loaded = false;\n    this.getLatest();\n    this.getDay();\n  },\n  methods: {\n    async getLatest() {\n      this.isShow = true;\n      this.devices = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/latest/\" + localStorage.getItem(\"hiveIDtoget\") + \"/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let devices = response.data.body;\n        if (devices.length == 0) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noHivesInApiary\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.latestData.ti = devices[0].data.ti;\n          this.latestData.hi = devices[0].data.hi;\n          this.latestData.to = devices[0].data.to;\n          this.latestData.ho = devices[0].data.ho;\n          this.latestData.s = devices[0].data.s;\n          this.latestData.w = devices[0].data.w;\n          let lastDate = new Date(devices[0].data.date.toLocaleString(\"sv-SE\", {\n            timeZone: \"Atlantic/Azores\"\n          }));\n          let sdConv = this.padTo2Digits(lastDate.toLocaleDateString(\"sv-SE\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\"\n          }));\n          this.latestData.date = sdConv;\n          this.latestData.hours = lastDate.getHours();\n          this.latestData.minutes = lastDate.getMinutes();\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    async getDay() {\n      this.loaded = false;\n      this.isShow = true;\n      this.chartData = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/\" + localStorage.getItem(\"hiveIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let d = response.data.body.data;\n        if (d.length == 0) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noHivesInApiary\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          let temp = [];\n          for (let i = 0; i < d.length; i++) {\n            let today = new Date();\n            let lastDate = new Date(d[i].date.toLocaleString(\"sv-SE\", {\n              timeZone: \"Atlantic/Azores\"\n            }));\n            if (today.getDay() == lastDate.getDay() && today.getMonth() == lastDate.getMonth()) {\n              let tempArray = [];\n              let x = lastDate.getFullYear() + \"-\" + (lastDate.getMonth() + 1) + \"-\" + lastDate.getDate();\n              tempArray.push(x);\n              let y = d[i].ti;\n              tempArray.push(y);\n              this.data.push(tempArray);\n              /*let time =\r\n                                                                                                                                                                                                  this.padTo2Digits(lastDate.getHours()) +\r\n                                                                                                                                                                                                  \":\" +\r\n                                                                                                                                                                                                  this.padTo2Digits(lastDate.getMinutes());*/\n              //this.data.labels.push(i.toString());\n              //temp.push(parseInt(d[i].ti));\n              //let instance = this.data.datasets[0].data;\n              //instance.push(20);\n            }\n          }\n          //this.data.datasets[0].data = temp;\n          //console.table(this.data.labels);\n          //console.table(this.data.datasets[0].data);\n          this.loaded = true;\n          console.table(this.data);\n\n          /*let lastDate = new Date(\r\n                                                                                                                                                                                                                                                                                                                    devices[0].data.date.toLocaleString(\"sv-SE\", {\r\n                                                                                                                                                                                                                                                                                                                      timeZone: \"Atlantic/Azores\",\r\n                                                                                                                                                                                                                                                                                                                    })\r\n                                                                                                                                                                                                                                                                                                                  );\r\n                                                                                                                                                                                                                                                                                                                  let sdConv = this.padTo2Digits(\r\n                                                                                                                                                                                                                                                                                                                    lastDate.toLocaleDateString(\"sv-SE\", {\r\n                                                                                                                                                                                                                                                                                                                      year: \"numeric\",\r\n                                                                                                                                                                                                                                                                                                                      month: \"2-digit\",\r\n                                                                                                                                                                                                                                                                                                                      day: \"2-digit\",\r\n                                                                                                                                                                                                                                                                                                                    })\r\n                                                                                                                                                                                                                                                                                                                  );\r\n                                                                                                                                                                                                                                                                                                                  this.latestData.date = sdConv;\r\n                                                                                                                                                                                                                                                                                                                  this.latestData.hours = lastDate.getHours();\r\n                                                                                                                                                                                                                                                                                                                  this.latestData.minutes = lastDate.getMinutes();*/\n        }\n\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    padTo2Digits(num) {\n      return String(num).padStart(2, \"0\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    closeDetailsModal() {\n      this.isModalDetailsVisible = false;\n    },\n    closeDeleteModal() {\n      this.isModalDeleteVisible = false;\n    },\n    edit() {\n      this.isModalDetailsVisible = false;\n      localStorage.setItem(\"idtoedit\", this.toEditID);\n      this.$router.push(\"editapiary\");\n    },\n    async detail(id) {\n      this.isShow = true;\n      this.message.type = \"\";\n      this.message.msg = \"\";\n      //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.address = response.data.body.address;\n        this.observations = response.data.body.observations;\n        this.regdate = response.data.body.registration_date;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        this.message.msg = \"Ocorreu um problema\";\n        this.message.type = \"warning\";\n        this.isShow = false;\n        return false;\n      });\n    },\n    async _delete() {\n      this.isModalDeleteVisible = false;\n      this.isShow = true;\n      await axios.delete(\"https://bhsapi.duartecota.com/apiary/\" + this.toDeleteID, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"deleteApiarySuccess\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n          this.getApiaries();\n        } else if (response.data.http == 202) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"deleteApiaryFail\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblems\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async detailsModal(id) {\n      this.toEditID = id;\n      await this.detail(id);\n      this.isModalDetailsVisible = true;\n    },\n    async deleteModal(id) {\n      this.toDeleteID = id;\n      this.isModalDeleteVisible = true;\n    },\n    interventions(id) {\n      localStorage.setItem(\"idtointerventions\", id);\n      this.$router.push(\"interventions\");\n    },\n    getApiaryDevices(id) {\n      alert(id);\n    },\n    map() {\n      this.$router.push(\"map\");\n    },\n    back() {\n      this.$router.push(\"hives\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","chartData","devices","img","require","message","type","msg","latestData","to","ti","hi","ho","s","w","date","hours","minutes","isShow","isModalDetailsVisible","isModalDeleteVisible","showsection","toDeleteID","toEditID","toInterventionsID","loaded","computed","token","level","_id","mounted","getLatest","getDay","methods","get","headers","Authorization","then","response","body","length","title","translate","text","duration","speed","lastDate","Date","toLocaleString","timeZone","sdConv","padTo2Digits","toLocaleDateString","year","month","day","getHours","getMinutes","catch","error","console","log","d","temp","i","today","getMonth","tempArray","x","getFullYear","getDate","push","y","table","num","String","padStart","prop","closeDetailsModal","closeDeleteModal","edit","setItem","$router","detail","id","address","observations","regdate","registration_date","_delete","delete","http","getApiaries","detailsModal","deleteModal","interventions","getApiaryDevices","alert","map","back"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Hivedetails.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"hiveDetailsTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button @click=\"map\" type=\"button\" class=\"btn mt-4 me-3 my-button\">\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fa-solid fa-map-location-dot\"></i>\r\n          {{ translate(\"lblBtnMap\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n      <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n    </section>\r\n    <section class=\"mt-3\" v-bind=\"latestData\">\r\n      <h5>\r\n        {{ translate(\"lblLastData\") }} {{ latestData.date }}\r\n        {{ translate(\"lblAt\") }} {{ latestData.hours }}h{{ latestData.minutes }}\r\n      </h5>\r\n    </section>\r\n    <section class=\"row mt-4\" v-bind=\"latestData\">\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-temperature-high\" aria-hidden=\"true\"\r\n                  ><span> T(in)</span></i\r\n                ></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.ti }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-droplet\"><span>% H(in)</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.hi }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-temperature-high\" aria-hidden=\"true\"\r\n                  ><span> T(out)</span></i\r\n                ></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.to }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-droplet\"><span>% H(out)</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.ho }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-weight-scale\"></i><span> Kg</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.w }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\">\r\n        <section\r\n          class=\"card mb-5 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-music\"><span> dB</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.s }}</section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n    <section class=\"card p-2\">\r\n      <!--<Line v-if=\"loaded\" :data=\"data\" :options=\"options\" />-->\r\n      <area-chart\r\n        v-if=\"loaded\"\r\n        :data=\"data\"\r\n        :min=\"0\"\r\n        :max=\"50\"\r\n        :download=\"true\"\r\n        width=\"100%\"\r\n        height=\"500px\"\r\n        :colors=\"['#a17f05', '#666']\"\r\n        :dataset=\"{ borderWidth: 2 }\"\r\n        loading=\"Loading...\"\r\n        xtitle=\"Time\"\r\n        ytitle=\"Temperature (Deg. Celsius)\"\r\n      ></area-chart>\r\n    </section>\r\n    <!--<section class=\"spacer\"></section>-->\r\n  </section>\r\n</template>\r\n    \r\n    <style scoped>\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n    \r\n    <script>\r\n  /*import {\r\n              Chart as ChartJS,\r\n              CategoryScale,\r\n              LinearScale,\r\n              PointElement,\r\n              LineElement,\r\n              Title,\r\n              Tooltip,\r\n              Legend,\r\n            } from \"chart.js\";\r\n            ChartJS.register(\r\n              CategoryScale,\r\n              LinearScale,\r\n              PointElement,\r\n              LineElement,\r\n              Title,\r\n              Tooltip,\r\n              Legend\r\n            );*/\r\n  //import { Line } from \"vue-chartjs\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"Hives\",\r\n    mixins: [en, pt],\r\n    /*components: {\r\n                Line,\r\n              },*/\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        chartData: [],\r\n        /*data: {\r\n                    labels: [],\r\n                    datasets: [\r\n                      {\r\n                        label: \"Temperature(deg. Celsius)\",\r\n                        backgroundColor: \"#f87979\",\r\n                        data: [],\r\n                      },\r\n                    ],\r\n                  },\r\n                  options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                      position: \"bottom\",\r\n                    },\r\n                    plugins: {\r\n                      datalabels: {},\r\n                    },\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                          ticks: {\r\n                            min: 0,\r\n                            max: 300,\r\n                            stepSize: 100,\r\n                            reverse: false,\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                    },\r\n                  },*/\r\n        devices: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        latestData: {\r\n          to: \"\",\r\n          ti: \"\",\r\n          hi: \"\",\r\n          ho: \"\",\r\n          s: \"\",\r\n          w: \"\",\r\n          date: \"\",\r\n          hours: \"\",\r\n          minutes: \"\",\r\n        },\r\n        isShow: true,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        showsection: false,\r\n        toDeleteID: \"\",\r\n        toEditID: \"\",\r\n        toInterventionsID: \"\",\r\n        loaded: false,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        //el: \"#app\",\r\n      }),\r\n    },\r\n    async mounted() {\r\n      this.loaded = false;\r\n      this.getLatest();\r\n      this.getDay();\r\n    },\r\n    methods: {\r\n      async getLatest() {\r\n        this.isShow = true;\r\n        this.devices = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/latest/\" +\r\n              localStorage.getItem(\"hiveIDtoget\") +\r\n              \"/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let devices = response.data.body;\r\n            if (devices.length == 0) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noHivesInApiary\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.latestData.ti = devices[0].data.ti;\r\n              this.latestData.hi = devices[0].data.hi;\r\n              this.latestData.to = devices[0].data.to;\r\n              this.latestData.ho = devices[0].data.ho;\r\n              this.latestData.s = devices[0].data.s;\r\n              this.latestData.w = devices[0].data.w;\r\n              let lastDate = new Date(\r\n                devices[0].data.date.toLocaleString(\"sv-SE\", {\r\n                  timeZone: \"Atlantic/Azores\",\r\n                })\r\n              );\r\n              let sdConv = this.padTo2Digits(\r\n                lastDate.toLocaleDateString(\"sv-SE\", {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n                })\r\n              );\r\n              this.latestData.date = sdConv;\r\n              this.latestData.hours = lastDate.getHours();\r\n              this.latestData.minutes = lastDate.getMinutes();\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      async getDay() {\r\n        this.loaded = false;\r\n        this.isShow = true;\r\n        this.chartData = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              localStorage.getItem(\"hiveIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let d = response.data.body.data;\r\n            if (d.length == 0) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noHivesInApiary\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              let temp = [];\r\n              for (let i = 0; i < d.length; i++) {\r\n                let today = new Date();\r\n                let lastDate = new Date(\r\n                  d[i].date.toLocaleString(\"sv-SE\", {\r\n                    timeZone: \"Atlantic/Azores\",\r\n                  })\r\n                );\r\n                if (\r\n                  today.getDay() == lastDate.getDay() &&\r\n                  today.getMonth() == lastDate.getMonth()\r\n                ) {\r\n                  let tempArray = [];\r\n                  let x =\r\n                    lastDate.getFullYear() +\r\n                    \"-\" +\r\n                    (lastDate.getMonth() + 1) +\r\n                    \"-\" +\r\n                    lastDate.getDate();\r\n                  tempArray.push(x);\r\n                  let y = d[i].ti;\r\n                  tempArray.push(y);\r\n                  this.data.push(tempArray);\r\n                  /*let time =\r\n                                                                                                                                                                                                      this.padTo2Digits(lastDate.getHours()) +\r\n                                                                                                                                                                                                      \":\" +\r\n                                                                                                                                                                                                      this.padTo2Digits(lastDate.getMinutes());*/\r\n                  //this.data.labels.push(i.toString());\r\n                  //temp.push(parseInt(d[i].ti));\r\n                  //let instance = this.data.datasets[0].data;\r\n                  //instance.push(20);\r\n                }\r\n              }\r\n              //this.data.datasets[0].data = temp;\r\n              //console.table(this.data.labels);\r\n              //console.table(this.data.datasets[0].data);\r\n              this.loaded = true;\r\n              console.table(this.data);\r\n\r\n              /*let lastDate = new Date(\r\n                                                                                                                                                                                                                                                                                                                        devices[0].data.date.toLocaleString(\"sv-SE\", {\r\n                                                                                                                                                                                                                                                                                                                          timeZone: \"Atlantic/Azores\",\r\n                                                                                                                                                                                                                                                                                                                        })\r\n                                                                                                                                                                                                                                                                                                                      );\r\n                                                                                                                                                                                                                                                                                                                      let sdConv = this.padTo2Digits(\r\n                                                                                                                                                                                                                                                                                                                        lastDate.toLocaleDateString(\"sv-SE\", {\r\n                                                                                                                                                                                                                                                                                                                          year: \"numeric\",\r\n                                                                                                                                                                                                                                                                                                                          month: \"2-digit\",\r\n                                                                                                                                                                                                                                                                                                                          day: \"2-digit\",\r\n                                                                                                                                                                                                                                                                                                                        })\r\n                                                                                                                                                                                                                                                                                                                      );\r\n                                                                                                                                                                                                                                                                                                                      this.latestData.date = sdConv;\r\n                                                                                                                                                                                                                                                                                                                      this.latestData.hours = lastDate.getHours();\r\n                                                                                                                                                                                                                                                                                                                      this.latestData.minutes = lastDate.getMinutes();*/\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      padTo2Digits(num) {\r\n        return String(num).padStart(2, \"0\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModal() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      edit() {\r\n        this.isModalDetailsVisible = false;\r\n        localStorage.setItem(\"idtoedit\", this.toEditID);\r\n        this.$router.push(\"editapiary\");\r\n      },\r\n      async detail(id) {\r\n        this.isShow = true;\r\n        this.message.type = \"\";\r\n        this.message.msg = \"\";\r\n        //(this.isShow = true((this.message.type = \"\"))), (this.message.msg = \"\");\r\n        await axios\r\n          .get(\"https://bhsapi.duartecota.com/apiary/one/\" + id, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.regdate = response.data.body.registration_date;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            this.message.msg = \"Ocorreu um problema\";\r\n            this.message.type = \"warning\";\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      async _delete() {\r\n        this.isModalDeleteVisible = false;\r\n        this.isShow = true;\r\n        await axios\r\n          .delete(\"https://bhsapi.duartecota.com/apiary/\" + this.toDeleteID, {\r\n            headers: {\r\n              Authorization: this.token,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"deleteApiarySuccess\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n              this.getApiaries();\r\n            } else if (response.data.http == 202) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"deleteApiaryFail\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblems\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      async detailsModal(id) {\r\n        this.toEditID = id;\r\n        await this.detail(id);\r\n        this.isModalDetailsVisible = true;\r\n      },\r\n      async deleteModal(id) {\r\n        this.toDeleteID = id;\r\n        this.isModalDeleteVisible = true;\r\n      },\r\n      interventions(id) {\r\n        localStorage.setItem(\"idtointerventions\", id);\r\n        this.$router.push(\"interventions\");\r\n      },\r\n      getApiaryDevices(id) {\r\n        alert(id);\r\n      },\r\n      map() {\r\n        this.$router.push(\"map\");\r\n      },\r\n      back() {\r\n        this.$router.push(\"hives\");\r\n      },\r\n    },\r\n  };\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}