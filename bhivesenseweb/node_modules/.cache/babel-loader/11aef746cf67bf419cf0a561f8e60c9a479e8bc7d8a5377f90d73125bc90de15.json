{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-26bca5dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container my-body\"\n};\nconst _hoisted_2 = {\n  class: \"my-text-color\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"line-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-arrow-left me-1 act-btn\",\n  \"aria-hidden\": \"true\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_6 = {\n  id: \"contet\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"siteNotice\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  id: \"firstHeading\",\n  class: \"firstHeading\"\n}, \"Apiary\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  id: \"bodyContent\"\n};\nconst _hoisted_10 = {\n  class: \"text-center\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"spinner-border mt-4\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")], -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"mb-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_InfoWindow = _resolveComponent(\"InfoWindow\");\n  const _component_Marker = _resolveComponent(\"Marker\");\n  const _component_GoogleMap = _resolveComponent(\"GoogleMap\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.translate(\"devicesAllTitle\")), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"section\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.back()),\n    type: \"button\",\n    class: \"btn mt-4 my-button\"\n  }, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString(_ctx.translate(\"btnBack\")), 1 /* TEXT */)])]), _ctx.showMap ? (_openBlock(), _createElementBlock(\"section\", _hoisted_5, [_createVNode(_component_GoogleMap, {\n    \"api-key\": \"AIzaSyBS5cccM97lkMCpieTfkCKC4oiyY-r5vOI\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"calc(100vh - 200px)\"\n    },\n    center: _ctx.center,\n    zoom: 18\n  }, {\n    default: _withCtx(() => [_createVNode(_component_Marker, {\n      options: _ctx.markerOptions\n    }, {\n      default: _withCtx(() => [_createVNode(_component_InfoWindow, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, [_createElementVNode(\"b\", null, _toDisplayString(_ctx.translate(\"modalApiaryLocation\")) + _toDisplayString(_ctx.location), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_createElementVNode(\"b\", null, _toDisplayString(_ctx.translate(\"modalApiaryAddress\")) + _toDisplayString(_ctx.address), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_createElementVNode(\"b\", null, _toDisplayString(_ctx.translate(\"modalApiaryObservations\")) + _toDisplayString(_ctx.observations), 1 /* TEXT */)])])])]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"options\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"section\", _hoisted_10, [_ctx.isShow ? (_openBlock(), _createElementBlock(\"section\", _hoisted_11, [_hoisted_12, _createElementVNode(\"section\", _hoisted_13, _toDisplayString(_ctx.translate(\"spinnerTxt\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;;EACWA,KAAK,EAAC;AAAmB;;EAC5BA,KAAK,EAAC;AAAe;gEACzBC,oBAAkC;EAAzBD,KAAK,EAAC;AAAQ;gEAGnBC,oBAAiE;EAA9DD,KAAK,EAAC,gCAAgC;EAAC,aAAW,EAAC;;;;EAIjDA,KAAK,EAAC;;;EASFE,EAAE,EAAC;AAAQ;gEACdD,oBAA2B;EAAtBC,EAAE,EAAC;AAAY;gEACpBD,oBAAsD;EAAlDC,EAAE,EAAC,cAAc;EAACF,KAAK,EAAC;GAAe,QAAM;;EAC5CE,EAAE,EAAC;AAAa;;EAoBtBF,KAAK,EAAC;AAAa;;;EACHA,KAAK,EAAC;;iEAC3BC,oBAEU;EAFDD,KAAK,EAAC,qBAAqB;EAACG,IAAI,EAAC;iBACxCF,oBAA+C;EAAzCD,KAAK,EAAC;AAAiB,GAAC,YAAU;;EAEjCA,KAAK,EAAC;AAAM;;;;;uBA9C3BI,oBAiDU,WAjDVC,UAiDU,GAhDRJ,oBAAiE,MAAjEK,UAAiE,mBAApCC,cAAS,qCACtCC,UAAkC,EAClCP,oBAKU,kBAJRA,oBAGS;IAHAQ,OAAK,sCAAEF,SAAI;IAAIG,IAAI,EAAC,QAAQ;IAACV,KAAK,EAAC;MAC1CW,UAAiE,sBACjE,oBAAGJ,cAAS,iCAGYA,YAAO,kBAAnCH,oBA8BU,WA9BVQ,UA8BU,GA7BRC,aA4BYC;IA3BV,SAAO,EAAC,yCAAyC;IACjDC,KAAgD,EAAhD;MAAA;MAAA;IAAA,CAAgD;IAC/CC,MAAM,EAAET,WAAM;IACdU,IAAI,EAAE;;sBAEP,MAqBS,CArBTJ,aAqBSK;MArBAC,OAAO,EAAEZ;IAAa;wBAC7B,MAmBa,CAnBbM,aAmBaO;0BAlBX,MAiBM,CAjBNnB,oBAiBM,OAjBNoB,UAiBM,GAhBJC,UAA2B,EAC3BC,UAAsD,EACtDtB,oBAaM,OAbNuB,UAaM,GAZJvB,oBAEI,YADFA,oBAA2D,4BAArDM,cAAS,4CAA6BA,aAAQ,oBAEtDN,oBAEI,YADFA,oBAAyD,4BAAnDM,cAAS,2CAA4BA,YAAO,oBAEpDN,oBAKI,YAJFA,oBAGC,4BAFKM,cAAS,gDACRA,iBAAY;;;;;;;;wEAUjCN,oBAOU,WAPVwB,WAOU,GANOlB,WAAM,kBAArBH,oBAKU,WALVsB,WAKU,GAJRC,WAEU,EACV1B,oBAA6D,WAA7D2B,WAA6D,mBAApCrB,cAAS","names":["class","_createElementVNode","id","role","_createElementBlock","_hoisted_1","_hoisted_2","_ctx","_hoisted_3","onClick","type","_hoisted_4","_hoisted_5","_createVNode","_component_GoogleMap","style","center","zoom","_component_Marker","options","_component_InfoWindow","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Map.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"devicesAllTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n        {{ translate(\"btnBack\") }}\r\n      </button>\r\n    </section>\r\n    <section class=\"mt-4\" v-if=\"showMap\">\r\n      <GoogleMap\r\n        api-key=\"AIzaSyBS5cccM97lkMCpieTfkCKC4oiyY-r5vOI\"\r\n        style=\"width: 100%; height: calc(100vh - 200px)\"\r\n        :center=\"center\"\r\n        :zoom=\"18\"\r\n      >\r\n        <Marker :options=\"markerOptions\">\r\n          <InfoWindow>\r\n            <div id=\"contet\">\r\n              <div id=\"siteNotice\"></div>\r\n              <h2 id=\"firstHeading\" class=\"firstHeading\">Apiary</h2>\r\n              <div id=\"bodyContent\">\r\n                <p>\r\n                  <b>{{ translate(\"modalApiaryLocation\") }}{{ location }}</b>\r\n                </p>\r\n                <p>\r\n                  <b>{{ translate(\"modalApiaryAddress\") }}{{ address }}</b>\r\n                </p>\r\n                <p>\r\n                  <b\r\n                    >{{ translate(\"modalApiaryObservations\")\r\n                    }}{{ observations }}</b\r\n                  >\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </InfoWindow>\r\n        </Marker>\r\n      </GoogleMap>\r\n    </section>\r\n\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n    \r\n<style scoped>\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n<script>\r\n  import axios from \"axios\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { defineComponent } from \"vue\";\r\n  import { GoogleMap, Marker, InfoWindow } from \"vue3-google-map\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n\r\n  export default defineComponent({\r\n    mixins: [en, pt],\r\n    components: { GoogleMap, Marker, InfoWindow },\r\n    setup() {\r\n      const center = {\r\n        lat: parseFloat(localStorage.getItem(\"lat\")),\r\n        lng: parseFloat(localStorage.getItem(\"lon\")),\r\n      };\r\n      const markerOptions = {\r\n        position: center,\r\n        label: \"\",\r\n        title: \"Hive\",\r\n      };\r\n      return { center, markerOptions };\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        apiaries: [],\r\n        lang: lang,\r\n        isShow: true,\r\n        showMap: true,\r\n        address: \"\",\r\n        location: \"\",\r\n        observations: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        el: \"#app\",\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.detail();\r\n      this.showMap = false;\r\n      this.isShow = false;\r\n      if (\r\n        localStorage.getItem(\"lat\") == \"null\" ||\r\n        localStorage.getItem(\"lon\") == \"null\"\r\n      ) {\r\n        notify({\r\n          title: this.translate(\"notifWarningTitle\"),\r\n          text: this.translate(\"warnMap\"),\r\n          type: \"warn\",\r\n          duration: 3000,\r\n          speed: 500,\r\n        });\r\n      } else {\r\n        this.showMap = true;\r\n      }\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async detail() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/apiary/one/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.location = response.data.body.location;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      back() {\r\n        if (localStorage.getItem(\"lastroute\") == \"/hives\")\r\n          this.$router.push(\"hives\");\r\n        else if (localStorage.getItem(\"lastroute\") == \"/productionapiary\")\r\n          this.$router.push(\"productionapiary\");\r\n        else this.$router.push(\"hivedetails\");\r\n      },\r\n      teste() {\r\n        alert(\"teste\");\r\n      },\r\n    },\r\n  });\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}