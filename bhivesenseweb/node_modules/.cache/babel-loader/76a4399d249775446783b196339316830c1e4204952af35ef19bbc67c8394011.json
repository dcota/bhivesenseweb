{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new intervention\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      activeClass: \"noerror\",\n      errorClass: \"error\",\n      form: {\n        description: \"\",\n        date: \"\",\n        observations: \"\",\n        notifications: true\n      },\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      isShow: false,\n      lang: lang,\n      isError: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  methods: {\n    async send() {\n      this.isError = false;\n      let postData = {\n        user: this._id,\n        address: this.form.address,\n        location: this.form.location,\n        observations: this.form.observations\n      };\n      //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\n      if (this.checkForm() == true) {\n        this.isShow = true;\n        await axios.post(\"https://bhsapi.duartecota.com/apiary\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            this.showsection = true;\n            this.message.type = \"success\";\n            this.message.msg = this.translate(\"mesNewApiarySuccess\");\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"mesNewApiarySuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n            this.$router.replace(\"apiaries\");\n          } else {\n            this.isShow = false;\n            this.showsection = true;\n            this.message.type = \"danger\";\n            this.message.msg = this.translate(\"mesProblem\");\n          }\n        }).catch(error => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFields\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n    },\n    cleanForm() {\n      this.form.description = \"\", this.form.date = \"\", (this.form.observations = \"\")(this.form.notifications = true);\n      this.isShow = false;\n    },\n    back() {\n      this.$router.replace(\"interventions\");\n    },\n    checkForm() {\n      if (this.form.description == \"\") {\n        this.isError = true;\n        return false;\n      } else if (this.form.date == \"\") {\n        this.isError = true;\n        return false;\n      } else {\n        this.isError = false;\n        return true;\n      }\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","activeClass","errorClass","form","description","date","observations","notifications","message","type","msg","isShow","isError","computed","token","level","_id","methods","send","postData","user","address","location","checkForm","post","headers","Authorization","then","response","http","showsection","translate","title","text","duration","speed","$router","replace","catch","error","cleanForm","back","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Newintervention.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n    <section class=\"container my-body\">\r\n      <h1 class=\"text-center mt-5\">\r\n        {{ translate(\"formNewInterventionTitle\") }}\r\n      </h1>\r\n      <section\r\n        v-if=\"showsection\"\r\n        class=\"alert mt-3 alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        v-bind:class=\"'alert-' + message.type\"\r\n      >\r\n        {{ message.msg }}\r\n      </section>\r\n      <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n        <section class=\"row\">\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"observations\" class=\"form-label\">{{\r\n              translate(\"formNewInterventionDescription\")\r\n            }}</label>\r\n            <textarea\r\n              rows=\"5\"\r\n              v-model=\"form.description\"\r\n              class=\"form-control\"\r\n              id=\"username\"\r\n              style=\"font-size: small\"\r\n              :class=\"[isError ? activeClass : 'error', errorClass]\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"bdate\" class=\"form-label\">{{\r\n              translate(\"formNewInterventionDate\")\r\n            }}</label>\r\n            <input\r\n              class=\"form-control textbox-n\"\r\n              type=\"text\"\r\n              v-model=\"form.date\"\r\n              onfocus=\"(this.type = 'date')\"\r\n              id=\"bdate\"\r\n              style=\"font-size: small\"\r\n              :class=\"{ error: isError }\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"row\">\r\n          <section class=\"col-md-12 g-4\">\r\n            <label for=\"observations\" class=\"form-label\">{{\r\n              translate(\"formNewApiaryObservations\")\r\n            }}</label>\r\n            <textarea\r\n              rows=\"5\"\r\n              v-model=\"form.observations\"\r\n              class=\"form-control\"\r\n              id=\"username\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n        <section class=\"row mt-4\">\r\n          <section>\r\n            <section class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                v-model=\"form.notifications\"\r\n                value=\"\"\r\n                id=\"subscribenews\"\r\n                checked\r\n                style=\"text-align: left: important;\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"subscribenews\">\r\n                {{ translate(\"formNewInterventionNotifications\") }}</label\r\n              >\r\n            </section>\r\n          </section>\r\n        </section>\r\n        <section class=\"text-center\">\r\n          <button @click=\"send\" type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n            {{ translate(\"btnSubmit\") }}\r\n          </button>\r\n          <button\r\n            @click=\"cleanForm()\"\r\n            type=\"button\"\r\n            class=\"btn mt-4 me-4 my-button\"\r\n          >\r\n            {{ translate(\"btnClean\") }}\r\n          </button>\r\n          <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n            {{ translate(\"btnBack\") }}\r\n          </button>\r\n        </section>\r\n      </form>\r\n      <section class=\"text-center\">\r\n        <section v-if=\"isShow\" class=\"text-center\">\r\n          <section class=\"spinner-border mt-4\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </section>\r\n          <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n        </section>\r\n      </section>\r\n      <section class=\"spacer\"></section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.error {\r\n  border-color: red;\r\n  border-width: 3px;\r\n}\r\n\r\n.noerror {\r\n  border-color: none;\r\n  border-width: none;\r\n}\r\n.my-button {\r\n  width: 120px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\n.my-button:hover {\r\n  background-color: white;\r\n  color: black;\r\n}\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n.my-body {\r\n  margin-top: 100px;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new intervention\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        activeClass: \"noerror\",\r\n        errorClass: \"error\",\r\n        form: {\r\n          description: \"\",\r\n          date: \"\",\r\n          observations: \"\",\r\n          notifications: true,\r\n        },\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n        isError: false,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    methods: {\r\n      async send() {\r\n        this.isError = false;\r\n        let postData = {\r\n          user: this._id,\r\n          address: this.form.address,\r\n          location: this.form.location,\r\n          observations: this.form.observations,\r\n        };\r\n        //postData.append(\"lang\", this.lang); //enviar se necessário para e-mail\r\n        if (this.checkForm() == true) {\r\n          this.isShow = true;\r\n          await axios\r\n            .post(\"https://bhsapi.duartecota.com/apiary\", postData, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.http == 201) {\r\n                this.isShow = false;\r\n                this.showsection = true;\r\n                this.message.type = \"success\";\r\n                this.message.msg = this.translate(\"mesNewApiarySuccess\");\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"mesNewApiarySuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n                this.$router.replace(\"apiaries\");\r\n              } else {\r\n                this.isShow = false;\r\n                this.showsection = true;\r\n                this.message.type = \"danger\";\r\n                this.message.msg = this.translate(\"mesProblem\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          this.isShow = false;\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesFields\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n      },\r\n      cleanForm() {\r\n        (this.form.description = \"\"),\r\n          (this.form.date = \"\"),\r\n          (this.form.observations = \"\")((this.form.notifications = true));\r\n        this.isShow = false;\r\n      },\r\n      back() {\r\n        this.$router.replace(\"interventions\");\r\n      },\r\n      checkForm() {\r\n        if (this.form.description == \"\") {\r\n          this.isError = true;\r\n          return false;\r\n        } else if (this.form.date == \"\") {\r\n          this.isError = true;\r\n          return false;\r\n        } else {\r\n          this.isError = false;\r\n          return true;\r\n        }\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}