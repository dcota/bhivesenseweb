{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapMutations, mapGetters } from \"vuex\";\nimport { GET_USER_ID_GETTER, GET_USER_FULLNAME_GETTER, GET_USER_EMAIL_GETTER, GET_USER_TOKEN_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"submit\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        name: \"\",\n        email: \"\",\n        mobile: \"\",\n        message: \"\"\n      },\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      _id: GET_USER_ID_GETTER,\n      _name: GET_USER_FULLNAME_GETTER,\n      _email: GET_USER_EMAIL_GETTER\n    })\n  },\n  mounted() {\n    this.form.name = this._name, this.form.email = this._email;\n  },\n  methods: {\n    async send() {\n      let postData = {\n        user: this._id,\n        name: this.form.name,\n        email: this.form.email,\n        message: this.form.message\n      };\n      if (this.checkForm() == true) {\n        this.isShow = true;\n        await axios.post(\"https://bhsapi.duartecota.com/report\", postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 201) {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"reportSuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n            this.cleanForm();\n          } else {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifErrorTitle\"),\n              text: this.translate(\"mesProblem\"),\n              type: \"error\",\n              duration: 3000,\n              speed: 500\n            });\n          }\n        }).catch(error => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesProblem\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesFields\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n        return;\n      }\n    },\n    cleanForm() {\n      this.form.name = \"\", this.form.email = \"\", this.form.mobile = \"\", this.form.message = \"\";\n    },\n    back() {\n      this.$router.replace(\"/\");\n    },\n    checkForm() {\n      if (this.form.name == \"\" || this.form.email == \"\" || this.form.message == \"\") return false;else return true;\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapMutations","mapGetters","GET_USER_ID_GETTER","GET_USER_FULLNAME_GETTER","GET_USER_EMAIL_GETTER","GET_USER_TOKEN_GETTER","name","mixins","data","lang","localStorage","getItem","form","email","mobile","message","isShow","computed","token","_id","_name","_email","mounted","methods","send","postData","user","checkForm","post","headers","Authorization","then","response","http","title","translate","text","type","duration","speed","cleanForm","catch","error","back","$router","replace","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Report.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n    <section class=\"container my-body\">\r\n      <h1 class=\"my-text-color\">{{ translate(\"reportTitle\") }}</h1>\r\n      <section class=\"line-1\"></section>\r\n      <form class=\"form-signin\" v-on:submit.prevent=\"send\">\r\n        <section class=\"row mt-4\">\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"name\" class=\"form-label\">{{\r\n              translate(\"newAccNamePh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n          <section class=\"col-md-6 g-4\">\r\n            <label for=\"name\" class=\"form-label\">{{\r\n              translate(\"newAccEmailPh\")\r\n            }}</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.email\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n\r\n        <section class=\"row\">\r\n          <section class=\"col-md-12 g-4\">\r\n            <label for=\"mobile\" class=\"form-label\">{{\r\n              translate(\"reportText\")\r\n            }}</label>\r\n            <textarea\r\n              type=\"text\"\r\n              rows=\"10\"\r\n              v-model=\"form.message\"\r\n              class=\"form-control\"\r\n              id=\"mobile\"\r\n              style=\"font-size: small\"\r\n            />\r\n          </section>\r\n        </section>\r\n\r\n        <section class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn mt-4 me-4 my-button\">\r\n            <section v-if=\"!isShow\">\r\n              <i class=\"fa-solid fa-share-from-square\"></i>\r\n              {{ translate(\"btnSubmit\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n          <button\r\n            @click=\"cleanForm\"\r\n            type=\"button\"\r\n            class=\"btn mt-4 me-4 my-button\"\r\n          >\r\n            <section v-if=\"!isShow\">\r\n              <i class=\"fa-solid fa-eraser\"></i>\r\n              {{ translate(\"btnClean\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n          <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n            <section v-if=\"!isShow\">\r\n              <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n              {{ translate(\"btnBack\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n        </section>\r\n      </form>\r\n      <section class=\"spacer\"></section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapMutations, mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_ID_GETTER,\r\n    GET_USER_FULLNAME_GETTER,\r\n    GET_USER_EMAIL_GETTER,\r\n    GET_USER_TOKEN_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"submit\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          name: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          message: \"\",\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        _name: GET_USER_FULLNAME_GETTER,\r\n        _email: GET_USER_EMAIL_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      (this.form.name = this._name), (this.form.email = this._email);\r\n    },\r\n    methods: {\r\n      async send() {\r\n        let postData = {\r\n          user: this._id,\r\n          name: this.form.name,\r\n          email: this.form.email,\r\n          message: this.form.message,\r\n        };\r\n        if (this.checkForm() == true) {\r\n          this.isShow = true;\r\n          await axios\r\n            .post(\"https://bhsapi.duartecota.com/report\", postData, {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.http == 201) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"reportSuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n                this.cleanForm();\r\n              } else {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifErrorTitle\"),\r\n                  text: this.translate(\"mesProblem\"),\r\n                  type: \"error\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesProblem\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          this.isShow = false;\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesFields\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n          return;\r\n        }\r\n      },\r\n      cleanForm() {\r\n        (this.form.name = \"\"),\r\n          (this.form.email = \"\"),\r\n          (this.form.mobile = \"\"),\r\n          (this.form.message = \"\");\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      checkForm() {\r\n        if (\r\n          this.form.name == \"\" ||\r\n          this.form.email == \"\" ||\r\n          this.form.message == \"\"\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}