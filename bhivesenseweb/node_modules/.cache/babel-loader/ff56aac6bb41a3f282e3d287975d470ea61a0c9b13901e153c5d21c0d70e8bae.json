{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { defineComponent } from \"vue\";\nimport { GoogleMap, Marker, InfoWindow } from \"vue3-google-map\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default defineComponent({\n  mixins: [en, pt],\n  components: {\n    GoogleMap,\n    Marker,\n    InfoWindow\n  },\n  setup() {\n    const center = {\n      lat: parseFloat(localStorage.getItem(\"lat\")),\n      lng: parseFloat(localStorage.getItem(\"lon\"))\n    };\n    const markerOptions = {\n      position: center,\n      label: \"\",\n      title: \"Hive\"\n    };\n    return {\n      center,\n      markerOptions\n    };\n  },\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      apiaries: [],\n      lang: lang,\n      isShow: true,\n      showMap: true,\n      address: \"\",\n      location: \"\",\n      observations: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER,\n      el: \"#app\"\n    })\n  },\n  mounted() {\n    this.detail();\n    this.showMap = false;\n    this.isShow = false;\n    if (localStorage.getItem(\"lat\") == \"null\" || localStorage.getItem(\"lon\") == \"null\") {\n      notify({\n        title: this.translate(\"notifWarningTitle\"),\n        text: this.translate(\"warnMap\"),\n        type: \"warn\",\n        duration: 3000,\n        speed: 500\n      });\n    } else {\n      this.showMap = true;\n    }\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    async detail() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/one/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        console.log(response);\n        this.address = response.data.body.address;\n        this.observations = response.data.body.observations;\n        this.location = response.data.body.location;\n        this.isShow = false;\n        return true;\n      }).catch(() => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n        this.isShow = false;\n        return false;\n      });\n    },\n    back() {\n      this.$router.push(\"hivedetails\");\n    },\n    teste() {\n      alert(\"teste\");\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["axios","en","pt","notify","defineComponent","GoogleMap","Marker","InfoWindow","mapGetters","mapActions","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","mixins","components","setup","center","lat","parseFloat","localStorage","getItem","lng","markerOptions","position","label","title","data","lang","apiaries","isShow","showMap","address","location","observations","computed","token","level","_id","el","mounted","detail","translate","text","type","duration","speed","methods","prop","get","headers","Authorization","then","response","console","log","body","catch","back","$router","push","teste","alert"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Map.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"devicesAllTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button @click=\"back()\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n        {{ translate(\"btnBack\") }}\r\n      </button>\r\n    </section>\r\n    <section class=\"text-center mt-4\" v-if=\"showMap\">\r\n      <GoogleMap\r\n        api-key=\"AIzaSyBS5cccM97lkMCpieTfkCKC4oiyY-r5vOI\"\r\n        style=\"width: 100%; height: calc(100vh - 200px)\"\r\n        :center=\"center\"\r\n        :zoom=\"18\"\r\n      >\r\n        <Marker :options=\"markerOptions\">\r\n          <!--<InfoWindow :options=\"{ position: center, content: 'Hello World!' }\" />-->\r\n          <InfoWindow>\r\n            <div id=\"contet\">\r\n              <div id=\"siteNotice\"></div>\r\n              <h2 id=\"firstHeading\" class=\"firstHeading\">Apiary</h2>\r\n              <div id=\"bodyContent\">\r\n                <p>\r\n                  <b>{{ translate(\"modalApiaryLocation\") }}{{ location }}</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </InfoWindow>\r\n        </Marker>\r\n      </GoogleMap>\r\n    </section>\r\n\r\n    <section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n    \r\n<style scoped>\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n<script>\r\n  import axios from \"axios\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { defineComponent } from \"vue\";\r\n  import { GoogleMap, Marker, InfoWindow } from \"vue3-google-map\";\r\n  import { mapGetters, mapActions } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n\r\n  export default defineComponent({\r\n    mixins: [en, pt],\r\n    components: { GoogleMap, Marker, InfoWindow },\r\n    setup() {\r\n      const center = {\r\n        lat: parseFloat(localStorage.getItem(\"lat\")),\r\n        lng: parseFloat(localStorage.getItem(\"lon\")),\r\n      };\r\n      const markerOptions = {\r\n        position: center,\r\n        label: \"\",\r\n        title: \"Hive\",\r\n      };\r\n      return { center, markerOptions };\r\n    },\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        apiaries: [],\r\n        lang: lang,\r\n        isShow: true,\r\n        showMap: true,\r\n        address: \"\",\r\n        location: \"\",\r\n        observations: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        el: \"#app\",\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.detail();\r\n      this.showMap = false;\r\n      this.isShow = false;\r\n      if (\r\n        localStorage.getItem(\"lat\") == \"null\" ||\r\n        localStorage.getItem(\"lon\") == \"null\"\r\n      ) {\r\n        notify({\r\n          title: this.translate(\"notifWarningTitle\"),\r\n          text: this.translate(\"warnMap\"),\r\n          type: \"warn\",\r\n          duration: 3000,\r\n          speed: 500,\r\n        });\r\n      } else {\r\n        this.showMap = true;\r\n      }\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      async detail() {\r\n        this.isShow = true;\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/apiary/one/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            this.address = response.data.body.address;\r\n            this.observations = response.data.body.observations;\r\n            this.location = response.data.body.location;\r\n            this.isShow = false;\r\n            return true;\r\n          })\r\n          .catch(() => {\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesProblem\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n            this.isShow = false;\r\n            return false;\r\n          });\r\n      },\r\n      back() {\r\n        this.$router.push(\"hivedetails\");\r\n      },\r\n      teste() {\r\n        alert(\"teste\");\r\n      },\r\n    },\r\n  });\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}