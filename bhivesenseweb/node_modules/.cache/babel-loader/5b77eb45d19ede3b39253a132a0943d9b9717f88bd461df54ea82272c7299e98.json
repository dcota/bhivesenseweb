{"ast":null,"code":"import axios from \"axios\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { IS_USER_AUTHENTICATED_GETTER, GET_USER_ID_GETTER, GET_USER_TOKEN_GETTER, AUTO_NUMEVENTS_ACTION, GET_NUMEVENTS_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      logo: require(\"../assets/IMG1224.png\"),\n      lang: lang,\n      nEvents: \"\",\n      timer: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\n      token: GET_USER_TOKEN_GETTER,\n      _id: GET_USER_ID_GETTER,\n      numEvents: GET_NUMEVENTS_GETTER,\n      auth: localStorage.getItem(\"auth\")\n    })\n  },\n  mounted() {\n    this.updateEvents();\n    this.timer = setInterval(this.updateEvents, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  methods: {\n    ...mapActions(\"auth\", {\n      _numEventsChng: AUTO_NUMEVENTS_ACTION\n    }),\n    updateEvents() {\n      this.numEvents == null ? this.nEvents = 0 : this.nEvents = this.numEvents;\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"AAqFE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,SACEC,4BAA4B,EAC5BC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,oBAAoB,QACf,yBAAyB;AAChC,eAAe;EACbC,MAAM,EAAE,CAACT,EAAE,EAAEC,EAAE,CAAC;EAChBS,IAAI,EAAE,YAAY;IAChB,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,OAAO;MACLC,IAAI,EAAEC,OAAO,CAAC,uBAAuB,CAAC;MACtCJ,IAAI,EAAEA,IAAI;MACVK,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGf,UAAU,CAAC,MAAM,EAAE;MACpBgB,eAAe,EAAEf,4BAA4B;MAC7CgB,KAAK,EAAEd,qBAAqB;MAC5Be,GAAG,EAAEhB,kBAAkB;MACvBiB,SAAS,EAAEd,oBAAoB;MAC/Be,IAAI,EAAEX,YAAY,CAACC,OAAO,CAAC,MAAM;IACnC,CAAC;EACH,CAAC;EACDW,OAAO,GAAG;IACR,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACR,KAAI,GAAIS,WAAW,CAAC,IAAI,CAACD,YAAY,EAAE,IAAI,CAAC;EACnD,CAAC;EACDE,aAAa,GAAG;IACdC,aAAa,CAAC,IAAI,CAACX,KAAK,CAAC;IACzB,IAAI,CAACA,KAAI,GAAI,IAAI;EACnB,CAAC;EACDY,OAAO,EAAE;IACP,GAAG3B,UAAU,CAAC,MAAM,EAAE;MACpB4B,cAAc,EAAEvB;IAClB,CAAC,CAAC;IACFkB,YAAY,GAAG;MACb,IAAI,CAACH,SAAQ,IAAK,IAAG,GAChB,IAAI,CAACN,OAAM,GAAI,CAAC,GAChB,IAAI,CAACA,OAAM,GAAI,IAAI,CAACM,SAAU;IACrC,CAAC;IACDS,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAACrB,IAAI,CAAC,CAACqB,IAAI,CAAC;IAC9B;EACF;AACF,CAAC","names":["axios","en","pt","mapActions","mapGetters","IS_USER_AUTHENTICATED_GETTER","GET_USER_ID_GETTER","GET_USER_TOKEN_GETTER","AUTO_NUMEVENTS_ACTION","GET_NUMEVENTS_GETTER","mixins","data","lang","localStorage","getItem","logo","require","nEvents","timer","computed","isAuthenticated","token","_id","numEvents","auth","mounted","updateEvents","setInterval","beforeUnmount","clearInterval","methods","_numEventsChng","translate","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Homebeekeeper.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Home\r\n*/\r\n\r\n<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"myDashTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section class=\"row mt-3\">\r\n      <section class=\"col-12 col-md-3 col-lg-3\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong><span> Notifications</span></strong>\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center my-indicator-green\" v-if=\"nEvents == 0\">\r\n              {{ nEvents }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('notifications')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: small\"\r\n                >\r\n                  Go to notifications\r\n                </button>\r\n              </section>\r\n            </section>\r\n\r\n            <section class=\"text-center my-indicator-red\" v-if=\"nEvents > 0\">\r\n              {{ nEvents }}\r\n              <hr />\r\n              <section class=\"text-center\">\r\n                <button\r\n                  @click=\"this.$router.push('notifications')\"\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: small\"\r\n                >\r\n                  Go to notifications\r\n                </button>\r\n              </section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-indicator-green {\r\n  font-size: 30px;\r\n  color: #198754;\r\n}\r\n.my-indicator-red {\r\n  font-size: 30px;\r\n  color: #dc3545;\r\n}\r\n.my-img {\r\n  max-width: 30%;\r\n  height: auto;\r\n}\r\n\r\nh3 {\r\n  color: #c55a11 !important;\r\n  position: relative;\r\n  margin-top: 40px;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n  letter-spacing: 10px;\r\n}\r\n</style>     \r\n\r\n<script>\r\n  import axios from \"axios\";\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import { mapActions, mapGetters } from \"vuex\";\r\n  import {\r\n    IS_USER_AUTHENTICATED_GETTER,\r\n    GET_USER_ID_GETTER,\r\n    GET_USER_TOKEN_GETTER,\r\n    AUTO_NUMEVENTS_ACTION,\r\n    GET_NUMEVENTS_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data: function () {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        logo: require(\"../assets/IMG1224.png\"),\r\n        lang: lang,\r\n        nEvents: \"\",\r\n        timer: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\r\n        token: GET_USER_TOKEN_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n        numEvents: GET_NUMEVENTS_GETTER,\r\n        auth: localStorage.getItem(\"auth\"),\r\n      }),\r\n    },\r\n    mounted() {\r\n      this.updateEvents();\r\n      this.timer = setInterval(this.updateEvents, 1000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    methods: {\r\n      ...mapActions(\"auth\", {\r\n        _numEventsChng: AUTO_NUMEVENTS_ACTION,\r\n      }),\r\n      updateEvents() {\r\n        this.numEvents == null\r\n          ? (this.nEvents = 0)\r\n          : (this.nEvents = this.numEvents);\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n    },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}