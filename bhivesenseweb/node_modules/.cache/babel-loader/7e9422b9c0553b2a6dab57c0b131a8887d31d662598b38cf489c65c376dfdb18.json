{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { IS_USER_AUTHENTICATED_GETTER, GET_USER_ID_GETTER, GET_USER_TOKEN_GETTER, AUTO_NUMEVENTS_ACTION, GET_NUMEVENTS_GETTER } from \"../store/storeconstants\";\nexport default {\n  mixins: [en, pt],\n  data: function () {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      logo: require(\"../assets/IMG1224.png\"),\n      lang: lang,\n      nEvents: \"\",\n      eventsText: \"\",\n      nInterventions: 0,\n      interventionsText: \"\",\n      nMessages: 0,\n      totalApiaries: \"\",\n      totalHives: \"\",\n      totalProduction: \"\",\n      timer: \"\",\n      isShow: true,\n      interventions: [],\n      harvestEvents: [],\n      nHarvest: \"\",\n      nSwarming: 0,\n      harvestText: \"\",\n      swarmingText: \"\",\n      hiveEvents: [],\n      lastNumEvents: 0\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      isAuthenticated: IS_USER_AUTHENTICATED_GETTER,\n      token: GET_USER_TOKEN_GETTER,\n      _id: GET_USER_ID_GETTER,\n      numEvents: GET_NUMEVENTS_GETTER,\n      auth: localStorage.getItem(\"auth\")\n    })\n  },\n  mounted() {\n    this.refreshDashboard();\n    this.updateEvents();\n    this.timer = setInterval(this.updateEvents, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  methods: {\n    ...mapActions(\"auth\", {\n      _numEventsChng: AUTO_NUMEVENTS_ACTION\n    }),\n    interventionsEvent() {\n      localStorage.setItem(\"teste\", JSON.stringify(this.interventions));\n      this.$router.push(\"sooninterventions\");\n    },\n    refreshDashboard() {\n      this.updateHarvest();\n      this.updateEvents();\n      this.updateInterventions();\n      this.updateTotalApiaries();\n      this.updateTotalHives();\n      this.updateTotalProduction();\n      this.updateSwarming();\n      this.getLog();\n    },\n    updateEvents() {\n      if (this.numEvents != this.lastNumEvents) {\n        this.lastNumEvents = this.numEvents;\n        this.refreshDashboard();\n      }\n      if (this.numEvents == null) {\n        this.nEvents = 0;\n        this.eventsText = this.translate(\"dashEventsTextNo\");\n      } else {\n        this.nEvents = this.numEvents;\n        this.eventsText = this.translate(\"dashEventsTextYes\");\n      }\n    },\n    async updateInterventions() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.body.length == 0) {\n          this.nInterventions = 0;\n          this.interventionsText = this.translate(\"interventionsTextNo\");\n        } else {\n          this.interventions = response.data.body;\n          this.nInterventions = response.data.body.length;\n          this.interventionsText = this.translate(\"interventionsTextYes\");\n        }\n      });\n    },\n    async updateHarvest() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (events.length == 0) {\n          this.nHarvest = 0;\n          this.harvestText = this.translate(\"dashHarvestNo\");\n        } else {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].type == \"HARVEST\") {\n              this.nHarvest = events.length;\n              this.harvestText = this.translate(\"dashHarvestYes\");\n              break;\n            } else {\n              this.nHarvest = 0;\n              this.harvestText = this.translate(\"dashHarvestNo\");\n            }\n          }\n        }\n      }).catch(() => {});\n    },\n    async updateTotalApiaries() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalApiaries = response.data.body.totalApiaries;\n      }).catch(() => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    async updateTotalHives() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalHives = response.data.body.totalHives;\n      }).catch(() => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n      this.isShow = false;\n    },\n    async updateTotalProduction() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/harvest/total/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.totalProduction = response.data.body.totalProduction;\n      }).catch(() => {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesProblem\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n      this.isShow = false;\n    },\n    async updateSwarming() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        if (events.length == 0) {\n          this.nSwarming = 0;\n          this.swarmingText = this.translate(\"dashSwarmingTextNo\");\n        } else {\n          for (let i = 0; i < events.length; i++) {\n            if (events[i].type == \"SWARMING\") {\n              this.nSwarming = events.length;\n              this.swarmingText = this.translate(\"dashSwarmingTextYes\");\n              break;\n            } else {\n              this.nSwarming = 0;\n              this.swarmingText = this.translate(\"dashSwarmingTextNo\");\n            }\n          }\n        }\n      }).catch(() => {});\n    },\n    async getLog() {\n      this.isShow = true;\n      await axios.get(\"https://bhsapi.duartecota.com/event/log/\" + this._id, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        this.isShow = false;\n        let events = response.data.body;\n        this.hiveEvents = [];\n        if (!events.length == 0) {\n          for (let i = events.length - 1; i >= events.length - 7; i--) {\n            if (events[i].cat == \"hive\") {\n              let date = new Date(events[i].registration_date);\n              let year = date.getFullYear();\n              let month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n              let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n              this.text = \"\";\n              if (events[i].type == \"LIDOPEN\") {\n                this.text = this.translate(\"hiveText\");\n              } else if (events[i].type == \"TEMPHIGH\") {\n                this.text = this.translate(\"tempText\");\n              } else if (events[i].type == \"HUMHIGH\") {\n                this.text = this.translate(\"humText\");\n              } else if (events[i].type == \"SWARMING\") {\n                this.text = this.translate(\"swarmText\");\n              } else if (events[i].type == \"HARVEST\") {\n                this.text = this.translate(\"harvestText\");\n              }\n              this.hiveEvents.push({\n                _id: events[i]._id,\n                apiary: events[i].apiary,\n                device: events[i].device,\n                date: year + \"-\" + month + \"-\" + day,\n                active: events[i].active,\n                text: this.text\n              });\n            }\n          }\n        }\n      });\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","en","pt","notify","mapActions","mapGetters","IS_USER_AUTHENTICATED_GETTER","GET_USER_ID_GETTER","GET_USER_TOKEN_GETTER","AUTO_NUMEVENTS_ACTION","GET_NUMEVENTS_GETTER","mixins","data","lang","localStorage","getItem","logo","require","nEvents","eventsText","nInterventions","interventionsText","nMessages","totalApiaries","totalHives","totalProduction","timer","isShow","interventions","harvestEvents","nHarvest","nSwarming","harvestText","swarmingText","hiveEvents","lastNumEvents","computed","isAuthenticated","token","_id","numEvents","auth","mounted","refreshDashboard","updateEvents","setInterval","beforeUnmount","clearInterval","methods","_numEventsChng","interventionsEvent","setItem","JSON","stringify","$router","push","updateHarvest","updateInterventions","updateTotalApiaries","updateTotalHives","updateTotalProduction","updateSwarming","getLog","translate","get","headers","Authorization","then","response","body","length","events","i","type","catch","title","text","duration","speed","cat","date","Date","registration_date","year","getFullYear","month","getMonth","day","getDate","apiary","device","active","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\Desktop\\bhivesenseweb\\bhivesenseweb\\src\\views\\Homebeekeeper.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Home\r\n*/\r\n\r\n<template>\r\n\t<section class=\"container my-body\">\r\n\t\t<h2 class=\"my-text-color\">{{ translate(\"myDashTitle\") }}</h2>\r\n\t\t<section class=\"line-1\"></section>\r\n\t\t<section v-if=\"!isShow\">\r\n\t\t\t<!--1st row-->\r\n\t\t\t<section class=\"row mt-3\">\r\n\t\t\t\t<!--events-->\r\n\t\t\t\t<section class=\"col-12 col-md-4 col-lg-4\">\r\n\t\t\t\t\t<section\r\n\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t><span> {{ translate(\"dashNotif\") }}</span></strong\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<section class=\"text-center my-text-green\" v-if=\"nEvents == 0\">\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<i class=\"fa-regular fa-face-smile\" style=\"font-size: 30px\"></i>\r\n\t\t\t\t\t\t\t\t{{ eventsText }}\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('events')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashNotifBtn\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<section class=\"text-center my-text-red\" v-if=\"nEvents > 0\">\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclass=\"fa-regular fa-face-frown\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{{ eventsText }}\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('events')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashNotifBtn\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t\t<!--interventions-->\r\n\t\t\t\t<section class=\"col-12 col-md-4 col-lg-4\">\r\n\t\t\t\t\t<section\r\n\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t><span> {{ translate(\"dashInterventions\") }}</span></strong\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"text-center my-text-green\"\r\n\t\t\t\t\t\t\t\tv-if=\"nInterventions == 0\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclass=\"fa-solid fa-circle-check\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<section>{{ interventionsText }}</section>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('sooninterventions')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashIntervBtn\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"text-center my-text-yellow\"\r\n\t\t\t\t\t\t\t\tv-if=\"nInterventions > 0\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclass=\"fa-solid fa-circle-exclamation\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{{ interventionsText }}\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"interventionsEvent\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px; color: white\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashIntervBtn\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t\t<!--harvest-->\r\n\t\t\t\t<section class=\"col-12 col-md-4 col-lg-4\">\r\n\t\t\t\t\t<section\r\n\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t><span> {{ translate(\"dashHarvest\") }}</span></strong\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<section class=\"text-center my-text-green\" v-if=\"nHarvest == 0\">\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"material-symbols-outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\temoji_nature\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{{ harvestText }}\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('harvest')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashBtnGoToHarvest\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<section class=\"text-center my-text-yellow\" v-if=\"nHarvest > 0\">\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclass=\"fa-solid fa-circle-exclamation\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{{ harvestText }}\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('harvest')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px; color: white\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashBtnGoToHarvest\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\r\n\t\t\t<!--2nd row-->\r\n\t\t\t<section class=\"row mt-3\">\r\n\t\t\t\t<!--logs-->\r\n\t\t\t\t<section class=\"col-12 col-md-6 col-lg-6\">\r\n\t\t\t\t\t<section\r\n\t\t\t\t\t\tclass=\"card mb-3 mh-100\"\r\n\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t><span> {{ translate(\"dashLogsTitle\") }}</span></strong\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t\t<table class=\"table mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashLogsTHEvent\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashLogsTHDate\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr v-for=\"event in hiveEvents\" :key=\"event._id\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{{ event.text }}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ event.date }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('log')\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashLogsBtn\") }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section class=\"col-12 col-md-6 col-lg-6\">\r\n\t\t\t\t\t<section class=\"row\">\r\n\t\t\t\t\t\t<!--swarming-->\r\n\t\t\t\t\t\t<section class=\"col\">\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\t\t\theight: 230px;\r\n\t\t\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t\t\t><span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashSwarmingTitle\") }}</span\r\n\t\t\t\t\t\t\t\t\t\t\t></strong\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\t\t\tclass=\"text-center my-text-green\"\r\n\t\t\t\t\t\t\t\t\t\tv-if=\"nSwarming == 0\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa-solid fa-circle-check\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t{{ swarmingText }}\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('swarming')\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashSwarmingBtn\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\t\t\tclass=\"text-center my-text-yellow\"\r\n\t\t\t\t\t\t\t\t\t\tv-if=\"nSwarming > 0\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa-solid fa-circle-exclamation\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 30px\"\r\n\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t{{ swarmingText }}\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('swarming')\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px; color: white\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashSwarmingBtn\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t<!--production-->\r\n\t\t\t\t\t\t<section class=\"col\">\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\t\t\theight: 210px;\r\n\t\t\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t\t\t><span> {{ translate(\"prodTotalTitle\") }}</span></strong\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t<section class=\"text-center my-indicator-blue\">\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section>{{ totalProduction }} Kg</section>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('production')\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"prodTotalBtn\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section class=\"row\">\r\n\t\t\t\t\t\t<!--apiaries-->\r\n\t\t\t\t\t\t<section class=\"col\">\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\t\t\theight: 210px;\r\n\t\t\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t\t\t><span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashTotalApiaries\") }}</span\r\n\t\t\t\t\t\t\t\t\t\t\t></strong\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t<section class=\"text-center my-indicator-blue\">\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section>{{ totalApiaries }}</section>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('newapiary')\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashApiariesBtn\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t<!--hives-->\r\n\t\t\t\t\t\t<section class=\"col\">\r\n\t\t\t\t\t\t\t<section\r\n\t\t\t\t\t\t\t\tclass=\"card mb-3 mh-100 text-center\"\r\n\t\t\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\t\t\theight: 210px;\r\n\t\t\t\t\t\t\t\t\tborder-radius: 10px;\r\n\t\t\t\t\t\t\t\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n\t\t\t\t\t\t\t\t\t\t0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<section class=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h6 class=\"card-title text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<strong\r\n\t\t\t\t\t\t\t\t\t\t\t><span> {{ translate(\"dashTotalHives\") }}</span></strong\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t<section class=\"text-center my-indicator-blue\">\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section>{{ totalHives }}</section>\r\n\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t<section class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t@click=\"this.$router.push('newdevice')\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: small; width: 160px\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ translate(\"dashHivesBtn\") }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t\t<!--<section class=\"text-center\">\r\n      <section v-if=\"isShow\" class=\"text-center\">\r\n        <section class=\"spinner-border mt-4\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </section>\r\n        <section class=\"mb-2\">{{ translate(\"spinnerTxt\") }}</section>\r\n      </section>\r\n    </section>-->\r\n\t</section>\r\n</template>\r\n\r\n<style scoped>\r\n.my-text-green {\r\n\tfont-size: 17px;\r\n\tcolor: #198754;\r\n}\r\n.my-text-red {\r\n\tfont-size: 17px;\r\n\tcolor: #dc3545;\r\n}\r\n.my-text-yellow {\r\n\tfont-size: 17px;\r\n\tcolor: #ffc107;\r\n}\r\n.my-indicator-green {\r\n\tfont-size: 30px;\r\n\tcolor: #198754;\r\n}\r\n.my-indicator-red {\r\n\tfont-size: 30px;\r\n\tcolor: #dc3545;\r\n}\r\n.my-indicator-blue {\r\n\tfont-size: 30px;\r\n\tcolor: #007bff;\r\n}\r\n.my-indicator-yellow {\r\n\tfont-size: 30px;\r\n\tcolor: #ffc107;\r\n}\r\n.my-img {\r\n\tmax-width: 30%;\r\n\theight: auto;\r\n}\r\n\r\nh3 {\r\n\tcolor: #c55a11 !important;\r\n\tposition: relative;\r\n\tmargin-top: 40px;\r\n\tfont-family: \"Times New Roman\", Times, serif;\r\n\tletter-spacing: 10px;\r\n}\r\n</style>     \r\n\r\n<script>\r\n\timport axios from \"axios\";\r\n\timport en from \"../assets/en.js\";\r\n\timport pt from \"../assets/pt.js\";\r\n\timport { notify } from \"@kyvg/vue3-notification\";\r\n\timport { mapActions, mapGetters } from \"vuex\";\r\n\timport {\r\n\t\tIS_USER_AUTHENTICATED_GETTER,\r\n\t\tGET_USER_ID_GETTER,\r\n\t\tGET_USER_TOKEN_GETTER,\r\n\t\tAUTO_NUMEVENTS_ACTION,\r\n\t\tGET_NUMEVENTS_GETTER,\r\n\t} from \"../store/storeconstants\";\r\n\texport default {\r\n\t\tmixins: [en, pt],\r\n\t\tdata: function () {\r\n\t\t\tconst lang = localStorage.getItem(\"lang\") || \"pt\";\r\n\t\t\treturn {\r\n\t\t\t\tlogo: require(\"../assets/IMG1224.png\"),\r\n\t\t\t\tlang: lang,\r\n\t\t\t\tnEvents: \"\",\r\n\t\t\t\teventsText: \"\",\r\n\t\t\t\tnInterventions: 0,\r\n\t\t\t\tinterventionsText: \"\",\r\n\t\t\t\tnMessages: 0,\r\n\t\t\t\ttotalApiaries: \"\",\r\n\t\t\t\ttotalHives: \"\",\r\n\t\t\t\ttotalProduction: \"\",\r\n\t\t\t\ttimer: \"\",\r\n\t\t\t\tisShow: true,\r\n\t\t\t\tinterventions: [],\r\n\t\t\t\tharvestEvents: [],\r\n\t\t\t\tnHarvest: \"\",\r\n\t\t\t\tnSwarming: 0,\r\n\t\t\t\tharvestText: \"\",\r\n\t\t\t\tswarmingText: \"\",\r\n\t\t\t\thiveEvents: [],\r\n\t\t\t\tlastNumEvents: 0,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapGetters(\"auth\", {\r\n\t\t\t\tisAuthenticated: IS_USER_AUTHENTICATED_GETTER,\r\n\t\t\t\ttoken: GET_USER_TOKEN_GETTER,\r\n\t\t\t\t_id: GET_USER_ID_GETTER,\r\n\t\t\t\tnumEvents: GET_NUMEVENTS_GETTER,\r\n\t\t\t\tauth: localStorage.getItem(\"auth\"),\r\n\t\t\t}),\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.refreshDashboard();\r\n\t\t\tthis.updateEvents();\r\n\t\t\tthis.timer = setInterval(this.updateEvents, 1000);\r\n\t\t},\r\n\t\tbeforeUnmount() {\r\n\t\t\tclearInterval(this.timer);\r\n\t\t\tthis.timer = null;\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapActions(\"auth\", {\r\n\t\t\t\t_numEventsChng: AUTO_NUMEVENTS_ACTION,\r\n\t\t\t}),\r\n\t\t\tinterventionsEvent() {\r\n\t\t\t\tlocalStorage.setItem(\"teste\", JSON.stringify(this.interventions));\r\n\t\t\t\tthis.$router.push(\"sooninterventions\");\r\n\t\t\t},\r\n\t\t\trefreshDashboard() {\r\n\t\t\t\tthis.updateHarvest();\r\n\t\t\t\tthis.updateEvents();\r\n\t\t\t\tthis.updateInterventions();\r\n\t\t\t\tthis.updateTotalApiaries();\r\n\t\t\t\tthis.updateTotalHives();\r\n\t\t\t\tthis.updateTotalProduction();\r\n\t\t\t\tthis.updateSwarming();\r\n\t\t\t\tthis.getLog();\r\n\t\t\t},\r\n\t\t\tupdateEvents() {\r\n\t\t\t\tif (this.numEvents != this.lastNumEvents) {\r\n\t\t\t\t\tthis.lastNumEvents = this.numEvents;\r\n\t\t\t\t\tthis.refreshDashboard();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.numEvents == null) {\r\n\t\t\t\t\tthis.nEvents = 0;\r\n\t\t\t\t\tthis.eventsText = this.translate(\"dashEventsTextNo\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.nEvents = this.numEvents;\r\n\t\t\t\t\tthis.eventsText = this.translate(\"dashEventsTextYes\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tasync updateInterventions() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/intervention/notify/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.body.length == 0) {\r\n\t\t\t\t\t\t\tthis.nInterventions = 0;\r\n\t\t\t\t\t\t\tthis.interventionsText = this.translate(\"interventionsTextNo\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.interventions = response.data.body;\r\n\t\t\t\t\t\t\tthis.nInterventions = response.data.body.length;\r\n\t\t\t\t\t\t\tthis.interventionsText = this.translate(\"interventionsTextYes\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tasync updateHarvest() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tlet events = response.data.body;\r\n\t\t\t\t\t\tif (events.length == 0) {\r\n\t\t\t\t\t\t\tthis.nHarvest = 0;\r\n\t\t\t\t\t\t\tthis.harvestText = this.translate(\"dashHarvestNo\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < events.length; i++) {\r\n\t\t\t\t\t\t\t\tif (events[i].type == \"HARVEST\") {\r\n\t\t\t\t\t\t\t\t\tthis.nHarvest = events.length;\r\n\t\t\t\t\t\t\t\t\tthis.harvestText = this.translate(\"dashHarvestYes\");\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.nHarvest = 0;\r\n\t\t\t\t\t\t\t\t\tthis.harvestText = this.translate(\"dashHarvestNo\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t},\r\n\t\t\tasync updateTotalApiaries() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/apiary/total/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.totalApiaries = response.data.body.totalApiaries;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tasync updateTotalHives() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/device/total/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.totalHives = response.data.body.totalHives;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\tthis.isShow = false;\r\n\t\t\t},\r\n\t\t\tasync updateTotalProduction() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/harvest/total/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.totalProduction = response.data.body.totalProduction;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\ttitle: this.translate(\"notifErrorTitle\"),\r\n\t\t\t\t\t\t\ttext: this.translate(\"mesProblem\"),\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\t\tspeed: 500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\tthis.isShow = false;\r\n\t\t\t},\r\n\t\t\tasync updateSwarming() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/event/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tlet events = response.data.body;\r\n\t\t\t\t\t\tif (events.length == 0) {\r\n\t\t\t\t\t\t\tthis.nSwarming = 0;\r\n\t\t\t\t\t\t\tthis.swarmingText = this.translate(\"dashSwarmingTextNo\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < events.length; i++) {\r\n\t\t\t\t\t\t\t\tif (events[i].type == \"SWARMING\") {\r\n\t\t\t\t\t\t\t\t\tthis.nSwarming = events.length;\r\n\t\t\t\t\t\t\t\t\tthis.swarmingText = this.translate(\"dashSwarmingTextYes\");\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.nSwarming = 0;\r\n\t\t\t\t\t\t\t\t\tthis.swarmingText = this.translate(\"dashSwarmingTextNo\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t},\r\n\t\t\tasync getLog() {\r\n\t\t\t\tthis.isShow = true;\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(\"https://bhsapi.duartecota.com/event/log/\" + this._id, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: this.token,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tthis.isShow = false;\r\n\t\t\t\t\t\tlet events = response.data.body;\r\n\t\t\t\t\t\tthis.hiveEvents = [];\r\n\t\t\t\t\t\tif (!events.length == 0) {\r\n\t\t\t\t\t\t\tfor (let i = events.length - 1; i >= events.length - 7; i--) {\r\n\t\t\t\t\t\t\t\tif (events[i].cat == \"hive\") {\r\n\t\t\t\t\t\t\t\t\tlet date = new Date(events[i].registration_date);\r\n\t\t\t\t\t\t\t\t\tlet year = date.getFullYear();\r\n\t\t\t\t\t\t\t\t\tlet month =\r\n\t\t\t\t\t\t\t\t\t\tdate.getMonth() + 1 < 10\r\n\t\t\t\t\t\t\t\t\t\t\t? \"0\" + (date.getMonth() + 1)\r\n\t\t\t\t\t\t\t\t\t\t\t: date.getMonth() + 1;\r\n\t\t\t\t\t\t\t\t\tlet day =\r\n\t\t\t\t\t\t\t\t\t\tdate.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n\t\t\t\t\t\t\t\t\tthis.text = \"\";\r\n\t\t\t\t\t\t\t\t\tif (events[i].type == \"LIDOPEN\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.text = this.translate(\"hiveText\");\r\n\t\t\t\t\t\t\t\t\t} else if (events[i].type == \"TEMPHIGH\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.text = this.translate(\"tempText\");\r\n\t\t\t\t\t\t\t\t\t} else if (events[i].type == \"HUMHIGH\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.text = this.translate(\"humText\");\r\n\t\t\t\t\t\t\t\t\t} else if (events[i].type == \"SWARMING\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.text = this.translate(\"swarmText\");\r\n\t\t\t\t\t\t\t\t\t} else if (events[i].type == \"HARVEST\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.text = this.translate(\"harvestText\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.hiveEvents.push({\r\n\t\t\t\t\t\t\t\t\t\t_id: events[i]._id,\r\n\t\t\t\t\t\t\t\t\t\tapiary: events[i].apiary,\r\n\t\t\t\t\t\t\t\t\t\tdevice: events[i].device,\r\n\t\t\t\t\t\t\t\t\t\tdate: year + \"-\" + month + \"-\" + day,\r\n\t\t\t\t\t\t\t\t\t\tactive: events[i].active,\r\n\t\t\t\t\t\t\t\t\t\ttext: this.text,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\ttranslate(prop) {\r\n\t\t\t\treturn this[this.lang][prop];\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}