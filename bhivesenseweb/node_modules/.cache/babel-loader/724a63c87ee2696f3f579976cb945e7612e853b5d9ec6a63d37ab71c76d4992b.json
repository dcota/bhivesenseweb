{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nexport default {\n  name: \"new Apiary\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"en\";\n    return {\n      form: {\n        id: \"\",\n        tempInSetpoint: 35,\n        humInSetpoint: 80,\n        weightSetpoint: 40\n      },\n      isShow: false,\n      lang: lang\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  mounted() {\n    alert(localStorage.getItem(\"hiveidtoedit\"));\n  },\n  methods: {\n    async register() {\n      if (this.checkForm()) {\n        this.isShow = true;\n        let postData = {\n          user: this._id\n        };\n        await axios.post(\"https://bhsapi.duartecota.com/device/register/\" + this.form.id, postData, {\n          headers: {\n            Authorization: this.token\n          }\n        }).then(response => {\n          if (response.data.http == 200) {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifSuccessTitle\"),\n              text: this.translate(\"mesRegisterDeviceSuccess\"),\n              type: \"success\",\n              duration: 3000,\n              speed: 500\n            });\n          } else if (response.data.http == 206) {\n            this.isShow = false;\n            notify({\n              title: this.translate(\"notifErrorTitle\"),\n              text: this.translate(\"mesRegisterDeviceError\"),\n              type: \"error\",\n              duration: 3000,\n              speed: 500\n            });\n          }\n        }).catch(() => {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesRegisterDeviceNotFound\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        });\n      } else {\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesEmptyID\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      }\n    },\n    async getDeviceData() {\n      this.isShow = true;\n      let postData = {\n        user: this._id\n      };\n      await axios.post(\"https://bhsapi.duartecota.com/device/register/\" + this.form.id, postData, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        if (response.data.http == 200) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifSuccessTitle\"),\n            text: this.translate(\"mesRegisterDeviceSuccess\"),\n            type: \"success\",\n            duration: 3000,\n            speed: 500\n          });\n        } else if (response.data.http == 206) {\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifErrorTitle\"),\n            text: this.translate(\"mesRegisterDeviceError\"),\n            type: \"error\",\n            duration: 3000,\n            speed: 500\n          });\n        }\n      }).catch(() => {\n        this.isShow = false;\n        notify({\n          title: this.translate(\"notifErrorTitle\"),\n          text: this.translate(\"mesRegisterDeviceNotFound\"),\n          type: \"error\",\n          duration: 3000,\n          speed: 500\n        });\n      });\n    },\n    back() {\n      this.$router.replace(\"/\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    checkForm() {\n      this.isShow = false;\n      if (this.form.tempInSetpoint == \"\" || this.form.humInSetpoint == \"\" || this.form.weightSetpoint == \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","name","mixins","data","lang","localStorage","getItem","form","id","tempInSetpoint","humInSetpoint","weightSetpoint","isShow","computed","token","level","_id","mounted","alert","methods","register","checkForm","postData","user","post","headers","Authorization","then","response","http","title","translate","text","type","duration","speed","catch","getDeviceData","back","$router","replace","prop"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Editdevice.vue"],"sourcesContent":["/*\r\nMEIW - Programação Web Avançada - projeto final\r\nAuhtor: Duarte Cota\r\nDescription: implementation of the view Ficha de Inscrição\r\n*/\r\n\r\n<template>\r\n  <section class=\"container\">\r\n    <section class=\"scrolling-component\" ref=\"scrollcomponent\" name=\"lang\">\r\n      <section class=\"container my-body\">\r\n        <h1 class=\"my-text-color\">{{ translate(\"editHiveTitle\") }}</h1>\r\n        <section class=\"line-1\"></section>\r\n        <section class=\"mt-4\">\r\n          <button type=\"submit\" class=\"btn me-4 my-button\" @click=\"register\">\r\n            <section v-if=\"!isShow\">\r\n              <i class=\"fa-solid fa-share-from-square\"></i>\r\n              {{ translate(\"btnSubmit\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n          <button @click=\"back\" type=\"button\" class=\"btn my-button\">\r\n            <section v-if=\"!isShow\">\r\n              <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n              {{ translate(\"btnBack\") }}\r\n            </section>\r\n            <section\r\n              v-else\r\n              class=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n            ></section>\r\n          </button>\r\n        </section>\r\n        <section class=\"container\" style=\"max-width: 80%\">\r\n          <form class=\"form-signin\" @submit.prevent=\"submit\">\r\n            <!--<section class=\"row\">\r\n              <section class=\"col-md-12 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"formAddDeviceID\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.id\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n            </section>-->\r\n            <section class=\"row\">\r\n              <section class=\"col-md-4 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"tempInSp\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.tempInSetpoint\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n              <section class=\"col-md-4 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"humInSp\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.humInSetpoint\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n              <section class=\"col-md-4 g-4 flex\">\r\n                <label for=\"location\" class=\"form-label\">{{\r\n                  translate(\"weightSp\")\r\n                }}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.weightSetpoint\"\r\n                  class=\"form-control\"\r\n                  id=\"id\"\r\n                  style=\"font-size: medium\"\r\n                />\r\n              </section>\r\n            </section>\r\n          </form>\r\n          <section class=\"spacer\"></section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\nselect option[disabled]:first-child {\r\n  display: none;\r\n}\r\n\r\n.spacer {\r\n  height: 200px;\r\n}\r\n.top-btn {\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  export default {\r\n    name: \"new Apiary\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"en\";\r\n      return {\r\n        form: {\r\n          id: \"\",\r\n          tempInSetpoint: 35,\r\n          humInSetpoint: 80,\r\n          weightSetpoint: 40,\r\n        },\r\n        isShow: false,\r\n        lang: lang,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    mounted() {\r\n      alert(localStorage.getItem(\"hiveidtoedit\"));\r\n    },\r\n    methods: {\r\n      async register() {\r\n        if (this.checkForm()) {\r\n          this.isShow = true;\r\n          let postData = {\r\n            user: this._id,\r\n          };\r\n          await axios\r\n            .post(\r\n              \"https://bhsapi.duartecota.com/device/register/\" + this.form.id,\r\n              postData,\r\n              {\r\n                headers: {\r\n                  Authorization: this.token,\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if (response.data.http == 200) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifSuccessTitle\"),\r\n                  text: this.translate(\"mesRegisterDeviceSuccess\"),\r\n                  type: \"success\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              } else if (response.data.http == 206) {\r\n                this.isShow = false;\r\n                notify({\r\n                  title: this.translate(\"notifErrorTitle\"),\r\n                  text: this.translate(\"mesRegisterDeviceError\"),\r\n                  type: \"error\",\r\n                  duration: 3000,\r\n                  speed: 500,\r\n                });\r\n              }\r\n            })\r\n            .catch(() => {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesRegisterDeviceNotFound\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            });\r\n        } else {\r\n          notify({\r\n            title: this.translate(\"notifErrorTitle\"),\r\n            text: this.translate(\"mesEmptyID\"),\r\n            type: \"error\",\r\n            duration: 3000,\r\n            speed: 500,\r\n          });\r\n        }\r\n      },\r\n      async getDeviceData() {\r\n        this.isShow = true;\r\n        let postData = {\r\n          user: this._id,\r\n        };\r\n        await axios\r\n          .post(\r\n            \"https://bhsapi.duartecota.com/device/register/\" + this.form.id,\r\n            postData,\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.data.http == 200) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifSuccessTitle\"),\r\n                text: this.translate(\"mesRegisterDeviceSuccess\"),\r\n                type: \"success\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else if (response.data.http == 206) {\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifErrorTitle\"),\r\n                text: this.translate(\"mesRegisterDeviceError\"),\r\n                type: \"error\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.isShow = false;\r\n            notify({\r\n              title: this.translate(\"notifErrorTitle\"),\r\n              text: this.translate(\"mesRegisterDeviceNotFound\"),\r\n              type: \"error\",\r\n              duration: 3000,\r\n              speed: 500,\r\n            });\r\n          });\r\n      },\r\n      back() {\r\n        this.$router.replace(\"/\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      checkForm() {\r\n        this.isShow = false;\r\n        if (\r\n          this.form.tempInSetpoint == \"\" ||\r\n          this.form.humInSetpoint == \"\" ||\r\n          this.form.weightSetpoint == \"\"\r\n        ) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}