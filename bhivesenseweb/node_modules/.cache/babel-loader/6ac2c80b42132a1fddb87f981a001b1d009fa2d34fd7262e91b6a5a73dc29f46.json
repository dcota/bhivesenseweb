{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nimport axios from \"axios\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { mapGetters } from \"vuex\";\nimport { GET_USER_TOKEN_GETTER, GET_USER_LEVEL_GETTER, GET_USER_ID_GETTER } from \"../store/storeconstants\";\nimport { template } from \"lodash\";\nexport default {\n  name: \"Hives\",\n  mixins: [en, pt],\n  data() {\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    return {\n      ti: [],\n      to: [],\n      type: null,\n      devices: [],\n      img: require(\"../assets/IMG1220.png\"),\n      lang: lang,\n      message: {\n        type: \"\",\n        msg: \"\"\n      },\n      latestData: {\n        to: \"\",\n        ti: \"\",\n        hi: \"\",\n        ho: \"\",\n        s: \"\",\n        w: \"\",\n        date: \"\",\n        hours: \"\",\n        minutes: \"\"\n      },\n      isShow: true,\n      isModalDetailsVisible: false,\n      isModalDeleteVisible: false,\n      showsection: false,\n      toDeleteID: \"\",\n      toEditID: \"\",\n      toInterventionsID: \"\",\n      loaded: false,\n      hasData: false,\n      ytitle: \"\",\n      title: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", {\n      token: GET_USER_TOKEN_GETTER,\n      level: GET_USER_LEVEL_GETTER,\n      _id: GET_USER_ID_GETTER\n    })\n  },\n  /*mounted() {\r\n                                                                                                                                                                                                                                                                                                                                                                                                this.loaded = false;\r\n                                                                                                                                                                                                                                                                                                                                                                                                this.getLatest();\r\n                                                                                                                                                                                                                                                                                                                                                                                                this.getDay();\r\n                                                                                                                                                                                                                                                                                                                                                                                              },*/\n  created() {\n    this.loaded = false;\n    this.getLatest();\n    this.getTI();\n    this.type = this.ti;\n    this.timer = setInterval(this.getDay, 300000);\n  },\n  beforeUnmount() {\n    this.cancelAutoUpdate();\n  },\n  methods: {\n    cancelAutoUpdate() {\n      clearInterval(this.timer);\n    },\n    async getLatest() {\n      this.isShow = true;\n      this.devices = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/latest/\" + localStorage.getItem(\"hiveIDtoget\") + \"/\" + localStorage.getItem(\"apiaryIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let devices = response.data.body;\n        if (devices.length == 0) {\n          this.hasData = false;\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noDataForHive\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasData = true;\n          this.latestData.ti = devices[0].data.ti;\n          this.latestData.hi = devices[0].data.hi;\n          this.latestData.to = devices[0].data.to;\n          this.latestData.ho = devices[0].data.ho;\n          this.latestData.s = devices[0].data.s;\n          this.latestData.w = devices[0].data.w;\n          let lastDate = new Date(this.padTo2Digits(devices[0].data.date.toLocaleString(\"sv-SE\", {\n            timeZone: \"Atlantic/Azores\"\n          })));\n          let sdConv = this.padTo2Digits(lastDate.toLocaleDateString(\"sv-SE\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\"\n            /*hour: \"2-digit\",\r\n                                                                                                                                                                                                                                          minute: \"2-digit\",\r\n                                                                                                                                                                                                                                          second: \"2-digit\",*/\n          }));\n\n          this.latestData.date = sdConv;\n          this.latestData.hours = lastDate.getHours() < 10 ? \"0\" + lastDate.getHours() : lastDate.getHours();\n          this.latestData.minutes = lastDate.getMinutes() < 10 ? \"0\" + lastDate.getMinutes() : lastDate.getMinutes();\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    async getTI() {\n      this.ytitle = \"TEMP\";\n      this.title = this.translate(\"charTempIn\") + \" (&deg;C)\";\n      this.loaded = false;\n      this.isShow = true;\n      this.ti = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/\" + localStorage.getItem(\"hiveIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let d = response.data.body.data;\n        console.log(d);\n        if (d.length == 0) {\n          this.hasData = false;\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noDataForHive\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasData = true;\n          for (let i = 0; i < d.length; i++) {\n            let today = new Date();\n            let lastDate = new Date(d[i].date.toLocaleString(\"sv-SE\", {\n              timeZone: \"Atlantic/Azores\"\n            }));\n            let tempArray = [];\n            let x = i;\n            tempArray.push(x);\n            let y = d[i].ti;\n            tempArray.push(y);\n            this.ti.push(tempArray);\n          }\n          this.type = this.ti;\n          this.loaded = true;\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    async getTO() {\n      this.ytitle = \"TEMP\";\n      this.title = this.translate(\"charTempOut\") + \" (&deg;C)\";\n      this.loaded = false;\n      this.isShow = true;\n      this.to = [];\n      await axios.get(\"https://bhsapi.duartecota.com/device/\" + localStorage.getItem(\"hiveIDtoget\"), {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(response => {\n        let d = response.data.body.data;\n        console.log(d);\n        if (d.length == 0) {\n          this.hasData = false;\n          this.isShow = false;\n          notify({\n            title: this.translate(\"notifWarningTitle\"),\n            text: this.translate(\"noDataForHive\"),\n            type: \"warn\",\n            duration: 3000,\n            speed: 500\n          });\n        } else {\n          this.hasData = true;\n          for (let i = 0; i < d.length; i++) {\n            let today = new Date();\n            let lastDate = new Date(d[i].date.toLocaleString(\"sv-SE\", {\n              timeZone: \"Atlantic/Azores\"\n            }));\n            let tempArray = [];\n            let x = i;\n            tempArray.push(x);\n            let y = d[i].to;\n            tempArray.push(y);\n            this.to.push(tempArray);\n          }\n          this.type = this.to;\n          this.loaded = true;\n        }\n        this.isShow = false;\n      }).catch(error => {\n        console.log(error);\n        this.isShow = false;\n        this.showsection = true;\n        this.message.type = \"danger\";\n        this.message.msg = this.translate(\"mesProblem\");\n      });\n    },\n    padTo2Digits(num) {\n      return String(num).padStart(2, \"0\");\n    },\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    closeDetailsModal() {\n      this.isModalDetailsVisible = false;\n    },\n    closeDeleteModal() {\n      this.isModalDeleteVisible = false;\n    },\n    map() {\n      this.$router.push(\"map\");\n    },\n    back() {\n      this.$router.push(\"hives\");\n    },\n    handleChange(event) {\n      if (event.target.value == \"ti\") this.getTI();\n      if (event.target.value == \"hi\") this.getHI();\n      if (event.target.value == \"to\") this.getTO();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["en","pt","axios","notify","mapGetters","GET_USER_TOKEN_GETTER","GET_USER_LEVEL_GETTER","GET_USER_ID_GETTER","template","name","mixins","data","lang","localStorage","getItem","ti","to","type","devices","img","require","message","msg","latestData","hi","ho","s","w","date","hours","minutes","isShow","isModalDetailsVisible","isModalDeleteVisible","showsection","toDeleteID","toEditID","toInterventionsID","loaded","hasData","ytitle","title","computed","token","level","_id","created","getLatest","getTI","timer","setInterval","getDay","beforeUnmount","cancelAutoUpdate","methods","clearInterval","get","headers","Authorization","then","response","body","length","translate","text","duration","speed","lastDate","Date","padTo2Digits","toLocaleString","timeZone","sdConv","toLocaleDateString","year","month","day","getHours","getMinutes","catch","error","console","log","d","i","today","tempArray","x","push","y","getTO","num","String","padStart","prop","closeDetailsModal","closeDeleteModal","map","$router","back","handleChange","event","target","value","getHI"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Hivedetails.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <h2 class=\"my-text-color\">{{ translate(\"hiveDetailsTitle\") }}</h2>\r\n    <section class=\"line-1\"></section>\r\n    <section>\r\n      <button @click=\"map\" type=\"button\" class=\"btn mt-4 me-3 my-button\">\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fa-solid fa-map-location-dot\"></i>\r\n          {{ translate(\"lblBtnMap\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n      <button @click=\"back\" type=\"button\" class=\"btn mt-4 my-button\">\r\n        <section v-if=\"!isShow\">\r\n          <i class=\"fas fa-arrow-left me-1 act-btn\" aria-hidden=\"true\"></i>\r\n          {{ translate(\"btnBack\") }}\r\n        </section>\r\n        <section\r\n          v-else\r\n          class=\"spinner-border spinner-border-sm\"\r\n          role=\"status\"\r\n        ></section>\r\n      </button>\r\n      <select\r\n        class=\"form-select mt-4 pull-right\"\r\n        aria-label=\"Default select example\"\r\n        style=\"width: 20%\"\r\n      >\r\n        <option value=\"1\" selected>Today</option>\r\n        <option value=\"2\">Week</option>\r\n        <option value=\"3\">Month</option>\r\n      </select>\r\n    </section>\r\n\r\n    <section class=\"mt-3\" v-bind=\"latestData\" v-if=\"hasData\">\r\n      <h5>\r\n        {{ translate(\"lblLastData\") }} {{ latestData.date }}\r\n        {{ translate(\"lblAt\") }} {{ latestData.hours }}h{{ latestData.minutes }}\r\n      </h5>\r\n    </section>\r\n    <section class=\"row mt-3\" v-bind=\"latestData\">\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100 text-center\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-temperature-high\" aria-hidden=\"true\"\r\n                  ><span> T(in)</span></i\r\n                ></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.ti }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"ti\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n                checked\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-droplet\"><span>% H(in)</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.hi }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"hi\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-temperature-high\" aria-hidden=\"true\"\r\n                  ><span> T(out)</span></i\r\n                ></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.to }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"to\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-droplet\"><span>% H(out)</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.ho }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"ho\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-weight-scale\"></i><span> Kg</span></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.w }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"w\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n      <section class=\"col-12 col-md-4 col-lg-2\" v-if=\"hasData\">\r\n        <section\r\n          class=\"card mb-3 mh-100\"\r\n          style=\"\r\n            border-radius: 35px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1),\r\n              0 6px 20px 0 rgba(0, 0, 0, 0.1);\r\n          \"\r\n        >\r\n          <section class=\"card-body\">\r\n            <h6 class=\"card-title text-center\">\r\n              <strong\r\n                ><i class=\"fas fa-music\"><span> dB</span></i></strong\r\n              >\r\n            </h6>\r\n            <hr />\r\n            <section class=\"text-center\">{{ latestData.s }}</section>\r\n            <div class=\"form-check d-flex justify-content-center\">\r\n              <input\r\n                @change=\"handleChange($event)\"\r\n                value=\"s\"\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDisabled\"\r\n                id=\"flexRadioDisabled\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n\r\n    <section class=\"card p-2\" v-if=\"hasData\">\r\n      <section class=\"h5 text-center\" id=\"title\" v-html=\"title\"></section>\r\n      <!--<Line v-if=\"loaded\" :data=\"data\" :options=\"options\" />-->\r\n      <area-chart\r\n        v-if=\"loaded\"\r\n        :data=\"type\"\r\n        :min=\"0\"\r\n        :max=\"30\"\r\n        :download=\"true\"\r\n        width=\"100%\"\r\n        height=\"500px\"\r\n        :colors=\"['#a17f05']\"\r\n        :dataset=\"{ borderWidth: 2 }\"\r\n        loading=\"Loading...\"\r\n        xtitle=\"Time\"\r\n        :ytitle=\"ytitle\"\r\n      ></area-chart>\r\n    </section>\r\n    <!--<section class=\"spacer\"></section>-->\r\n  </section>\r\n</template>\r\n    \r\n<style scoped>\r\n.bn_card {\r\n  background-color: #ebc002;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n}\r\n\r\n.bn_card:hover {\r\n  background-color: #947902;\r\n}\r\n.spacer {\r\n  height: 200px;\r\n}\r\n</style>\r\n    \r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  import axios from \"axios\";\r\n  import { notify } from \"@kyvg/vue3-notification\";\r\n  import { mapGetters } from \"vuex\";\r\n  import {\r\n    GET_USER_TOKEN_GETTER,\r\n    GET_USER_LEVEL_GETTER,\r\n    GET_USER_ID_GETTER,\r\n  } from \"../store/storeconstants\";\r\n  import { template } from \"lodash\";\r\n  export default {\r\n    name: \"Hives\",\r\n    mixins: [en, pt],\r\n    data() {\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      return {\r\n        ti: [],\r\n        to: [],\r\n        type: null,\r\n        devices: [],\r\n        img: require(\"../assets/IMG1220.png\"),\r\n        lang: lang,\r\n        message: {\r\n          type: \"\",\r\n          msg: \"\",\r\n        },\r\n        latestData: {\r\n          to: \"\",\r\n          ti: \"\",\r\n          hi: \"\",\r\n          ho: \"\",\r\n          s: \"\",\r\n          w: \"\",\r\n          date: \"\",\r\n          hours: \"\",\r\n          minutes: \"\",\r\n        },\r\n        isShow: true,\r\n        isModalDetailsVisible: false,\r\n        isModalDeleteVisible: false,\r\n        showsection: false,\r\n        toDeleteID: \"\",\r\n        toEditID: \"\",\r\n        toInterventionsID: \"\",\r\n        loaded: false,\r\n        hasData: false,\r\n        ytitle: \"\",\r\n        title: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters(\"auth\", {\r\n        token: GET_USER_TOKEN_GETTER,\r\n        level: GET_USER_LEVEL_GETTER,\r\n        _id: GET_USER_ID_GETTER,\r\n      }),\r\n    },\r\n    /*mounted() {\r\n                                                                                                                                                                                                                                                                                                                                                                                                  this.loaded = false;\r\n                                                                                                                                                                                                                                                                                                                                                                                                  this.getLatest();\r\n                                                                                                                                                                                                                                                                                                                                                                                                  this.getDay();\r\n                                                                                                                                                                                                                                                                                                                                                                                                },*/\r\n    created() {\r\n      this.loaded = false;\r\n      this.getLatest();\r\n      this.getTI();\r\n      this.type = this.ti;\r\n      this.timer = setInterval(this.getDay, 300000);\r\n    },\r\n    beforeUnmount() {\r\n      this.cancelAutoUpdate();\r\n    },\r\n    methods: {\r\n      cancelAutoUpdate() {\r\n        clearInterval(this.timer);\r\n      },\r\n      async getLatest() {\r\n        this.isShow = true;\r\n        this.devices = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/latest/\" +\r\n              localStorage.getItem(\"hiveIDtoget\") +\r\n              \"/\" +\r\n              localStorage.getItem(\"apiaryIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let devices = response.data.body;\r\n            if (devices.length == 0) {\r\n              this.hasData = false;\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noDataForHive\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasData = true;\r\n              this.latestData.ti = devices[0].data.ti;\r\n              this.latestData.hi = devices[0].data.hi;\r\n              this.latestData.to = devices[0].data.to;\r\n              this.latestData.ho = devices[0].data.ho;\r\n              this.latestData.s = devices[0].data.s;\r\n              this.latestData.w = devices[0].data.w;\r\n              let lastDate = new Date(\r\n                this.padTo2Digits(\r\n                  devices[0].data.date.toLocaleString(\"sv-SE\", {\r\n                    timeZone: \"Atlantic/Azores\",\r\n                  })\r\n                )\r\n              );\r\n              let sdConv = this.padTo2Digits(\r\n                lastDate.toLocaleDateString(\"sv-SE\", {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n                  /*hour: \"2-digit\",\r\n                                                                                                                                                                                                                                                minute: \"2-digit\",\r\n                                                                                                                                                                                                                                                second: \"2-digit\",*/\r\n                })\r\n              );\r\n              this.latestData.date = sdConv;\r\n              this.latestData.hours =\r\n                lastDate.getHours() < 10\r\n                  ? \"0\" + lastDate.getHours()\r\n                  : lastDate.getHours();\r\n              this.latestData.minutes =\r\n                lastDate.getMinutes() < 10\r\n                  ? \"0\" + lastDate.getMinutes()\r\n                  : lastDate.getMinutes();\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      async getTI() {\r\n        this.ytitle = \"TEMP\";\r\n        this.title = this.translate(\"charTempIn\") + \" (&deg;C)\";\r\n        this.loaded = false;\r\n        this.isShow = true;\r\n        this.ti = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              localStorage.getItem(\"hiveIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let d = response.data.body.data;\r\n            console.log(d);\r\n            if (d.length == 0) {\r\n              this.hasData = false;\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noDataForHive\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasData = true;\r\n              for (let i = 0; i < d.length; i++) {\r\n                let today = new Date();\r\n                let lastDate = new Date(\r\n                  d[i].date.toLocaleString(\"sv-SE\", {\r\n                    timeZone: \"Atlantic/Azores\",\r\n                  })\r\n                );\r\n                let tempArray = [];\r\n                let x = i;\r\n                tempArray.push(x);\r\n                let y = d[i].ti;\r\n                tempArray.push(y);\r\n                this.ti.push(tempArray);\r\n              }\r\n              this.type = this.ti;\r\n              this.loaded = true;\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      async getTO() {\r\n        this.ytitle = \"TEMP\";\r\n        this.title = this.translate(\"charTempOut\") + \" (&deg;C)\";\r\n        this.loaded = false;\r\n        this.isShow = true;\r\n        this.to = [];\r\n        await axios\r\n          .get(\r\n            \"https://bhsapi.duartecota.com/device/\" +\r\n              localStorage.getItem(\"hiveIDtoget\"),\r\n            {\r\n              headers: {\r\n                Authorization: this.token,\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let d = response.data.body.data;\r\n            console.log(d);\r\n            if (d.length == 0) {\r\n              this.hasData = false;\r\n              this.isShow = false;\r\n              notify({\r\n                title: this.translate(\"notifWarningTitle\"),\r\n                text: this.translate(\"noDataForHive\"),\r\n                type: \"warn\",\r\n                duration: 3000,\r\n                speed: 500,\r\n              });\r\n            } else {\r\n              this.hasData = true;\r\n              for (let i = 0; i < d.length; i++) {\r\n                let today = new Date();\r\n                let lastDate = new Date(\r\n                  d[i].date.toLocaleString(\"sv-SE\", {\r\n                    timeZone: \"Atlantic/Azores\",\r\n                  })\r\n                );\r\n                let tempArray = [];\r\n                let x = i;\r\n                tempArray.push(x);\r\n                let y = d[i].to;\r\n                tempArray.push(y);\r\n                this.to.push(tempArray);\r\n              }\r\n              this.type = this.to;\r\n              this.loaded = true;\r\n            }\r\n            this.isShow = false;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.isShow = false;\r\n            this.showsection = true;\r\n            this.message.type = \"danger\";\r\n            this.message.msg = this.translate(\"mesProblem\");\r\n          });\r\n      },\r\n      padTo2Digits(num) {\r\n        return String(num).padStart(2, \"0\");\r\n      },\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      closeDetailsModal() {\r\n        this.isModalDetailsVisible = false;\r\n      },\r\n      closeDeleteModal() {\r\n        this.isModalDeleteVisible = false;\r\n      },\r\n      map() {\r\n        this.$router.push(\"map\");\r\n      },\r\n      back() {\r\n        this.$router.push(\"hives\");\r\n      },\r\n      handleChange(event) {\r\n        if (event.target.value == \"ti\") this.getTI();\r\n        if (event.target.value == \"hi\") this.getHI();\r\n        if (event.target.value == \"to\") this.getTO();\r\n      },\r\n    },\r\n  };\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}