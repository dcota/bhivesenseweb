{"ast":null,"code":"import en from \"../assets/en.js\";\nimport pt from \"../assets/pt.js\";\nexport default {\n  mixins: [en, pt],\n  data() {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const lang = localStorage.getItem(\"lang\") || \"pt\";\n    const todos = [{\n      description: \"Take Noah to basketball practice.\",\n      isComplete: true,\n      dates: {\n        weekdays: 6\n      },\n      // Every Friday\n      color: \"red\"\n    }];\n    return {\n      lang: lang,\n      incId: todos.length,\n      todos,\n      attrs: [{\n        key: 1,\n        highlight: {\n          color: \"red\",\n          fillMode: \"solid\",\n          contentClass: \"italic\"\n        },\n        dates: new Date(year, month, 12),\n        customData: {\n          description: \"teste 1\"\n        }\n      }, {\n        key: 2,\n        highlight: {\n          color: \"green\",\n          fillMode: \"solid\"\n        },\n        dates: new Date(year, month, 13),\n        customData: {\n          description: \"teste 2\"\n        }\n      }, {\n        key: 3,\n        highlight: {\n          color: \"yellow\",\n          fillMode: \"solid\"\n        },\n        dates: new Date(year, month, 14),\n        customData: {\n          description: \"teste 3\"\n        }\n      }]\n    };\n  },\n  computed: {\n    attributes() {\n      return [\n      // Attributes for todos\n      ...this.todos.map(todo => ({\n        dates: todo.dates,\n        /*dot: {\r\n              color: todo.color,\r\n              class: todo.isComplete ? \"opacity-75\" : \"\",\r\n            },*/\n        highlight: {\n          color: todo.color,\n          fillMode: \"solid\",\n          class: todo.isComplete ? \"green\" : \"\"\n        },\n        popover: {\n          label: todo.description\n        },\n        customData: todo\n      }))];\n    }\n  },\n  methods: {\n    translate(prop) {\n      return this[this.lang][prop];\n    },\n    teste() {\n      alert(\"teste\");\n    }\n  }\n};","map":{"version":3,"mappings":"AAcE,OAAOA,EAAC,MAAO,iBAAiB;AAChC,OAAOC,EAAC,MAAO,iBAAiB;AAChC,eAAe;EACbC,MAAM,EAAE,CAACF,EAAE,EAAEC,EAAE,CAAC;EAChBE,IAAI,GAAG;IACL,MAAMC,IAAG,GAAI,IAAIC,IAAI,EAAE;IACvB,MAAMC,IAAG,GAAIF,IAAI,CAACG,WAAW,EAAE;IAC/B,MAAMC,KAAI,GAAIJ,IAAI,CAACK,QAAQ,EAAE;IAC7B,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI;IACjD,MAAMC,KAAI,GAAI,CACZ;MACEC,WAAW,EAAE,mCAAmC;MAChDC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAC;MAAE;MACxBC,KAAK,EAAE;IACT,CAAC,CACF;IACD,OAAO;MACLR,IAAI,EAAEA,IAAI;MACVS,KAAK,EAAEN,KAAK,CAACO,MAAM;MACnBP,KAAK;MACLQ,KAAK,EAAE,CACL;QACEC,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTL,KAAK,EAAE,KAAK;UACZM,QAAQ,EAAE,OAAO;UACjBC,YAAY,EAAE;QAChB,CAAC;QACDT,KAAK,EAAE,IAAIX,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE,CAAC;QAChCkB,UAAU,EAAE;UACVZ,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACEQ,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTL,KAAK,EAAE,OAAO;UACdM,QAAQ,EAAE;QACZ,CAAC;QACDR,KAAK,EAAE,IAAIX,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE,CAAC;QAChCkB,UAAU,EAAE;UACVZ,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACEQ,GAAG,EAAE,CAAC;QACNC,SAAS,EAAE;UACTL,KAAK,EAAE,QAAQ;UACfM,QAAQ,EAAE;QACZ,CAAC;QACDR,KAAK,EAAE,IAAIX,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,EAAE,CAAC;QAChCkB,UAAU,EAAE;UACVZ,WAAW,EAAE;QACf;MACF,CAAC;IAEL,CAAC;EACH,CAAC;EACDa,QAAQ,EAAE;IACRC,UAAU,GAAG;MACX,OAAO;MACL;MACA,GAAG,IAAI,CAACf,KAAK,CAACgB,GAAG,CAAEC,IAAI,KAAM;QAC3Bd,KAAK,EAAEc,IAAI,CAACd,KAAK;QACjB;;;;QAIAO,SAAS,EAAE;UACTL,KAAK,EAAEY,IAAI,CAACZ,KAAK;UACjBM,QAAQ,EAAE,OAAO;UACjBO,KAAK,EAAED,IAAI,CAACf,UAAS,GAAI,OAAM,GAAI;QACrC,CAAC;QACDiB,OAAO,EAAE;UACPC,KAAK,EAAEH,IAAI,CAAChB;QACd,CAAC;QACDY,UAAU,EAAEI;MACd,CAAC,CAAC,CAAC,CACJ;IACH;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,SAAS,CAACC,IAAI,EAAE;MACd,OAAO,IAAI,CAAC,IAAI,CAAC1B,IAAI,CAAC,CAAC0B,IAAI,CAAC;IAC9B,CAAC;IACDC,KAAK,GAAG;MACNC,KAAK,CAAC,OAAO,CAAC;IAChB;EACF;AACF,CAAC","names":["en","pt","mixins","data","date","Date","year","getFullYear","month","getMonth","lang","localStorage","getItem","todos","description","isComplete","dates","weekdays","color","incId","length","attrs","key","highlight","fillMode","contentClass","customData","computed","attributes","map","todo","class","popover","label","methods","translate","prop","teste","alert"],"sourceRoot":"","sources":["C:\\Users\\duart\\OneDrive - PGA\\Ambiente de Trabalho\\bhivesenseweb\\bhivesenseweb\\src\\views\\Interventionsalt.vue"],"sourcesContent":["<template>\r\n  <section class=\"container my-body\">\r\n    <hr />\r\n    <h1 class=\"text-center\">{{ translate(\"interventionsTitle\") }}</h1>\r\n    <hr />\r\n\r\n    <v-calendar is-expanded :attributes=\"attributes\"> </v-calendar>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\n  import en from \"../assets/en.js\";\r\n  import pt from \"../assets/pt.js\";\r\n  export default {\r\n    mixins: [en, pt],\r\n    data() {\r\n      const date = new Date();\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth();\r\n      const lang = localStorage.getItem(\"lang\") || \"pt\";\r\n      const todos = [\r\n        {\r\n          description: \"Take Noah to basketball practice.\",\r\n          isComplete: true,\r\n          dates: { weekdays: 6 }, // Every Friday\r\n          color: \"red\",\r\n        },\r\n      ];\r\n      return {\r\n        lang: lang,\r\n        incId: todos.length,\r\n        todos,\r\n        attrs: [\r\n          {\r\n            key: 1,\r\n            highlight: {\r\n              color: \"red\",\r\n              fillMode: \"solid\",\r\n              contentClass: \"italic\",\r\n            },\r\n            dates: new Date(year, month, 12),\r\n            customData: {\r\n              description: \"teste 1\",\r\n            },\r\n          },\r\n          {\r\n            key: 2,\r\n            highlight: {\r\n              color: \"green\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 13),\r\n            customData: {\r\n              description: \"teste 2\",\r\n            },\r\n          },\r\n          {\r\n            key: 3,\r\n            highlight: {\r\n              color: \"yellow\",\r\n              fillMode: \"solid\",\r\n            },\r\n            dates: new Date(year, month, 14),\r\n            customData: {\r\n              description: \"teste 3\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    computed: {\r\n      attributes() {\r\n        return [\r\n          // Attributes for todos\r\n          ...this.todos.map((todo) => ({\r\n            dates: todo.dates,\r\n            /*dot: {\r\n                  color: todo.color,\r\n                  class: todo.isComplete ? \"opacity-75\" : \"\",\r\n                },*/\r\n            highlight: {\r\n              color: todo.color,\r\n              fillMode: \"solid\",\r\n              class: todo.isComplete ? \"green\" : \"\",\r\n            },\r\n            popover: {\r\n              label: todo.description,\r\n            },\r\n            customData: todo,\r\n          })),\r\n        ];\r\n      },\r\n    },\r\n    methods: {\r\n      translate(prop) {\r\n        return this[this.lang][prop];\r\n      },\r\n      teste() {\r\n        alert(\"teste\");\r\n      },\r\n    },\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}